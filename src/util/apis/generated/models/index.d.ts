/*
 * Code generated by Microsoft (R) AutoRest Code Generator 0.17.0.0
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */


/**
 * @class
 * Initializes a new instance of the GetInAppUpdateTokenResponse class.
 * @constructor
 * @member {string} apiToken The api token generated will not be accessible
 * again
 * 
 */
export interface GetInAppUpdateTokenResponse {
  apiToken: string;
}

/**
 * @class
 * Initializes a new instance of the ApiTokensCreateResponse class.
 * @constructor
 * @member {string} id The unique id (UUID) of the api token
 * 
 * @member {string} apiToken The api token generated will not be accessible
 * again
 * 
 * @member {string} [description] The description of the token
 * 
 * @member {array} [scope] The scope for this token.
 * 
 * @member {string} createdAt The creation time
 * 
 */
export interface ApiTokensCreateResponse {
  id: string;
  apiToken: string;
  description?: string;
  scope?: string[];
  createdAt: string;
}

/**
 * @class
 * Initializes a new instance of the ApiTokensCreateRequest class.
 * @constructor
 * @member {string} [description] The description of the token
 * 
 * @member {array} [scope] The scope for this token.
 * 
 */
export interface ApiTokensCreateRequest {
  description?: string;
  scope?: string[];
}

/**
 * @class
 * Initializes a new instance of the ApiTokensGetResponse class.
 * @constructor
 * @member {string} id The unique id (UUID) of the api token
 * 
 * @member {string} [description] The description of the token
 * 
 * @member {array} [scope] The scope for this token.
 * 
 * @member {string} createdAt The creation time
 * 
 */
export interface ApiTokensGetResponse {
  id: string;
  description?: string;
  scope?: string[];
  createdAt: string;
}

/**
 * @class
 * Initializes a new instance of the Status class.
 * @constructor
 * @member {string} statusProperty
 * 
 */
export interface Status {
  statusProperty: string;
}

/**
 * @class
 * Initializes a new instance of the Failure class.
 * @constructor
 * @member {string} message
 * 
 */
export interface Failure {
  message: string;
}

/**
 * @class
 * Initializes a new instance of the ErrorResponse class.
 * @constructor
 * @member {object} error
 * 
 * @member {string} [error.code] Possible values include: 'BadRequest',
 * 'Conflict', 'NotAcceptable', 'NotFound', 'InternalServerError',
 * 'Unauthorized'
 * 
 * @member {string} [error.message]
 * 
 */
export interface ErrorResponse {
  error: ErrorDetails;
}

/**
 * @class
 * Initializes a new instance of the ErrorDetails class.
 * @constructor
 * @member {string} code Possible values include: 'BadRequest', 'Conflict',
 * 'NotAcceptable', 'NotFound', 'InternalServerError', 'Unauthorized'
 * 
 * @member {string} message
 * 
 */
export interface ErrorDetails {
  code: string;
  message: string;
}

/**
 * @class
 * Initializes a new instance of the SuccessResponse class.
 * @constructor
 * @member {string} message
 * 
 */
export interface SuccessResponse {
  message: string;
}

/**
 * @class
 * Initializes a new instance of the ApiTokensPostRequest class.
 * @constructor
 * @member {string} [description] The description of the token
 * 
 * @member {string} [encryptedToken] An encrypted value of the token.
 * 
 * @member {array} [scope] The scope for this token. An array of supported
 * roles.
 * 
 * @member {string} [tokenHash] The hashed value of api token
 * 
 * @member {string} [tokenType] The token's type. public:managed by the user;
 * in_app_update:special token for in-app update scenario; buid:dedicated for
 * CI usage for now; session:for CLI session management; tester_app: used for
 * tester mobile app; default is "public".'. Possible values include:
 * 'public', 'in_app_update', 'build', 'session', 'tester_app'
 * 
 */
export interface ApiTokensPostRequest {
  description?: string;
  encryptedToken?: string;
  scope?: string[];
  tokenHash?: string;
  tokenType?: string;
}

/**
 * @class
 * Initializes a new instance of the AppPatchRequest class.
 * @constructor
 * @member {string} [description] A short text describing the app
 * 
 * @member {string} [displayName] The display name of the app
 * 
 * @member {string} [name] The name of the app used in URLs
 * 
 */
export interface AppPatchRequest {
  description?: string;
  displayName?: string;
  name?: string;
}

/**
 * @class
 * Initializes a new instance of the AppPrivatePatchRequest class.
 * @constructor
 * @member {string} [azureSubscriptionId] The unique ID (UUID) of the Azure
 * subscription associate with the app
 * 
 */
export interface AppPrivatePatchRequest {
  azureSubscriptionId?: string;
}

/**
 * @class
 * Initializes a new instance of the AppRepoPatchRequest class.
 * @constructor
 * @member {string} [repoUrl] The absolute URL of the repository
 * 
 */
export interface AppRepoPatchRequest {
  repoUrl?: string;
}

/**
 * @class
 * Initializes a new instance of the AppRepoPostRequest class.
 * @constructor
 * @member {string} repoUrl The absolute URL of the repository
 * 
 * @member {string} [repoProvider] The provider of the repository. Possible
 * values include: 'github', 'bitbucket', 'vsts'
 * 
 * @member {string} userId The unique id (UUID) of the user who configured the
 * repository
 * 
 */
export interface AppRepoPostRequest {
  repoUrl: string;
  repoProvider?: string;
  userId: string;
}

/**
 * @class
 * Initializes a new instance of the AppRequest class.
 * @constructor
 * @member {string} [description] A short text describing the app
 * 
 * @member {string} displayName The descriptive name of the app. This can
 * contain any characters
 * 
 * @member {string} [name] The name of the app used in URLs
 * 
 * @member {string} os The OS the app will be running on. Possible values
 * include: 'Android', 'iOS', 'Tizen', 'Windows'
 * 
 * @member {string} platform The platform of the app. Possible values include:
 * 'Cordova', 'Java', 'Objective-C-Swift', 'React-Native', 'UWP', 'Xamarin'
 * 
 */
export interface AppRequest {
  description?: string;
  displayName: string;
  name?: string;
  os: string;
  platform: string;
}

/**
 * @class
 * Initializes a new instance of the DistributionGroupPatchRequest class.
 * @constructor
 * @member {string} [name] The name of the distribution group
 * 
 */
export interface DistributionGroupPatchRequest {
  name?: string;
}

/**
 * @class
 * Initializes a new instance of the DistributionGroupRequest class.
 * @constructor
 * @member {string} name The name of the distribution group
 * 
 */
export interface DistributionGroupRequest {
  name: string;
}

/**
 * @class
 * Initializes a new instance of the DistributionGroupUserRequest class.
 * @constructor
 * @member {array} [userEmails] The list of emails of the users
 * 
 */
export interface DistributionGroupUserRequest {
  userEmails?: string[];
}

/**
 * @class
 * Initializes a new instance of the EmailVerificationRequest class.
 * @constructor
 * @member {string} token The verification token that was sent to the user
 * 
 */
export interface EmailVerificationRequest {
  token: string;
}

/**
 * @class
 * Initializes a new instance of the ExternalUserRequest class.
 * @constructor
 * @member {string} [appInvitation] The token of the app invitation which lead
 * to signup
 * 
 * @member {string} [testerInvitation] The token of the test invitation which
 * lead to signup
 * 
 * @member {string} [organizationInvitation] The token of the organization
 * invitation which lead to signup
 * 
 * @member {string} [avatarUrl] The avatar URL of the user
 * 
 * @member {string} [displayName] The full name of the user. Might for example
 * be first and last name
 * 
 * @member {string} email The email address of the user
 * 
 * @member {string} [name] The unique name that is used to identify the user.
 * If no explicit value is given, a default will be auto-generated from the
 * `display_name` value
 * 
 */
export interface ExternalUserRequest {
  appInvitation?: string;
  testerInvitation?: string;
  organizationInvitation?: string;
  avatarUrl?: string;
  displayName?: string;
  email: string;
  name?: string;
}

/**
 * @class
 * Initializes a new instance of the FeaturePatchRequest class.
 * @constructor
 * @member {string} [description] The friendly name of the feature
 * 
 * @member {string} [displayName] The full (friendly) name of the feature.
 * 
 * @member {number} [state] The state of the feature
 * 
 */
export interface FeaturePatchRequest {
  description?: string;
  displayName?: string;
  state?: number;
}

/**
 * @class
 * Initializes a new instance of the FeatureCreateRequest class.
 * @constructor
 * @member {string} name The unique name of the feature
 * 
 * @member {string} displayName The full (friendly) name of the feature.
 * 
 * @member {number} [state] The state of the feature
 * 
 * @member {string} [description] The friendly name of the feature
 * 
 */
export interface FeatureCreateRequest {
  name: string;
  displayName: string;
  state?: number;
  description?: string;
}

/**
 * @class
 * Initializes a new instance of the GrantAdminRoleRequest class.
 * @constructor
 * @member {string} adminRole The new admin_role. Possible values include:
 * 'superAdmin', 'admin', 'devOps', 'notAdmin'
 * 
 */
export interface GrantAdminRoleRequest {
  adminRole: string;
}

/**
 * @class
 * Initializes a new instance of the InternalUserRequest class.
 * @constructor
 * @member {string} [appInvitation] The token of the app invitation which lead
 * to signup
 * 
 * @member {string} [testerInvitation] The token of the test invitation which
 * lead to signup
 * 
 * @member {string} [organizationInvitation] The token of the organization
 * invitation which lead to signup
 * 
 * @member {string} [avatarUrl] The avatar URL of the user
 * 
 * @member {string} [displayName] The full name of the user. Might for example
 * be first and last name
 * 
 * @member {string} email The email address of the user
 * 
 * @member {string} name The unique name that is used to identify the user.
 * 
 * @member {string} password The password of the user. Needs to be at least 8
 * characters long and contain at least one lower- and one uppercase letter.
 * 
 */
export interface InternalUserRequest {
  appInvitation?: string;
  testerInvitation?: string;
  organizationInvitation?: string;
  avatarUrl?: string;
  displayName?: string;
  email: string;
  name: string;
  password: string;
}

/**
 * @class
 * Initializes a new instance of the OrganizationPatchRequest class.
 * @constructor
 * @member {string} [displayName] The full (friendly) name of the organization.
 * 
 * @member {string} [name] The name of the organization used in URLs
 * 
 */
export interface OrganizationPatchRequest {
  displayName?: string;
  name?: string;
}

/**
 * @class
 * Initializes a new instance of the OrganizationRequest class.
 * @constructor
 * @member {string} [displayName] The display name of the organization
 * 
 * @member {string} [name] The name of the organization used in URLs
 * 
 */
export interface OrganizationRequest {
  displayName?: string;
  name?: string;
}

/**
 * @class
 * Initializes a new instance of the OrganizationUserPatchRequest class.
 * @constructor
 * @member {string} [role] The user's role in the organizatiion. Possible
 * values include: 'admin', 'collaborator'
 * 
 */
export interface OrganizationUserPatchRequest {
  role?: string;
}

/**
 * @class
 * Initializes a new instance of the PasswordUpdateRequest class.
 * @constructor
 * @member {string} newPassword The new password that will be set for the
 * user. Needs to be at least 8 characters long and contain at least one
 * lower- and one uppercase letter.
 * 
 * @member {string} [oldPassword] The old password, if needed.
 * 
 */
export interface PasswordUpdateRequest {
  newPassword: string;
  oldPassword?: string;
}

/**
 * @class
 * Initializes a new instance of the ResendVerificationRequest class.
 * @constructor
 * @member {string} name The email or name of the user to resend verification
 * 
 */
export interface ResendVerificationRequest {
  name: string;
}

/**
 * @class
 * Initializes a new instance of the ResetPasswordUsingTokenRequest class.
 * @constructor
 * @member {string} newPassword The new password. Needs to be at least 8
 * characters long and contain at least one lower- and one uppercase letter.
 * 
 * @member {string} token The reset password token that was sent to the user
 * 
 */
export interface ResetPasswordUsingTokenRequest {
  newPassword: string;
  token: string;
}

/**
 * @class
 * Initializes a new instance of the UserAppPermissionsUpdateRequest class.
 * @constructor
 * @member {array} permissions The permissions the user has for the app
 * 
 */
export interface UserAppPermissionsUpdateRequest {
  permissions: string[];
}

/**
 * @class
 * Initializes a new instance of the UserInvitationPermissionsUpdateRequest class.
 * @constructor
 * @member {array} permissions The permissions the user has for the app in the
 * invitation
 * 
 */
export interface UserInvitationPermissionsUpdateRequest {
  permissions: string[];
}

/**
 * @class
 * Initializes a new instance of the UserEmailRequest class.
 * @constructor
 * @member {string} userEmail The user's email address'
 * 
 */
export interface UserEmailRequest {
  userEmail: string;
}

/**
 * @class
 * Initializes a new instance of the UserNameUpdateRequest class.
 * @constructor
 * @member {string} [name] The new, unique name that is used to identify.
 * 
 */
export interface UserNameUpdateRequest {
  name?: string;
}

/**
 * @class
 * Initializes a new instance of the UserUpdateRequest class.
 * @constructor
 * @member {string} [displayName] The full name of the user. Might for example
 * be first and last name
 * 
 */
export interface UserUpdateRequest {
  displayName?: string;
}

/**
 * @class
 * Initializes a new instance of the UserUpdateRequestInternal class.
 * @constructor
 * @member {string} [displayName] The full name of the user. Might for example
 * be first and last name
 * 
 * @member {string} [name] The new, unique name that is used to identify.
 * 
 * @member {string} [nextNpsSurveyDate] The date in the future when the user
 * should be checked again for NPS eligibility
 * 
 * @member {string} [email] The email address for this user
 * 
 */
export interface UserUpdateRequestInternal {
  displayName?: string;
  name?: string;
  nextNpsSurveyDate?: string;
  email?: string;
}

/**
 * @class
 * Initializes a new instance of the ApiTokenDeleteResponse class.
 * @constructor
 * @member {string} id The unique id (UUID) of the api token
 * 
 * @member {string} tokenHash The hashed value of api token
 * 
 */
export interface ApiTokenDeleteResponse {
  id: string;
  tokenHash: string;
}

/**
 * @class
 * Initializes a new instance of the ApiTokenGetUserResponse class.
 * @constructor
 * @member {string} tokenId The token's unique id (UUID)
 * 
 * @member {array} tokenScope The token's scope. A list of allowed roles.
 * 
 * @member {string} userEmail The user email
 * 
 * @member {string} userId The unique id (UUID) of the user
 * 
 * @member {string} userOrigin The creation origin of the user who created
 * this api token. Possible values include: 'mobile-center', 'hockeyapp',
 * 'codepush'
 * 
 */
export interface ApiTokenGetUserResponse {
  tokenId: string;
  tokenScope: string[];
  userEmail: string;
  userId: string;
  userOrigin: string;
}

/**
 * @class
 * Initializes a new instance of the ApiTokenResponse class.
 * @constructor
 * @member {string} id The unique id (UUID) of the api token
 * 
 * @member {string} createdAt The creation time
 * 
 * @member {array} [scope] The token's scope. A list of allowed roles.
 * 
 * @member {object} [encryptedToken] The encrypted value of a token. This
 * value will only be returned for token of type in_app_update.
 * 
 * @member {string} [description] The description of the token
 * 
 */
export interface ApiTokenResponse {
  id: string;
  createdAt: string;
  scope?: string[];
  encryptedToken?: any;
  description?: string;
}

/**
 * @class
 * Initializes a new instance of the AppGroupResponse class.
 * @constructor
 * @member {string} id The unique ID (UUID) of the app
 * 
 * @member {string} groupId The unique ID (UUID) of the group that the app
 * belongs to
 * 
 * @member {string} [os] The OS the app will be running on. Possible values
 * include: 'Android', 'iOS', 'macOS', 'Tizen', 'Windows', 'Custom'
 * 
 * @member {string} platform The platform of the app. Possible values include:
 * 'Cordova', 'Java', 'Objective-C-Swift', 'React-Native', 'Unity', 'UWP',
 * 'Xamarin', 'Unknown'
 * 
 */
export interface AppGroupResponse {
  id: string;
  groupId: string;
  os?: string;
  platform: string;
}

/**
 * @class
 * Initializes a new instance of the AppInvitationDetailResponse class.
 * @constructor
 * @member {string} id The unique ID (UUID) of the invitation
 * 
 * @member {object} app
 * 
 * @member {string} [app.id] The unique ID (UUID) of the app
 * 
 * @member {string} [app.appSecret] A unique and secret key used to identify
 * the app in communication with the ingestion endpoint for crash reporting
 * and analytics
 * 
 * @member {string} [app.azureSubscriptionId] The unique ID (UUID) of the
 * Azure subscription associate with the app
 * 
 * @member {string} [app.description] The description of the app
 * 
 * @member {string} [app.displayName] The display name of the app
 * 
 * @member {string} [app.iconUrl] The string representation of the URL
 * pointing to the app's icon
 * 
 * @member {string} [app.name] The name of the app used in URLs
 * 
 * @member {string} [app.os] The OS the app will be running on. Possible
 * values include: 'Android', 'iOS', 'macOS', 'Tizen', 'Windows', 'Custom'
 * 
 * @member {object} [app.owner]
 * 
 * @member {string} [app.owner.id] The unique id (UUID) of the owner
 * 
 * @member {string} [app.owner.avatarUrl] The avatar URL of the owner
 * 
 * @member {string} [app.owner.displayName] The owner's display name
 * 
 * @member {string} [app.owner.email] The owner's email address
 * 
 * @member {string} [app.owner.name] The unique name that used to identify the
 * owner
 * 
 * @member {string} [app.owner.type] The owner type. Can either be 'org' or
 * 'user'. Possible values include: 'org', 'user'
 * 
 * @member {string} [app.platform] The platform of the app. Possible values
 * include: 'Cordova', 'Java', 'Objective-C-Swift', 'React-Native', 'Unity',
 * 'UWP', 'Xamarin', 'Unknown'
 * 
 * @member {string} [app.origin] The creation origin of this app. Possible
 * values include: 'mobile-center', 'hockeyapp', 'codepush'
 * 
 * @member {string} email The email address of the invited user
 * 
 * @member {string} inviteType The invitation type. Possible values include:
 * 'developer', 'tester'
 * 
 * @member {object} invitedBy
 * 
 * @member {string} [invitedBy.id] The unique id (UUID) of the user
 * 
 * @member {string} [invitedBy.avatarUrl] The avatar URL of the user
 * 
 * @member {boolean} [invitedBy.canChangePassword] User is required to send an
 * old password in order to change the password.
 * 
 * @member {string} [invitedBy.displayName] The full name of the user. Might
 * for example be first and last name
 * 
 * @member {string} [invitedBy.email] The email address of the user
 * 
 * @member {string} [invitedBy.name] The unique name that is used to identify
 * the user.
 * 
 * @member {array} [invitedBy.permissions] The permissions the user has for
 * the app
 * 
 * @member {string} [invitedBy.origin] The creation origin of this user.
 * Possible values include: 'mobile-center', 'hockeyapp', 'codepush'
 * 
 * @member {boolean} isExistingUser Indicates whether the invited user already
 * exists
 * 
 * @member {array} [permissions] The permissions the user has for the app
 * 
 */
export interface AppInvitationDetailResponse {
  id: string;
  app: AppResponse;
  email: string;
  inviteType: string;
  invitedBy: UserProfileResponse;
  isExistingUser: boolean;
  permissions?: string[];
}

/**
 * @class
 * Initializes a new instance of the AppResponse class.
 * @constructor
 * @member {string} id The unique ID (UUID) of the app
 * 
 * @member {string} appSecret A unique and secret key used to identify the app
 * in communication with the ingestion endpoint for crash reporting and
 * analytics
 * 
 * @member {string} [azureSubscriptionId] The unique ID (UUID) of the Azure
 * subscription associate with the app
 * 
 * @member {string} [description] The description of the app
 * 
 * @member {string} displayName The display name of the app
 * 
 * @member {string} [iconUrl] The string representation of the URL pointing to
 * the app's icon
 * 
 * @member {string} name The name of the app used in URLs
 * 
 * @member {string} os The OS the app will be running on. Possible values
 * include: 'Android', 'iOS', 'macOS', 'Tizen', 'Windows', 'Custom'
 * 
 * @member {object} owner
 * 
 * @member {string} [owner.id] The unique id (UUID) of the owner
 * 
 * @member {string} [owner.avatarUrl] The avatar URL of the owner
 * 
 * @member {string} [owner.displayName] The owner's display name
 * 
 * @member {string} [owner.email] The owner's email address
 * 
 * @member {string} [owner.name] The unique name that used to identify the
 * owner
 * 
 * @member {string} [owner.type] The owner type. Can either be 'org' or
 * 'user'. Possible values include: 'org', 'user'
 * 
 * @member {string} platform The platform of the app. Possible values include:
 * 'Cordova', 'Java', 'Objective-C-Swift', 'React-Native', 'Unity', 'UWP',
 * 'Xamarin', 'Unknown'
 * 
 * @member {string} origin The creation origin of this app. Possible values
 * include: 'mobile-center', 'hockeyapp', 'codepush'
 * 
 */
export interface AppResponse {
  id: string;
  appSecret: string;
  azureSubscriptionId?: string;
  description?: string;
  displayName: string;
  iconUrl?: string;
  name: string;
  os: string;
  owner: Owner;
  platform: string;
  origin: string;
}

/**
 * @class
 * Initializes a new instance of the Owner class.
 * @constructor
 * The information about the app's owner
 *
 * @member {string} id The unique id (UUID) of the owner
 * 
 * @member {string} [avatarUrl] The avatar URL of the owner
 * 
 * @member {string} displayName The owner's display name
 * 
 * @member {string} [email] The owner's email address
 * 
 * @member {string} name The unique name that used to identify the owner
 * 
 * @member {string} type The owner type. Can either be 'org' or 'user'.
 * Possible values include: 'org', 'user'
 * 
 */
export interface Owner {
  id: string;
  avatarUrl?: string;
  displayName: string;
  email?: string;
  name: string;
  type: string;
}

/**
 * @class
 * Initializes a new instance of the UserProfileResponse class.
 * @constructor
 * @member {string} id The unique id (UUID) of the user
 * 
 * @member {string} [avatarUrl] The avatar URL of the user
 * 
 * @member {boolean} [canChangePassword] User is required to send an old
 * password in order to change the password.
 * 
 * @member {string} displayName The full name of the user. Might for example
 * be first and last name
 * 
 * @member {string} email The email address of the user
 * 
 * @member {string} name The unique name that is used to identify the user.
 * 
 * @member {array} [permissions] The permissions the user has for the app
 * 
 * @member {string} origin The creation origin of this user. Possible values
 * include: 'mobile-center', 'hockeyapp', 'codepush'
 * 
 */
export interface UserProfileResponse {
  id: string;
  avatarUrl?: string;
  canChangePassword?: boolean;
  displayName: string;
  email: string;
  name: string;
  permissions?: string[];
  origin: string;
}

/**
 * @class
 * Initializes a new instance of the AppPrivatePatchResponse class.
 * @constructor
 * @member {string} id The unique ID (UUID) of the app
 * 
 * @member {string} azureSubscriptionId The unique ID (UUID) of the Azure
 * subscription associate with the app
 * 
 * @member {string} displayName The display name of the app
 * 
 * @member {string} name The name of the app used in URLs
 * 
 */
export interface AppPrivatePatchResponse {
  id: string;
  azureSubscriptionId: string;
  displayName: string;
  name: string;
}

/**
 * @class
 * Initializes a new instance of the AppRepoResponse class.
 * @constructor
 * @member {string} id The unique id (UUID) of the repository integration
 * 
 * @member {string} appId The unique id (UUID) of the app that this repository
 * integration belongs to
 * 
 * @member {string} repoUrl The absolute URL of the repository
 * 
 * @member {string} [repoProvider] The provider of the repository. Possible
 * values include: 'github', 'bitbucket', 'vsts'
 * 
 * @member {string} userId The unique id (UUID) of the user who configured the
 * repository
 * 
 */
export interface AppRepoResponse {
  id: string;
  appId: string;
  repoUrl: string;
  repoProvider?: string;
  userId: string;
}

/**
 * @class
 * Initializes a new instance of the AppResponseInternal class.
 * @constructor
 * @member {array} [featureFlags] The feature flags that are enabled for this
 * app
 * 
 * @member {array} [memberPermissions] The permissions of the calling user
 * 
 * @member {array} [repositories] The repositories associated with this app
 * 
 */
export interface AppResponseInternal extends AppResponse {
  featureFlags?: string[];
  memberPermissions?: string[];
  repositories?: AppResponseInternalRepositoriesItem[];
}

/**
 * @class
 * Initializes a new instance of the AppResponseInternalRepositoriesItem class.
 * @constructor
 * @member {string} [repoProvider]
 * 
 * @member {string} [repoUrl]
 * 
 */
export interface AppResponseInternalRepositoriesItem {
  repoProvider?: string;
  repoUrl?: string;
}

/**
 * @class
 * Initializes a new instance of the AppUserPermissionResponse class.
 * @constructor
 * @member {string} appId The unique id (UUID) of the user
 * 
 * @member {array} permissions The permissions the user has for the app
 * 
 * @member {string} userEmail The email of the user
 * 
 * @member {string} userId The unique id (UUID) of the user
 * 
 * @member {string} appOrigin The creation origin of this app. Possible values
 * include: 'mobile-center', 'hockeyapp', 'codepush'
 * 
 * @member {string} appSecret A unique and secret key used to identify the app
 * in communication with the ingestion endpoint for crash reporting and
 * analytics
 * 
 */
export interface AppUserPermissionResponse {
  appId: string;
  permissions: string[];
  userEmail: string;
  userId: string;
  appOrigin: string;
  appSecret: string;
}

/**
 * @class
 * Initializes a new instance of the DistributionGroupResponse class.
 * @constructor
 * @member {string} id The unique ID of the distribution group
 * 
 * @member {string} name The name of the distribution group used in URLs
 * 
 * @member {string} origin The creation origin of this distribution group.
 * Possible values include: 'mobile-center', 'hockeyapp'
 * 
 */
export interface DistributionGroupResponse {
  id: string;
  name: string;
  origin: string;
}

/**
 * @class
 * Initializes a new instance of the DistributionGroupUserDeleteResponse class.
 * @constructor
 * @member {string} [code] The code of the result
 * 
 * @member {number} [message] The message of the result
 * 
 * @member {number} status The status code of the result
 * 
 * @member {string} [userEmail] The email of the user
 * 
 */
export interface DistributionGroupUserDeleteResponse {
  code?: string;
  message?: number;
  status: number;
  userEmail?: string;
}

/**
 * @class
 * Initializes a new instance of the DistributionGroupUserGetResponse class.
 * @constructor
 * @member {string} [id] The unique id (UUID) of the user
 * 
 * @member {string} [avatarUrl] The avatar URL of the user
 * 
 * @member {boolean} [canChangePassword] User is required to send an old
 * password in order to change the password.
 * 
 * @member {string} [displayName] The full name of the user. Might for example
 * be first and last name
 * 
 * @member {string} email The email address of the user
 * 
 * @member {boolean} [invitePending] Whether the has accepted the invite.
 * Available when an invite is pending, and the value will be "true".
 * 
 * @member {string} [name] The unique name that is used to identify the user.
 * 
 */
export interface DistributionGroupUserGetResponse {
  id?: string;
  avatarUrl?: string;
  canChangePassword?: boolean;
  displayName?: string;
  email: string;
  invitePending?: boolean;
  name?: string;
}

/**
 * @class
 * Initializes a new instance of the DistributionGroupUserPostResponse class.
 * @constructor
 * @member {string} [code] The code of the result
 * 
 * @member {boolean} [invitePending] Whether the has accepted the invite.
 * Available when an invite is pending, and the value will be "true".
 * 
 * @member {number} [message] The message of the result
 * 
 * @member {number} status The status code of the result
 * 
 * @member {string} [userEmail] The email of the user
 * 
 */
export interface DistributionGroupUserPostResponse {
  code?: string;
  invitePending?: boolean;
  message?: number;
  status: number;
  userEmail?: string;
}

/**
 * @class
 * Initializes a new instance of the DistributionGroupWithUsersResponse class.
 * @constructor
 * @member {string} id The unique ID of the distribution group
 * 
 * @member {string} name The name of the distribution group used in URLs
 * 
 * @member {number} totalUserCount The count of users in the distribution group
 * 
 * @member {array} users The distribution group users
 * 
 */
export interface DistributionGroupWithUsersResponse {
  id: string;
  name: string;
  totalUserCount: number;
  users: DistributionGroupUserGetResponse[];
}

/**
 * @class
 * Initializes a new instance of the FeatureFlagsResponse class.
 * @constructor
 * @member {array} featureFlags
 * 
 */
export interface FeatureFlagsResponse {
  featureFlags: string[];
}

/**
 * @class
 * Initializes a new instance of the FeatureResponse class.
 * @constructor
 * @member {string} [description] The description of the feature
 * 
 * @member {string} displayName The friendly name of the feature
 * 
 * @member {string} name The unique name of the feature
 * 
 * @member {number} state The state (unset, enabled, disabled) of the feature
 * 
 */
export interface FeatureResponse {
  description?: string;
  displayName: string;
  name: string;
  state: number;
}

/**
 * @class
 * Initializes a new instance of the InternalUserSignupResponse class.
 * @constructor
 * @member {string} id The unique id (UUID) of the user
 * 
 * @member {string} displayName The full name of the user. Might for example
 * be first and last name
 * 
 * @member {string} email The email address of the user
 * 
 * @member {string} [externalProvider] The name of the external auth provider
 * 
 * @member {string} [externalUserId] The user ID given by the external provider
 * 
 * @member {string} name The unique name that is used to identify the user.
 * 
 * @member {string} [status] The current status of the user record after
 * signup. Possible values include: 'Complete', 'NeedsVerification'
 * 
 */
export interface InternalUserSignupResponse {
  id: string;
  displayName: string;
  email: string;
  externalProvider?: string;
  externalUserId?: string;
  name: string;
  status?: string;
}

/**
 * @class
 * Initializes a new instance of the OrgNameAvailabilityResponse class.
 * @constructor
 * @member {boolean} available The availability status of the requested org
 * name
 * 
 * @member {string} name The generated org name
 * 
 */
export interface OrgNameAvailabilityResponse {
  available: boolean;
  name: string;
}

/**
 * @class
 * Initializes a new instance of the OrganizationInvitationDetailResponse class.
 * @constructor
 * @member {string} id The unique ID (UUID) of the invitation
 * 
 * @member {object} organization
 * 
 * @member {string} [organization.id] The internal unique id (UUID) of the
 * organization.
 * 
 * @member {string} [organization.collaboratorRole] The role the current user
 * has within the organization
 * 
 * @member {string} [organization.displayName] The display name of the
 * organization
 * 
 * @member {string} [organization.name] The slug name of the organization
 * 
 * @member {string} [organization.origin] The creation origin of this
 * organization. Possible values include: 'mobile-center', 'hockeyapp'
 * 
 * @member {string} email The email address of the invited user
 * 
 * @member {object} invitedBy
 * 
 * @member {string} [invitedBy.id] The unique id (UUID) of the user
 * 
 * @member {string} [invitedBy.avatarUrl] The avatar URL of the user
 * 
 * @member {boolean} [invitedBy.canChangePassword] User is required to send an
 * old password in order to change the password.
 * 
 * @member {string} [invitedBy.displayName] The full name of the user. Might
 * for example be first and last name
 * 
 * @member {string} [invitedBy.email] The email address of the user
 * 
 * @member {string} [invitedBy.name] The unique name that is used to identify
 * the user.
 * 
 * @member {array} [invitedBy.permissions] The permissions the user has for
 * the app
 * 
 * @member {string} [invitedBy.origin] The creation origin of this user.
 * Possible values include: 'mobile-center', 'hockeyapp', 'codepush'
 * 
 * @member {boolean} isExistingUser Indicates whether the invited user already
 * exists
 * 
 */
export interface OrganizationInvitationDetailResponse {
  id: string;
  organization: OrganizationResponse;
  email: string;
  invitedBy: UserProfileResponse;
  isExistingUser: boolean;
}

/**
 * @class
 * Initializes a new instance of the OrganizationResponse class.
 * @constructor
 * @member {string} id The internal unique id (UUID) of the organization.
 * 
 * @member {string} collaboratorRole The role the current user has within the
 * organization
 * 
 * @member {string} displayName The display name of the organization
 * 
 * @member {string} name The slug name of the organization
 * 
 * @member {string} origin The creation origin of this organization. Possible
 * values include: 'mobile-center', 'hockeyapp'
 * 
 */
export interface OrganizationResponse {
  id: string;
  collaboratorRole: string;
  displayName: string;
  name: string;
  origin: string;
}

/**
 * @class
 * Initializes a new instance of the OrganizationInvitationSimpleDetailResponse class.
 * @constructor
 * @member {string} id The unique ID (UUID) of the invitation
 * 
 * @member {string} email The email address of the invited user
 * 
 */
export interface OrganizationInvitationSimpleDetailResponse {
  id: string;
  email: string;
}

/**
 * @class
 * Initializes a new instance of the OrganizationUserResponse class.
 * @constructor
 * @member {string} email The email address of the user
 * 
 * @member {string} displayName The full name of the user. Might for example
 * be first and last name
 * 
 * @member {string} joinedAt The date when the user joined the organization
 * 
 * @member {string} name The unique name that is used to identify the user.
 * 
 * @member {string} role The role the user has within the organization
 * 
 */
export interface OrganizationUserResponse {
  email: string;
  displayName: string;
  joinedAt: string;
  name: string;
  role: string;
}

/**
 * @class
 * Initializes a new instance of the TeamRequest class.
 * @constructor
 * @member {string} displayName The display name of the team
 * 
 * @member {string} [name] The name of the team
 * 
 * @member {string} [description] The description of the team
 * 
 */
export interface TeamRequest {
  displayName: string;
  name?: string;
  description?: string;
}

/**
 * @class
 * Initializes a new instance of the TeamResponse class.
 * @constructor
 * @member {string} id The internal unique id (UUID) of the team.
 * 
 * @member {string} name The name of the team
 * 
 * @member {string} displayName The display name of the team
 * 
 * @member {string} [description] The description of the team
 * 
 */
export interface TeamResponse {
  id: string;
  name: string;
  displayName: string;
  description?: string;
}

/**
 * @class
 * Initializes a new instance of the AppTeamResponse class.
 * @constructor
 * @member {array} [permissions] The permissions the team has for the app
 * 
 */
export interface AppTeamResponse extends TeamResponse {
  permissions?: string[];
}

/**
 * @class
 * Initializes a new instance of the StatusResponse class.
 * @constructor
 * @member {string} status
 * 
 */
export interface StatusResponse {
  status: string;
}

/**
 * @class
 * Initializes a new instance of the TeamUserResponse class.
 * @constructor
 * @member {string} email The email address of the user
 * 
 * @member {string} displayName The full name of the user. Might for example
 * be first and last name
 * 
 * @member {string} name The unique name that is used to identify the user.
 * 
 * @member {string} role The role of the user has within the team. Possible
 * values include: 'maintainer', 'collaborator'
 * 
 */
export interface TeamUserResponse {
  email: string;
  displayName: string;
  name: string;
  role: string;
}

/**
 * @class
 * Initializes a new instance of the UserAuthResponse class.
 * @constructor
 * @member {string} id The unique id (UUID) of the user
 * 
 * @member {string} displayName The full name of the user. Might for example
 * be first and last name
 * 
 * @member {string} email The email address of the user
 * 
 * @member {string} [externalProvider] The name of the external auth provider
 * 
 * @member {string} [externalUserId] The user ID given by the external provider
 * 
 * @member {string} name The unique name that is used to identify the user
 * 
 * @member {string} origin The creation origin of this user. Possible values
 * include: 'mobile-center', 'hockeyapp', 'codepush'
 * 
 */
export interface UserAuthResponse {
  id: string;
  displayName: string;
  email: string;
  externalProvider?: string;
  externalUserId?: string;
  name: string;
  origin: string;
}

/**
 * @class
 * Initializes a new instance of the UserNameAvailabilityResponse class.
 * @constructor
 * @member {boolean} available The availability status of the requested user
 * name
 * 
 * @member {string} name The requested user name
 * 
 */
export interface UserNameAvailabilityResponse {
  available: boolean;
  name: string;
}

/**
 * @class
 * Initializes a new instance of the UserProfileResponseInternal class.
 * @constructor
 * @member {array} [featureFlags] The feature flags that are enabled for this
 * app
 * 
 * @member {string} [adminRole] The new admin_role. Possible values include:
 * 'superAdmin', 'admin', 'devOps', 'notAdmin'
 * 
 */
export interface UserProfileResponseInternal extends UserProfileResponse {
  featureFlags?: string[];
  adminRole?: string;
}

/**
 * @class
 * Initializes a new instance of the SourceRepository class.
 * @constructor
 * The source repository
 *
 * @member {string} [name] The repository name
 * 
 * @member {object} [cloneUrl] URL used to clone the repository
 * 
 */
export interface SourceRepository {
  name?: string;
  cloneUrl?: any;
}

/**
 * @class
 * Initializes a new instance of the DownloadContainer class.
 * @constructor
 * A download reference
 *
 * @member {string} uri Download URI
 * 
 */
export interface DownloadContainer {
  uri: string;
}

/**
 * @class
 * Initializes a new instance of the WebSocketContainer class.
 * @constructor
 * A websocket reference
 *
 * @member {string} url WebSocket URL
 * 
 */
export interface WebSocketContainer {
  url: string;
}

/**
 * @class
 * Initializes a new instance of the XcodeScheme class.
 * @constructor
 * @member {string} name Scheme name
 * 
 * @member {boolean} hasTestAction Does scheme have a test action?
 * 
 * @member {string} [archiveConfiguration] Build configuration set in Archive
 * action
 * 
 * @member {string} [targetToArchive] The Id of the target to archive
 * 
 */
export interface XcodeScheme {
  name: string;
  hasTestAction: boolean;
  archiveConfiguration?: string;
  targetToArchive?: string;
}

/**
 * @class
 * Initializes a new instance of the XcodeSchemeContainer class.
 * @constructor
 * @member {string} path Path to project
 * 
 * @member {array} sharedSchemes Project schemes
 * 
 * @member {string} [podfilePath] Path to CococaPods file, if present
 * 
 * @member {object} [cartfilePath] Path to Carthage file, if present
 * 
 * @member {string} [xcodeProjectSha] repo object Id of the pbxproject
 * 
 */
export interface XcodeSchemeContainer {
  path: string;
  sharedSchemes: XcodeScheme[];
  podfilePath?: string;
  cartfilePath?: any;
  xcodeProjectSha?: string;
}

/**
 * @class
 * Initializes a new instance of the XamarinSolution class.
 * @constructor
 * @member {string} path Path to solution
 * 
 * @member {array} configurations Solution configurations
 * 
 */
export interface XamarinSolution {
  path: string;
  configurations: string[];
}

/**
 * @class
 * Initializes a new instance of the AndroidProject class.
 * @constructor
 * @member {array} androidModules Android Gradle modules
 * 
 * @member {string} [gradleWrapperPath] The path of the Gradle wrapper
 * 
 */
export interface AndroidProject {
  androidModules: AndroidModule[];
  gradleWrapperPath?: string;
}

/**
 * @class
 * Initializes a new instance of the AndroidModule class.
 * @constructor
 * @member {string} name Name of the Android module
 * 
 * @member {array} [productFlavors] The product flavors of the Android module
 * 
 * @member {array} [buildVariants] The build variants of the Android module
 * (matrix of product flavor + build type (debug|release))
 * 
 */
export interface AndroidModule {
  name: string;
  productFlavors?: string[];
  buildVariants?: string[];
}

/**
 * @class
 * Initializes a new instance of the ToolsetProjects class.
 * @constructor
 * A collection of projects for each type of toolset
 *
 * @member {string} [commit] The commit hash of the analyzed commit
 * 
 * @member {array} [xcode] Xcode projects, with their schemes
 * 
 * @member {array} [javascript] package.json files
 * 
 * @member {array} [xamarin] Xamarin solutions
 * 
 * @member {object} [android]
 * 
 * @member {array} [android.androidModules] Android Gradle modules
 * 
 * @member {string} [android.gradleWrapperPath] The path of the Gradle wrapper
 * 
 */
export interface ToolsetProjects {
  commit?: string;
  xcode?: XcodeSchemeContainer[];
  javascript?: string[];
  xamarin?: XamarinSolution[];
  android?: AndroidProject;
}

/**
 * @class
 * Initializes a new instance of the BranchStatus class.
 * @constructor
 * The branch build status
 *
 * @member {boolean} configured
 * 
 * @member {object} [lastBuild]
 * 
 * @member {number} [lastBuild.id] The build ID
 * 
 * @member {string} [lastBuild.buildNumber] The build number
 * 
 * @member {string} [lastBuild.queueTime] The time the build was queued
 * 
 * @member {string} [lastBuild.startTime] The time the build was started
 * 
 * @member {string} [lastBuild.finishTime] The time the build was finished
 * 
 * @member {string} [lastBuild.lastChangedDate] The time the build status was
 * last changed
 * 
 * @member {string} [lastBuild.status] The build status
 * 
 * @member {string} [lastBuild.result] The build result
 * 
 * @member {string} [lastBuild.sourceBranch] The source branch name
 * 
 * @member {string} [lastBuild.sourceVersion] The source SHA
 * 
 */
export interface BranchStatus {
  configured: boolean;
  lastBuild?: Build;
}

/**
 * @class
 * Initializes a new instance of the Build class.
 * @constructor
 * @member {number} id The build ID
 * 
 * @member {string} buildNumber The build number
 * 
 * @member {string} queueTime The time the build was queued
 * 
 * @member {string} [startTime] The time the build was started
 * 
 * @member {string} [finishTime] The time the build was finished
 * 
 * @member {string} [lastChangedDate] The time the build status was last
 * changed
 * 
 * @member {string} status The build status
 * 
 * @member {string} result The build result
 * 
 * @member {string} sourceBranch The source branch name
 * 
 * @member {string} sourceVersion The source SHA
 * 
 */
export interface Build {
  id: number;
  buildNumber: string;
  queueTime: string;
  startTime?: string;
  finishTime?: string;
  lastChangedDate?: string;
  status: string;
  result: string;
  sourceBranch: string;
  sourceVersion: string;
}

/**
 * @class
 * Initializes a new instance of the BranchProperties class.
 * @constructor
 * The branch build core properties
 *
 * @member {object} [branch]
 * 
 * @member {string} [branch.name] The branch name
 * 
 * @member {object} [branch.commit]
 * 
 * @member {string} [branch.commit.sha] The commit SHA
 * 
 * @member {string} [branch.commit.url] The URL to the commit
 * 
 * @member {boolean} [enabled]
 * 
 */
export interface BranchProperties {
  branch?: Branch;
  enabled?: boolean;
}

/**
 * @class
 * Initializes a new instance of the Branch class.
 * @constructor
 * @member {string} name The branch name
 * 
 * @member {object} commit
 * 
 * @member {string} [commit.sha] The commit SHA
 * 
 * @member {string} [commit.url] The URL to the commit
 * 
 */
export interface Branch {
  name: string;
  commit: Commit;
}

/**
 * @class
 * Initializes a new instance of the Commit class.
 * @constructor
 * @member {string} [sha] The commit SHA
 * 
 * @member {string} [url] The URL to the commit
 * 
 */
export interface Commit {
  sha?: string;
  url?: string;
}

/**
 * @class
 * Initializes a new instance of the BranchConfiguration class.
 * @constructor
 * The branch build configuration
 *
 * @member {number} id
 * 
 * @member {string} [trigger] Possible values include: 'continous',
 * 'continuous', 'manual'
 * 
 * @member {boolean} [testsEnabled]
 * 
 * @member {boolean} [badgeIsEnabled]
 * 
 * @member {boolean} [signed]
 * 
 * @member {object} [toolsets]
 * 
 * @member {object} [toolsets.xcode]
 * 
 * @member {string} [toolsets.xcode.projectOrWorkspacePath] Xcode
 * project/workspace path
 * 
 * @member {string} [toolsets.xcode.podfilePath] Path to CococaPods file, if
 * present
 * 
 * @member {string} [toolsets.xcode.cartfilePath] Path to Carthage file, if
 * present
 * 
 * @member {string} [toolsets.xcode.provisioningProfileEncoded]
 * 
 * @member {string} [toolsets.xcode.certificateEncoded]
 * 
 * @member {string} [toolsets.xcode.certificatePassword]
 * 
 * @member {string} [toolsets.xcode.scheme]
 * 
 * @member {string} [toolsets.xcode.xcodeVersion]
 * 
 * @member {string} [toolsets.xcode.provisioningProfileFilename]
 * 
 * @member {string} [toolsets.xcode.certificateFilename]
 * 
 * @member {string} [toolsets.xcode.teamId]
 * 
 * @member {boolean} [toolsets.xcode.automaticSigning]
 * 
 * @member {object} [toolsets.javascript]
 * 
 * @member {string} [toolsets.javascript.packageJsonPath] Path to package.json
 * file for the main project, e.g. "package.json" or "myapp/package.json"
 * 
 * @member {boolean} [toolsets.javascript.runTests] Whether to run Jest unit
 * tests, via npm test, during the build
 * 
 * @member {object} [toolsets.xamarin]
 * 
 * @member {string} [toolsets.xamarin.slnPath]
 * 
 * @member {string} [toolsets.xamarin.isSimBuild]
 * 
 * @member {string} [toolsets.xamarin.args]
 * 
 * @member {string} [toolsets.xamarin.configuration]
 * 
 * @member {string} [toolsets.xamarin.p12File]
 * 
 * @member {string} [toolsets.xamarin.p12Pwd]
 * 
 * @member {string} [toolsets.xamarin.provProfile]
 * 
 * @member {object} [toolsets.android]
 * 
 * @member {string} [toolsets.android.gradleWrapperPath] Path to the Gradle
 * wrapper script
 * 
 * @member {string} [toolsets.android.module] The Gradle module to build
 * 
 * @member {string} [toolsets.android.buildVariant] The Android build variant to
 * build
 * 
 * @member {boolean} [toolsets.android.runTests] Whether to run unit tests
 * during the build (default)
 * 
 * @member {boolean} [toolsets.android.runLint] Whether to run lint checks
 * during the build (default)
 * 
 * @member {object} [artifactVersioning]
 * 
 * @member {string} [artifactVersioning.buildNumberFormat] Possible values
 * include: 'buildId', 'timestamp'
 * 
 */
export interface BranchConfiguration {
  id: number;
  trigger?: string;
  testsEnabled?: boolean;
  badgeIsEnabled?: boolean;
  signed?: boolean;
  toolsets?: BranchConfigurationToolsets;
  artifactVersioning?: BranchConfigurationArtifactVersioning;
}

/**
 * @class
 * Initializes a new instance of the BranchConfigurationToolsets class.
 * @constructor
 * The branch build configuration for each toolset
 *
 * @member {object} [xcode]
 * 
 * @member {string} [xcode.projectOrWorkspacePath] Xcode project/workspace path
 * 
 * @member {string} [xcode.podfilePath] Path to CococaPods file, if present
 * 
 * @member {string} [xcode.cartfilePath] Path to Carthage file, if present
 * 
 * @member {string} [xcode.provisioningProfileEncoded]
 * 
 * @member {string} [xcode.certificateEncoded]
 * 
 * @member {string} [xcode.certificatePassword]
 * 
 * @member {string} [xcode.scheme]
 * 
 * @member {string} [xcode.xcodeVersion]
 * 
 * @member {string} [xcode.provisioningProfileFilename]
 * 
 * @member {string} [xcode.certificateFilename]
 * 
 * @member {string} [xcode.teamId]
 * 
 * @member {boolean} [xcode.automaticSigning]
 * 
 * @member {object} [javascript]
 * 
 * @member {string} [javascript.packageJsonPath] Path to package.json file for
 * the main project, e.g. "package.json" or "myapp/package.json"
 * 
 * @member {boolean} [javascript.runTests] Whether to run Jest unit tests, via
 * npm test, during the build
 * 
 * @member {object} [xamarin]
 * 
 * @member {string} [xamarin.slnPath]
 * 
 * @member {string} [xamarin.isSimBuild]
 * 
 * @member {string} [xamarin.args]
 * 
 * @member {string} [xamarin.configuration]
 * 
 * @member {string} [xamarin.p12File]
 * 
 * @member {string} [xamarin.p12Pwd]
 * 
 * @member {string} [xamarin.provProfile]
 * 
 * @member {object} [android]
 * 
 * @member {string} [android.gradleWrapperPath] Path to the Gradle wrapper
 * script
 * 
 * @member {string} [android.module] The Gradle module to build
 * 
 * @member {string} [android.buildVariant] The Android build variant to build
 * 
 * @member {boolean} [android.runTests] Whether to run unit tests during the
 * build (default)
 * 
 * @member {boolean} [android.runLint] Whether to run lint checks during the
 * build (default)
 * 
 */
export interface BranchConfigurationToolsets {
  xcode?: XcodeBranchConfigurationProperties;
  javascript?: JavaScriptBranchConfigurationProperties;
  xamarin?: XamarinBranchConfigurationProperties;
  android?: AndroidBranchConfigurationProperties;
}

/**
 * @class
 * Initializes a new instance of the XcodeBranchConfigurationProperties class.
 * @constructor
 * Build configuration when Xcode is part of the build steps
 *
 * @member {string} projectOrWorkspacePath Xcode project/workspace path
 * 
 * @member {string} [podfilePath] Path to CococaPods file, if present
 * 
 * @member {string} [cartfilePath] Path to Carthage file, if present
 * 
 * @member {string} [provisioningProfileEncoded]
 * 
 * @member {string} [certificateEncoded]
 * 
 * @member {string} [certificatePassword]
 * 
 * @member {string} scheme
 * 
 * @member {string} xcodeVersion
 * 
 * @member {string} [provisioningProfileFilename]
 * 
 * @member {string} [certificateFilename]
 * 
 * @member {string} [teamId]
 * 
 * @member {boolean} [automaticSigning]
 * 
 */
export interface XcodeBranchConfigurationProperties {
  projectOrWorkspacePath: string;
  podfilePath?: string;
  cartfilePath?: string;
  provisioningProfileEncoded?: string;
  certificateEncoded?: string;
  certificatePassword?: string;
  scheme: string;
  xcodeVersion: string;
  provisioningProfileFilename?: string;
  certificateFilename?: string;
  teamId?: string;
  automaticSigning?: boolean;
}

/**
 * @class
 * Initializes a new instance of the JavaScriptBranchConfigurationProperties class.
 * @constructor
 * Build configuration when React Native, or other JavaScript tech, is part of
 * the build steps
 *
 * @member {string} packageJsonPath Path to package.json file for the main
 * project, e.g. "package.json" or "myapp/package.json"
 * 
 * @member {boolean} [runTests] Whether to run Jest unit tests, via npm test,
 * during the build. Default value: true .
 * 
 */
export interface JavaScriptBranchConfigurationProperties {
  packageJsonPath: string;
  runTests?: boolean;
}

/**
 * @class
 * Initializes a new instance of the XamarinBranchConfigurationProperties class.
 * @constructor
 * Build configuration for Xamarin projects
 *
 * @member {string} slnPath
 * 
 * @member {string} isSimBuild
 * 
 * @member {string} args
 * 
 * @member {string} configuration
 * 
 * @member {string} p12File
 * 
 * @member {string} p12Pwd
 * 
 * @member {string} provProfile
 * 
 */
export interface XamarinBranchConfigurationProperties {
  slnPath: string;
  isSimBuild: string;
  args: string;
  configuration: string;
  p12File: string;
  p12Pwd: string;
  provProfile: string;
}

/**
 * @class
 * Initializes a new instance of the AndroidBranchConfigurationProperties class.
 * @constructor
 * Build configuration for Android projects
 *
 * @member {string} [gradleWrapperPath] Path to the Gradle wrapper script
 * 
 * @member {string} module The Gradle module to build
 * 
 * @member {string} buildVariant The Android build variant to build
 * 
 * @member {boolean} [runTests] Whether to run unit tests during the build
 * (default). Default value: true .
 * 
 * @member {boolean} [runLint] Whether to run lint checks during the build
 * (default). Default value: true .
 * 
 */
export interface AndroidBranchConfigurationProperties {
  gradleWrapperPath?: string;
  module: string;
  buildVariant: string;
  runTests?: boolean;
  runLint?: boolean;
}

/**
 * @class
 * Initializes a new instance of the BranchConfigurationArtifactVersioning class.
 * @constructor
 * The versioning configuration for artifacts built for this branch
 *
 * @member {string} [buildNumberFormat] Possible values include: 'buildId',
 * 'timestamp'
 * 
 */
export interface BranchConfigurationArtifactVersioning {
  buildNumberFormat?: string;
}

/**
 * @class
 * Initializes a new instance of the CommitDetails class.
 * @constructor
 * @member {object} [commit]
 * 
 * @member {string} [commit.message] Commit message
 * 
 * @member {object} [commit.author]
 * 
 * @member {string} [commit.author.date] Date and time of the commit
 * 
 * @member {string} [commit.author.name] Author name
 * 
 * @member {string} [commit.author.email] Author's email
 * 
 */
export interface CommitDetails extends Commit {
  commit?: CommitDetailsCommit;
}

/**
 * @class
 * Initializes a new instance of the CommitDetailsCommit class.
 * @constructor
 * @member {string} [message] Commit message
 * 
 * @member {object} [author]
 * 
 * @member {string} [author.date] Date and time of the commit
 * 
 * @member {string} [author.name] Author name
 * 
 * @member {string} [author.email] Author's email
 * 
 */
export interface CommitDetailsCommit {
  message?: string;
  author?: CommitDetailsCommitAuthor;
}

/**
 * @class
 * Initializes a new instance of the CommitDetailsCommitAuthor class.
 * @constructor
 * @member {string} [date] Date and time of the commit
 * 
 * @member {string} [name] Author name
 * 
 * @member {string} [email] Author's email
 * 
 */
export interface CommitDetailsCommitAuthor {
  date?: string;
  name?: string;
  email?: string;
}

/**
 * @class
 * Initializes a new instance of the RepoConfig class.
 * @constructor
 * @member {string} type Type of repository
 * 
 * @member {string} state State of the configuration. Possible values include:
 * 'unauthorized', 'inactive', 'active'
 * 
 * @member {string} [repoUrl] URL of the repository
 * 
 * @member {string} [id] Repository identifier
 * 
 */
export interface RepoConfig {
  type: string;
  state: string;
  repoUrl?: string;
  id?: string;
}

/**
 * @class
 * Initializes a new instance of the RepoInfo class.
 * @constructor
 * @member {string} repoUrl The repository url
 * 
 */
export interface RepoInfo {
  repoUrl: string;
}

/**
 * @class
 * Initializes a new instance of the XcodeVersion class.
 * @constructor
 * The Xcode version
 *
 * @member {string} [name] The version name
 * 
 * @member {boolean} [current] If the version is current
 * 
 */
export interface XcodeVersion {
  name?: string;
  current?: boolean;
}

/**
 * @class
 * Initializes a new instance of the MonoVersion class.
 * @constructor
 * The Mono version
 *
 * @member {string} [name] The version name
 * 
 * @member {boolean} [current] If the version is current
 * 
 */
export interface MonoVersion {
  name?: string;
  current?: boolean;
}

/**
 * @class
 * Initializes a new instance of the BuildParams class.
 * @constructor
 * @member {string} [sourceVersion] Version to build
 * 
 * @member {boolean} [debug] Run build in debug mode
 * 
 */
export interface BuildParams {
  sourceVersion?: string;
  debug?: boolean;
}

/**
 * @class
 * Initializes a new instance of the BuildPatch class.
 * @constructor
 * @member {string} [status] The build status; used to cancel builds. Possible
 * values include: 'cancelling'
 * 
 */
export interface BuildPatch {
  status?: string;
}

/**
 * @class
 * Initializes a new instance of the BuildLog class.
 * @constructor
 * @member {array} [value]
 * 
 */
export interface BuildLog {
  value?: string[];
}

/**
 * @class
 * Initializes a new instance of the DistributionRequest class.
 * @constructor
 * @member {string} distributionGroupId The distribution group ID
 * 
 * @member {string} [releaseNotes] The release notes
 * 
 */
export interface DistributionRequest {
  distributionGroupId: string;
  releaseNotes?: string;
}

/**
 * @class
 * Initializes a new instance of the DistributionResponse class.
 * @constructor
 * @member {string} [status] Status of the Request
 * 
 * @member {string} [uploadId] A unique ID of the upload
 * 
 */
export interface DistributionResponse {
  status?: string;
  uploadId?: string;
}

/**
 * @class
 * Initializes a new instance of the BuildServiceStatus class.
 * @constructor
 * @member {string} [status]
 * 
 * @member {string} [service]
 * 
 * @member {string} [message]
 * 
 * @member {string} [url]
 * 
 * @member {number} [validUntil]
 * 
 */
export interface BuildServiceStatus {
  status?: string;
  service?: string;
  message?: string;
  url?: string;
  validUntil?: number;
}

/**
 * @class
 * Initializes a new instance of the ValidationErrorResponse class.
 * @constructor
 * @member {string} id
 * 
 * @member {string} code
 * 
 * @member {string} message
 * 
 */
export interface ValidationErrorResponse {
  id: string;
  code: string;
  message: string;
}

/**
 * @class
 * Initializes a new instance of the PrivateReleaseDetails class.
 * @constructor
 * Details of an uploaded release
 *
 * @member {number} [id] ID identifying this unique release.
 * 
 * @member {string} [status] OBSOLETE. Will be removed in next version. The
 * availability concept is now replaced with distributed. Any 'available'
 * release will be associated with the default distribution group of an
 * app.</br>
 * The release state.<br>
 * <b>available</b>: The uploaded release has been distributed.<br>
 * <b>unavailable</b>: The uploaded release is not visible to the user. <br>
 * . Possible values include: 'available', 'unavailable'
 * 
 * @member {string} [appName] The app's name (extracted from the uploaded
 * release).
 * 
 * @member {string} [appDisplayName] The app's display name.
 * 
 * @member {string} [version] The release's version.<br>
 * For iOS: CFBundleVersion from info.plist.
 * For Android: android:versionCode from AppManifest.xml.
 * 
 * @member {string} [shortVersion] The release's short version.<br>
 * For iOS: CFBundleShortVersionString from info.plist.
 * For Android: android:versionName from AppManifest.xml.
 * 
 * @member {string} [releaseNotes] The release's release notes.
 * 
 * @member {string} [provisioningProfileName] The release's release notes.
 * 
 * @member {string} [provisioningProfileType] The type of the provisioning
 * profile for the requested app version. Possible values include: 'adhoc',
 * 'enterprise', 'other'
 * 
 * @member {number} [size] The release's size in bytes.
 * 
 * @member {string} [minOs] The release's minimum required operating system.
 * 
 * @member {string} [androidMinApiLevel] The release's minimum required
 * Android API level.
 * 
 * @member {string} [bundleIdentifier] The identifier of the apps bundle.
 * 
 * @member {string} [fingerprint] MD5 checksum of the release binary.
 * 
 * @member {string} [uploadedAt] UTC time in ISO 8601 format of the uploaded
 * time.
 * 
 * @member {string} [downloadUrl] The URL that hosts the binary for this
 * release.
 * 
 * @member {string} [appIconUrl] A URL to the app's icon.
 * 
 * @member {string} [installUrl] The href required to install a release on a
 * mobile device. On iOS devices will be prefixed with
 * `itms-services://?action=download-manifest&url=`
 * 
 * @member {string} [distributionGroupId] the destination where release is
 * distributed
 * 
 * @member {string} [publishingStatus] the publishing status of distributed
 * release
 * 
 * @member {string} [destinationType] The destination type.<br>
 * <b>group</b>: The release distributed to internal groups and
 * distribution_groups details will be returned.<br>
 * <b>store</b>: Coming Soon - The release distributed to external stores and
 * distribution_stores details will be returned. <br>
 * . Possible values include: 'group', 'store'
 * 
 */
export interface PrivateReleaseDetails {
  id?: number;
  status?: string;
  appName?: string;
  appDisplayName?: string;
  version?: string;
  shortVersion?: string;
  releaseNotes?: string;
  provisioningProfileName?: string;
  provisioningProfileType?: string;
  size?: number;
  minOs?: string;
  androidMinApiLevel?: string;
  bundleIdentifier?: string;
  fingerprint?: string;
  uploadedAt?: string;
  downloadUrl?: string;
  appIconUrl?: string;
  installUrl?: string;
  distributionGroupId?: string;
  publishingStatus?: string;
  destinationType?: string;
}

/**
 * @class
 * Initializes a new instance of the PrivateBasicReleaseDetails class.
 * @constructor
 * Basic information on a release for private apis
 *
 * @member {number} [id] ID identifying this unique release.
 * 
 * @member {string} [version] The release's version.<br>
 * For iOS: CFBundleVersion from info.plist.<br>
 * For Android: android:versionCode from AppManifest.xml.
 * 
 * @member {string} [shortVersion] The release's short version.<br>
 * For iOS: CFBundleShortVersionString from info.plist.<br>
 * For Android: android:versionName from AppManifest.xml.
 * 
 * @member {string} [uploadedAt] UTC time in ISO 8601 format of the uploaded
 * time.
 * 
 * @member {string} [distributionGroupId] the destination id of release where
 * it is distributed.
 * 
 * @member {string} [destinationType] The destination type.<br>
 * <b>group</b>: The release distributed to internal groups and
 * distribution_groups details will be returned.<br>
 * <b>store</b>: Coming Soon - The release distributed to external stores and
 * distribution_stores details will be returned. <br>
 * . Possible values include: 'group', 'store'
 * 
 * @member {boolean} [isLatest] Indicates if this is the latest release in the
 * group.
 * 
 */
export interface PrivateBasicReleaseDetails {
  id?: number;
  version?: string;
  shortVersion?: string;
  uploadedAt?: string;
  distributionGroupId?: string;
  destinationType?: string;
  isLatest?: boolean;
}

/**
 * @class
 * Initializes a new instance of the BasicReleaseDetails class.
 * @constructor
 * Basic information on a release
 *
 * @member {number} [id] ID identifying this unique release.
 * 
 * @member {string} [version] The release's version.<br>
 * For iOS: CFBundleVersion from info.plist.<br>
 * For Android: android:versionCode from AppManifest.xml.
 * 
 * @member {string} [shortVersion] The release's short version.<br>
 * For iOS: CFBundleShortVersionString from info.plist.<br>
 * For Android: android:versionName from AppManifest.xml.
 * 
 * @member {string} [uploadedAt] UTC time in ISO 8601 format of the uploaded
 * time.
 * 
 * @member {string} [destinationType] The destination type.<br>
 * <b>group</b>: The release distributed to internal groups and
 * distribution_groups details will be returned.<br>
 * <b>store</b>: Coming Soon - The release distributed to external stores and
 * distribution_stores details will be returned. <br>
 * . Possible values include: 'group', 'store'
 * 
 * @member {array} [distributionGroups] a list of distribution groups that are
 * associated with this release.
 * 
 * @member {array} [distributionStores] Coming Soon - a list of distribution
 * stores that are associated with this release.
 * 
 */
export interface BasicReleaseDetails {
  id?: number;
  version?: string;
  shortVersion?: string;
  uploadedAt?: string;
  destinationType?: string;
  distributionGroups?: DistributionGroup[];
  distributionStores?: DistributionStore[];
}

/**
 * @class
 * Initializes a new instance of the DistributionGroup class.
 * @constructor
 * @member {string} [id] ID identifying a unique distribution group.
 * 
 * @member {string} [name] A name identifying a unique distribution group.
 * 
 * @member {boolean} [isLatest] Is the containing release the latest one in
 * this distribution group.
 * 
 */
export interface DistributionGroup {
  id?: string;
  name?: string;
  isLatest?: boolean;
}

/**
 * @class
 * Initializes a new instance of the DistributionStore class.
 * @constructor
 * @member {string} [id] ID identifying a unique distribution store.
 * 
 * @member {string} [name] A name identifying a unique distribution store.
 * 
 * @member {boolean} [isLatest] Is the containing release the latest one in
 * this distribution store.
 * 
 * @member {string} [type] type of the distribution store currently stores
 * type can be intune or googleplay. Possible values include: 'intune',
 * 'googleplay'
 * 
 * @member {string} [publishingStatus] publishing status of the release in the
 * store.
 * 
 */
export interface DistributionStore {
  id?: string;
  name?: string;
  isLatest?: boolean;
  type?: string;
  publishingStatus?: string;
}

/**
 * @class
 * Initializes a new instance of the ReleaseDetails class.
 * @constructor
 * Details of an uploaded release
 *
 * @member {number} [id] ID identifying this unique release.
 * 
 * @member {string} [status] OBSOLETE. Will be removed in next version. The
 * availability concept is now replaced with distributed. Any 'available'
 * release will be associated with the default distribution group of an
 * app.</br>
 * The release state.<br>
 * <b>available</b>: The uploaded release has been distributed.<br>
 * <b>unavailable</b>: The uploaded release is not visible to the user. <br>
 * . Possible values include: 'available', 'unavailable'
 * 
 * @member {string} [appName] The app's name (extracted from the uploaded
 * release).
 * 
 * @member {string} [appDisplayName] The app's display name.
 * 
 * @member {string} [version] The release's version.<br>
 * For iOS: CFBundleVersion from info.plist.
 * For Android: android:versionCode from AppManifest.xml.
 * 
 * @member {string} [shortVersion] The release's short version.<br>
 * For iOS: CFBundleShortVersionString from info.plist.
 * For Android: android:versionName from AppManifest.xml.
 * 
 * @member {string} [releaseNotes] The release's release notes.
 * 
 * @member {string} [provisioningProfileName] The release's release notes.
 * 
 * @member {string} [provisioningProfileType] The type of the provisioning
 * profile for the requested app version. Possible values include: 'adhoc',
 * 'enterprise', 'other'
 * 
 * @member {number} [size] The release's size in bytes.
 * 
 * @member {string} [minOs] The release's minimum required operating system.
 * 
 * @member {string} [androidMinApiLevel] The release's minimum required
 * Android API level.
 * 
 * @member {string} [bundleIdentifier] The identifier of the apps bundle.
 * 
 * @member {string} [fingerprint] MD5 checksum of the release binary.
 * 
 * @member {string} [uploadedAt] UTC time in ISO 8601 format of the uploaded
 * time.
 * 
 * @member {string} [downloadUrl] The URL that hosts the binary for this
 * release.
 * 
 * @member {string} [appIconUrl] A URL to the app's icon.
 * 
 * @member {string} [installUrl] The href required to install a release on a
 * mobile device. On iOS devices will be prefixed with
 * `itms-services://?action=download-manifest&url=`
 * 
 * @member {string} [destinationType] The destination type.<br>
 * <b>group</b>: The release distributed to internal groups and
 * distribution_groups details will be returned.<br>
 * <b>store</b>: Coming Soon - The release distributed to external stores and
 * distribution_stores details will be returned. <br>
 * . Possible values include: 'group', 'store'
 * 
 * @member {array} [distributionGroups] a list of distribution groups that are
 * associated with this release.
 * 
 * @member {array} [distributionStores] Coming Soon - a list of distribution
 * stores that are associated with this release.
 * 
 * @member {boolean} [isUdidProvisioned] In calls that allow passing `udid` in
 * the query string, this value will hold the provisioning status of that
 * UDID in this release. Will be ignored for non-iOS platforms.
 * 
 */
export interface ReleaseDetails {
  id?: number;
  status?: string;
  appName?: string;
  appDisplayName?: string;
  version?: string;
  shortVersion?: string;
  releaseNotes?: string;
  provisioningProfileName?: string;
  provisioningProfileType?: string;
  size?: number;
  minOs?: string;
  androidMinApiLevel?: string;
  bundleIdentifier?: string;
  fingerprint?: string;
  uploadedAt?: string;
  downloadUrl?: string;
  appIconUrl?: string;
  installUrl?: string;
  destinationType?: string;
  distributionGroups?: DistributionGroupWithoutIsLatest[];
  distributionStores?: DistributionStoreWithoutIsLatest[];
  isUdidProvisioned?: boolean;
}

/**
 * @class
 * Initializes a new instance of the DistributionGroupWithoutIsLatest class.
 * @constructor
 * @member {string} [id] ID identifying a unique distribution group.
 * 
 * @member {string} [name] A name identifying a unique distribution group.
 * 
 */
export interface DistributionGroupWithoutIsLatest {
  id?: string;
  name?: string;
}

/**
 * @class
 * Initializes a new instance of the DistributionStoreWithoutIsLatest class.
 * @constructor
 * @member {string} [id] ID identifying a unique distribution store.
 * 
 * @member {string} [name] A name identifying a unique distribution store.
 * 
 * @member {string} [type] type of the distribution store currently stores
 * type can be intune or googleplay. Possible values include: 'intune',
 * 'googleplay'
 * 
 * @member {string} [publishingStatus] publishing status of the release in the
 * store.
 * 
 */
export interface DistributionStoreWithoutIsLatest {
  id?: string;
  name?: string;
  type?: string;
  publishingStatus?: string;
}

/**
 * @class
 * Initializes a new instance of the ReleaseUploadBeginResponse class.
 * @constructor
 * A response containing information pertaining to starting a release upload
 * process
 *
 * @member {string} uploadId The ID for the current upload
 * 
 * @member {string} uploadUrl The URL where the client needs to upload the
 * release to
 * 
 */
export interface ReleaseUploadBeginResponse {
  uploadId: string;
  uploadUrl: string;
}

/**
 * @class
 * Initializes a new instance of the ReleaseUploadEndRequest class.
 * @constructor
 * A request containing information pertaining to complete a release upload
 * process
 *
 * @member {string} status The desired operation for the upload. Possible
 * values include: 'committed', 'aborted'
 * 
 */
export interface ReleaseUploadEndRequest {
  status: string;
}

/**
 * @class
 * Initializes a new instance of the ReleaseUploadEndResponse class.
 * @constructor
 * A response containing information about the uploaded release.
 *
 * @member {string} [releaseUrl] A URL to the new release. If upload was
 * aborted will be null.
 * 
 */
export interface ReleaseUploadEndResponse {
  releaseUrl?: string;
}

/**
 * @class
 * Initializes a new instance of the ReleaseUpdateRequest class.
 * @constructor
 * A request containing information for updating a release.
 *
 * @member {string} [distributionGroupName] OBSOLETE. Will be removed in
 * future releases. Name of a distribution group. The release will be
 * associated with this distribution group. If the distribution group doesn't
 * exist a 400 is returned. If both distribution group name and id are
 * passed, the id is taking precedence.
 * 
 * @member {string} [distributionGroupId] OBSOLETE. Will be removed in future
 * releases. Id of a distribution group. The release will be associated with
 * this distribution group. If the distribution group doesn't exist a 400 is
 * returned. If both distribution group name and id are passed, the id is
 * taking precedence.
 * 
 * @member {string} [destinationName] Name of a distribution group /
 * distribution store. The release will be associated with this distribution
 * group or store. If the distribution group / store doesn't exist a 400 is
 * returned. If both distribution group / store name and id are passed, the
 * id is taking precedence.
 * 
 * @member {string} [destinationId] Id of a distribution group / store. The
 * release will be associated with this distribution group / store. If the
 * distribution group / store doesn't exist a 400 is returned. If both
 * distribution group / store name and id are passed, the id is taking
 * precedence.
 * 
 * @member {string} [destinationType] The destination type.<br>
 * <b>group</b>: The release distributed to internal groups and
 * distribution_groups details will be returned.<br>
 * <b>store</b>: Coming Soon - The release distributed to external stores and
 * distribution_stores details will be returned. <br>
 * . Possible values include: 'group', 'store'
 * 
 * @member {string} [releaseNotes] Release notes for this release.
 * 
 * @member {boolean} [mandatoryUpdate] A boolean which determines whether this
 * version should be a mandatory update or not.
 * 
 */
export interface ReleaseUpdateRequest {
  distributionGroupName?: string;
  distributionGroupId?: string;
  destinationName?: string;
  destinationId?: string;
  destinationType?: string;
  releaseNotes?: string;
  mandatoryUpdate?: boolean;
}

/**
 * @class
 * Initializes a new instance of the PrivateReleaseUpdateRequest class.
 * @constructor
 * A request containing information for updating a release.
 *
 * @member {string} [publishingStatus] The store publishing status.
 * 
 */
export interface PrivateReleaseUpdateRequest {
  publishingStatus?: string;
}

/**
 * @class
 * Initializes a new instance of the RereleaseRequest class.
 * @constructor
 * A request containing information for re-releasing an existing release to a
 * new distribution group.
 *
 * @member {string} [distributionGroupName] Name of a distribution group. The
 * release will be associated with this distribution group. If the
 * distribution group doesn't exist a 400 is returned. If both distribution
 * group name and id are passed, the id is taking precedence.
 * 
 * @member {string} [distributionGroupId] Id of a distribution group. The
 * release will be associated with this distribution group. If the
 * distribution group doesn't exist a 400 is returned. If both distribution
 * group name and id are passed, the id is taking precedence.
 * 
 * @member {string} [releaseNotes] Release notes for this release.
 * 
 * @member {boolean} [mandatoryUpdate] A boolean which determines whether this
 * version should be a mandatory update or not.
 * 
 * @member {number} baseReleaseId The ID of the release that should be
 * re-released
 * 
 */
export interface RereleaseRequest {
  distributionGroupName?: string;
  distributionGroupId?: string;
  releaseNotes?: string;
  mandatoryUpdate?: boolean;
  baseReleaseId: number;
}

/**
 * @class
 * Initializes a new instance of the ProvisioningProfile class.
 * @constructor
 * @member {string} provisioningProfileType Possible values include: 'adhoc',
 * 'enterprise', 'other'
 * 
 * @member {array} [udids]
 * 
 */
export interface ProvisioningProfile {
  provisioningProfileType: string;
  udids?: string[];
}

/**
 * @class
 * Initializes a new instance of the DevicesResponse class.
 * @constructor
 * A response containing an array of device UDIDs.
 *
 * @member {string} provisioningProfileType The type of the provisioning
 * profile for the requested app version. Possible values include: 'adhoc',
 * 'enterprise', 'other'
 * 
 * @member {array} udids
 * 
 */
export interface DevicesResponse {
  provisioningProfileType: string;
  udids: string[];
}

/**
 * @class
 * Initializes a new instance of the DeviceConfigurationResponse class.
 * @constructor
 * A response containing the fully encoded binary blob for a mobileconfig
 *
 * @member {string} dataUrl A data URL containing a signed mobileconfig profile
 * 
 */
export interface DeviceConfigurationResponse {
  dataUrl: string;
}

/**
 * @class
 * Initializes a new instance of the DeviceInfoRequest class.
 * @constructor
 * The information for a single iOS device
 *
 * @member {string} udid The Unique Device IDentifier of the device
 * 
 * @member {string} model The model identifier of the device, in the format
 * iDeviceM,N
 * 
 * @member {string} [osBuild] The build number of the last known OS version
 * running on the device
 * 
 * @member {string} [osVersion] The last known OS version running on the device
 * 
 * @member {string} [serial] The device's serial number. Always empty or
 * undefined at present.
 * 
 * @member {string} [imei] The device's International Mobile Equipment
 * Identity number. Always empty or undefined at present.
 * 
 * @member {string} [ownerId] The user ID of the device owner.
 * 
 */
export interface DeviceInfoRequest {
  udid: string;
  model: string;
  osBuild?: string;
  osVersion?: string;
  serial?: string;
  imei?: string;
  ownerId?: string;
}

/**
 * @class
 * Initializes a new instance of the DeviceInfoResponse class.
 * @constructor
 * The information for a single iOS device
 *
 * @member {string} udid The Unique Device IDentifier of the device
 * 
 * @member {string} model The model identifier of the device, in the format
 * iDeviceM,N
 * 
 * @member {string} deviceName The device description, in the format "iPhone 7
 * Plus (A1784)"
 * 
 * @member {string} osBuild The last known OS version running on the device
 * 
 * @member {string} osVersion The last known OS version running on the device
 * 
 * @member {string} [serial] The device's serial number. Always empty or
 * undefined at present.
 * 
 * @member {string} [imei] The device's International Mobile Equipment
 * Identity number. Always empty or undefined at present.
 * 
 * @member {string} [ownerId] The user ID of the device owner.
 * 
 * @member {string} status The provisioning status of the device.
 * 
 */
export interface DeviceInfoResponse {
  udid: string;
  model: string;
  deviceName: string;
  osBuild: string;
  osVersion: string;
  serial?: string;
  imei?: string;
  ownerId?: string;
  status: string;
}

/**
 * @class
 * Initializes a new instance of the PublishDevicesRequest class.
 * @constructor
 * The publising information.
 *
 * @member {string} username The username for the Apple Developer account to
 * publish the devices to.
 * 
 * @member {string} password The password for the Apple Developer account to
 * publish the devices to.
 * 
 * @member {boolean} [publishAllDevices] When set to true, all unprovisioned
 * devices will be published to the Apple Developer account.  When false,
 * only the provided devices will be published to the Apple Developer account.
 * 
 * @member {array} [devices] Array of device UDID's to be published to the
 * Apple Developer account.
 * 
 */
export interface PublishDevicesRequest {
  username: string;
  password: string;
  publishAllDevices?: boolean;
  devices?: string[];
}

/**
 * @class
 * Initializes a new instance of the PublishDevicesResponse class.
 * @constructor
 * The information for a single iOS device
 *
 * @member {string} profileFileName The file name for the provisioning profile.
 * 
 * @member {string} profileBase64 The updated provisioning profile base64
 * encoded.
 * 
 */
export interface PublishDevicesResponse {
  profileFileName: string;
  profileBase64: string;
}

/**
 * @class
 * Initializes a new instance of the StoresReleaseDetails class.
 * @constructor
 * Details of an uploaded release
 *
 * @member {number} [id] ID identifying this unique release.
 * 
 * @member {string} [status] OBSOLETE. Will be removed in next version. The
 * availability concept is now replaced with distributed. Any 'available'
 * release will be associated with the default distribution group of an
 * app.</br>
 * The release state.<br>
 * <b>available</b>: The uploaded release has been distributed.<br>
 * <b>unavailable</b>: The uploaded release is not visible to the user. <br>
 * . Possible values include: 'available', 'unavailable'
 * 
 * @member {string} [appName] The app's name (extracted from the uploaded
 * release).
 * 
 * @member {string} [appDisplayName] The app's display name.
 * 
 * @member {string} [version] The release's version.<br>
 * For iOS: CFBundleVersion from info.plist.
 * For Android: android:versionCode from AppManifest.xml.
 * 
 * @member {string} [shortVersion] The release's short version.<br>
 * For iOS: CFBundleShortVersionString from info.plist.
 * For Android: android:versionName from AppManifest.xml.
 * 
 * @member {string} [releaseNotes] The release's release notes.
 * 
 * @member {number} [size] The release's size in bytes.
 * 
 * @member {string} [minOs] The release's minimum required operating system.
 * 
 * @member {string} [androidMinApiLevel] The release's minimum required
 * Android API level.
 * 
 * @member {string} [bundleIdentifier] The identifier of the apps bundle.
 * 
 * @member {string} [fingerprint] MD5 checksum of the release binary.
 * 
 * @member {string} [uploadedAt] UTC time in ISO 8601 format of the uploaded
 * time.
 * 
 * @member {string} [downloadUrl] The URL that hosts the binary for this
 * release.
 * 
 * @member {string} [installUrl] The href required to install a release on a
 * mobile device. On iOS devices will be prefixed with
 * `itms-services://?action=download-manifest&url=`. Possible values include:
 * 'group', 'store'
 * 
 * @member {object} [distributionStores] a list of distribution stores that
 * are associated with this release.
 * 
 */
export interface StoresReleaseDetails {
  id?: number;
  status?: string;
  appName?: string;
  appDisplayName?: string;
  version?: string;
  shortVersion?: string;
  releaseNotes?: string;
  size?: number;
  minOs?: string;
  androidMinApiLevel?: string;
  bundleIdentifier?: string;
  fingerprint?: string;
  uploadedAt?: string;
  downloadUrl?: string;
  installUrl?: string;
  distributionStores?: any;
}

/**
 * @class
 * Initializes a new instance of the ExternalStoreRequest class.
 * @constructor
 * ExternalStoreRequest
 *
 * @member {string} [type] store Type. Possible values include: 'googleplay',
 * 'intune'
 * 
 * @member {string} [name] name of the store. In case of googleplay this is
 * fixed to GooglePlay-Production.
 * 
 * @member {object} [intuneDetails]
 * 
 * @member {object} [intuneDetails.secretJson]
 * 
 * @member {string} [intuneDetails.secretJson.idToken] the id token of user
 * 
 * @member {string} [intuneDetails.secretJson.refreshToken] the refresh token
 * for user
 * 
 * @member {string} [intuneDetails.secretJson.refreshTokenExpiry] the expiry
 * of refresh token
 * 
 * @member {string} [intuneDetails.targetAudience] target audience in intune
 * store
 * 
 * @member {string} [intuneDetails.appCategory] app category in intune store
 * 
 * @member {string} [intuneDetails.tenantId] tenant id of the intune store
 * 
 * @member {object} [googleplayDetails]
 * 
 * @member {object} [googleplayDetails.secretJson] Provide service account
 * details JSON (this is provided by google).
 * 
 */
export interface ExternalStoreRequest {
  type?: string;
  name?: string;
  intuneDetails?: IntuneStoreRequest;
  googleplayDetails?: GooglePlayStoreRequest;
}

/**
 * @class
 * Initializes a new instance of the IntuneStoreRequest class.
 * @constructor
 * @member {object} [secretJson]
 * 
 * @member {string} [secretJson.idToken] the id token of user
 * 
 * @member {string} [secretJson.refreshToken] the refresh token for user
 * 
 * @member {string} [secretJson.refreshTokenExpiry] the expiry of refresh token
 * 
 * @member {string} [targetAudience] target audience in intune store
 * 
 * @member {string} [appCategory] app category in intune store
 * 
 * @member {string} [tenantId] tenant id of the intune store
 * 
 */
export interface IntuneStoreRequest {
  secretJson?: IntuneSecretDetails;
  targetAudience?: string;
  appCategory?: string;
  tenantId?: string;
}

/**
 * @class
 * Initializes a new instance of the IntuneSecretDetails class.
 * @constructor
 * @member {string} [idToken] the id token of user
 * 
 * @member {string} [refreshToken] the refresh token for user
 * 
 * @member {string} [refreshTokenExpiry] the expiry of refresh token
 * 
 */
export interface IntuneSecretDetails {
  idToken?: string;
  refreshToken?: string;
  refreshTokenExpiry?: string;
}

/**
 * @class
 * Initializes a new instance of the GooglePlayStoreRequest class.
 * @constructor
 * @member {object} [secretJson] Provide service account details JSON (this is
 * provided by google).
 * 
 */
export interface GooglePlayStoreRequest {
  secretJson?: any;
}

/**
 * @class
 * Initializes a new instance of the ExternalStoreResponse class.
 * @constructor
 * ExternalStoreResponse
 *
 * @member {string} [id] Store id
 * 
 * @member {string} [name] Store Name
 * 
 * @member {string} [type] Store Type
 * 
 * @member {object} [intuneDetails] store details for intune
 * 
 */
export interface ExternalStoreResponse {
  id?: string;
  name?: string;
  type?: string;
  intuneDetails?: any;
}

/**
 * @class
 * Initializes a new instance of the StoreSecretResponse class.
 * @constructor
 * StoreSecretResponse
 *
 * @member {string} [id] Store id
 * 
 * @member {string} [name] Store Name
 * 
 * @member {string} [type] Store Type
 * 
 * @member {string} [secret] Secret Json
 * 
 * @member {string} [tenantId] Tenant Id for Intune
 * 
 */
export interface StoreSecretResponse {
  id?: string;
  name?: string;
  type?: string;
  secret?: string;
  tenantId?: string;
}

/**
 * @class
 * Initializes a new instance of the IntuneStoreResponse class.
 * @constructor
 * @member {string} [targetAudience] target audience in intune store
 * 
 * @member {string} [appCategory] target app category in intune
 * 
 */
export interface IntuneStoreResponse {
  targetAudience?: string;
  appCategory?: string;
}

/**
 * @class
 * Initializes a new instance of the PatchReleaseRequest class.
 * @constructor
 * @member {string} [status] updated status of release
 * 
 * @member {string} [destPublishId] Destination Publish Id
 * 
 */
export interface PatchReleaseRequest {
  status?: string;
  destPublishId?: string;
}

/**
 * @class
 * Initializes a new instance of the StoresBasicReleaseDetails class.
 * @constructor
 * Basic information on a release
 *
 * @member {number} [id] ID identifying this unique release.
 * 
 * @member {string} [version] The release's version.
 * For iOS: CFBundleVersion from info.plist.
 * For Android: android:versionCode from AppManifest.xml.
 * 
 * @member {string} [shortVersion] The release's short version.
 * For iOS: CFBundleShortVersionString from info.plist.
 * For Android: android:versionName from AppManifest.xml.
 * 
 * @member {string} [uploadedAt] UTC time in ISO 8601 format of the uploaded
 * time.
 * 
 * @member {array} [distributionStores] a list of distribution stores that are
 * associated with this release.
 * 
 */
export interface StoresBasicReleaseDetails {
  id?: number;
  version?: string;
  shortVersion?: string;
  uploadedAt?: string;
  distributionStores?: StoresDetails[];
}

/**
 * @class
 * Initializes a new instance of the StoresDetails class.
 * @constructor
 * @member {string} [id] ID identifying a unique distribution store.
 * 
 * @member {string} [name] A name identifying a unique distribution store.
 * 
 * @member {string} [type] A type identifying the type of distribution store.
 * Possible values include: 'googleplay', 'intune'
 * 
 * @member {string} [publishingStatus] A status identifying the status of
 * release in the distribution store.
 * 
 * @member {boolean} [isLatest] Is the containing release the latest one in
 * this distribution store.
 * 
 */
export interface StoresDetails {
  id?: string;
  name?: string;
  type?: string;
  publishingStatus?: string;
  isLatest?: boolean;
}

/**
 * @class
 * Initializes a new instance of the StoreDestinationDetails class.
 * @constructor
 * @member {string} [destPublishId] destination ID identifying a unique id in
 * distribution store.
 * 
 * @member {string} [storeType] type of store. Possible values include:
 * 'intune'
 * 
 * @member {string} [appId] app id of application.
 * 
 */
export interface StoreDestinationDetails {
  destPublishId?: string;
  storeType?: string;
  appId?: string;
}

/**
 * @class
 * Initializes a new instance of the StoresBasicDetails class.
 * @constructor
 * @member {string} [id] ID identifying a unique distribution store.
 * 
 * @member {string} [name] A name identifying a unique distribution store.
 * 
 * @member {string} [type] type of the distribution store currently stores
 * type can be intune or googleplay. Possible values include: 'intune',
 * 'googleplay'
 * 
 * @member {string} [publishingStatus] publishing status of the release in the
 * store.
 * 
 */
export interface StoresBasicDetails {
  id?: string;
  name?: string;
  type?: string;
  publishingStatus?: string;
}

/**
 * @class
 * Initializes a new instance of the IntuneAppsRequest class.
 * @constructor
 * IntuneAppsRequest
 *
 * @member {string} [createdMonth] PartitionKey year-month
 * 
 */
export interface IntuneAppsRequest {
  createdMonth?: string;
}

/**
 * @class
 * Initializes a new instance of the Symbol class.
 * @constructor
 * @member {string} symbolId The unique id for this symbol (uuid)
 * 
 * @member {string} type The type of the symbol for the current symbol upload.
 * Possible values include: 'Apple', 'JavaScript'
 * 
 * @member {string} appId The application that this symbol belongs to
 * 
 * @member {string} platform The platform that this symbol is for
 * 
 * @member {string} url The URL at which the client may download the symbol
 * file
 * 
 * @member {string} origin The origin of the symbol file. Possible values
 * include: 'System', 'User'
 * 
 * @member {array} alternateSymbolIds The other symbols in the same file
 * 
 * @member {string} status Whether the symbol is ignored. Possible values
 * include: 'available', 'ignored'
 * 
 */
export interface Symbol {
  symbolId: string;
  type: string;
  appId: string;
  platform: string;
  url: string;
  origin: string;
  alternateSymbolIds: string[];
  status: string;
}

/**
 * @class
 * Initializes a new instance of the SymbolStatusResponse class.
 * @constructor
 * A response containing information pertaining to a symbol status
 *
 * @member {string} symbolId The unique id for this symbol (uuid)
 * 
 * @member {string} appId The application that this symbol belongs to
 * 
 * @member {string} status Whether the symbol is ignored. Possible values
 * include: 'available', 'ignored', 'missing'
 * 
 */
export interface SymbolStatusResponse {
  symbolId: string;
  appId: string;
  status: string;
}

/**
 * @class
 * Initializes a new instance of the SymbolUpload class.
 * @constructor
 * A single symbol upload entity
 *
 * @member {string} symbolUploadId The id for the current symbol upload
 * 
 * @member {string} appId The application that this symbol upload belongs to
 * 
 * @member {string} status The current status for the symbol upload. Possible
 * values include: 'created', 'committed', 'aborted', 'processing',
 * 'indexed', 'failed'
 * 
 * @member {array} [symbols] The symbol ids
 * 
 * @member {string} [origin] The origin of the symbol upload. Possible values
 * include: 'User', 'System'
 * 
 */
export interface SymbolUpload {
  symbolUploadId: string;
  appId: string;
  status: string;
  symbols?: string[];
  origin?: string;
}

/**
 * @class
 * Initializes a new instance of the SymbolUploadBeginRequest class.
 * @constructor
 * A request containing information pertaining to starting a symbol upload
 * process
 *
 * @member {string} [clientCallback] The callback URL that the client can
 * optionally provide to get status updates for the current symbol upload
 * 
 */
export interface SymbolUploadBeginRequest {
  clientCallback?: string;
}

/**
 * @class
 * Initializes a new instance of the SymbolUploadBeginResponse class.
 * @constructor
 * A response containing information pertaining to starting a symbol upload
 * process
 *
 * @member {string} symbolUploadId The id for the current upload
 * 
 * @member {string} uploadUrl The URL where the client needs to upload the
 * symbol blob to
 * 
 * @member {date} expirationDate Describes how long the upload_url is valid
 * 
 */
export interface SymbolUploadBeginResponse {
  symbolUploadId: string;
  uploadUrl: string;
  expirationDate: Date;
}

/**
 * @class
 * Initializes a new instance of the SymbolUploadEndRequest class.
 * @constructor
 * A request containing information pertaining to completing a symbol upload
 * process
 *
 * @member {string} status The desired operation for the symbol upload.
 * Possible values include: 'committed', 'aborted'
 * 
 */
export interface SymbolUploadEndRequest {
  status: string;
}

/**
 * @class
 * Initializes a new instance of the AppCrashesInfo class.
 * @constructor
 * @member {boolean} hasCrashes
 * 
 * @member {object} features
 * 
 * @member {boolean} [features.crashgroupModifyStatus] App supports
 * modification of crashgroup status
 * 
 * @member {boolean} [features.crashgroupModifyAnnotation] App supports
 * modification of crashgroup annotation
 * 
 * @member {boolean} [features.search] App supports search API
 * 
 * @member {boolean} [features.crashgroupAnalyticsCrashfreeusers] App supports
 * the 'crash free user' metric
 * 
 * @member {boolean} [features.crashgroupAnalyticsImpactedusers] App supports
 * the 'impacted users' metric
 * 
 * @member {boolean} [features.crashDownloadRaw] App supports download of raw
 * crashes
 * 
 */
export interface AppCrashesInfo {
  hasCrashes: boolean;
  features: AppFeatures;
}

/**
 * @class
 * Initializes a new instance of the AppFeatures class.
 * @constructor
 * @member {boolean} [crashgroupModifyStatus] App supports modification of
 * crashgroup status
 * 
 * @member {boolean} [crashgroupModifyAnnotation] App supports modification of
 * crashgroup annotation
 * 
 * @member {boolean} [search] App supports search API
 * 
 * @member {boolean} [crashgroupAnalyticsCrashfreeusers] App supports the
 * 'crash free user' metric
 * 
 * @member {boolean} [crashgroupAnalyticsImpactedusers] App supports the
 * 'impacted users' metric
 * 
 * @member {boolean} [crashDownloadRaw] App supports download of raw crashes
 * 
 */
export interface AppFeatures {
  crashgroupModifyStatus?: boolean;
  crashgroupModifyAnnotation?: boolean;
  search?: boolean;
  crashgroupAnalyticsCrashfreeusers?: boolean;
  crashgroupAnalyticsImpactedusers?: boolean;
  crashDownloadRaw?: boolean;
}

/**
 * @class
 * Initializes a new instance of the AppVersion class.
 * @constructor
 * @member {string} appVersionId
 * 
 * @member {string} appId
 * 
 * @member {string} displayName
 * 
 * @member {string} appVersionProperty
 * 
 * @member {string} [buildNumber]
 * 
 */
export interface AppVersion {
  appVersionId: string;
  appId: string;
  displayName: string;
  appVersionProperty: string;
  buildNumber?: string;
}

/**
 * @class
 * Initializes a new instance of the Exception class.
 * @constructor
 * a exception
 *
 * @member {string} [reason] Reason of the exception
 * 
 * @member {string} [type] Type of the exception (NSSomethingException,
 * NullPointerException)
 * 
 * @member {array} frames frames of the excetpion
 * 
 * @member {boolean} [relevant] relevant exception (crashed)
 * 
 * @member {array} [innerExceptions]
 * 
 * @member {string} [platform] SDK/Platform this thread is beeing generated
 * from. Possible values include: 'ios', 'android', 'xamarin',
 * 'react-native', 'other'
 * 
 */
export interface Exception {
  reason?: string;
  type?: string;
  frames: StackFrame[];
  relevant?: boolean;
  innerExceptions?: Exception[];
  platform?: string;
}

/**
 * @class
 * Initializes a new instance of the StackFrame class.
 * @constructor
 * a single frame of a stack trace
 *
 * @member {string} [address] address of the frame
 * 
 * @member {string} [className] name of the class
 * 
 * @member {string} [method] name of the method
 * 
 * @member {boolean} [classMethod] is a class method
 * 
 * @member {string} [file] name of the file
 * 
 * @member {number} [line] line number
 * 
 * @member {boolean} appCode this line isn't from any framework
 * 
 * @member {string} [frameworkName] Name of the framework
 * 
 * @member {string} codeRaw Raw frame string
 * 
 * @member {string} codeFormatted Formatted frame string
 * 
 * @member {string} [language] programming language of the frame. Possible
 * values include: 'JavaScript', 'CSharp', 'Objective-C', 'Objective-Cpp',
 * 'Cpp', 'C', 'Swift', 'Java', 'Unknown'
 * 
 * @member {boolean} [relevant] frame should be shown always
 * 
 * @member {string} [methodParams] parameters of the frames method
 * 
 */
export interface StackFrame {
  address?: string;
  className?: string;
  method?: string;
  classMethod?: boolean;
  file?: string;
  line?: number;
  appCode: boolean;
  frameworkName?: string;
  codeRaw: string;
  codeFormatted: string;
  language?: string;
  relevant?: boolean;
  methodParams?: string;
}

/**
 * @class
 * Initializes a new instance of the Stacktrace class.
 * @constructor
 * a stacktrace in a processed and prettyfied way
 *
 * @member {string} [title]
 * 
 * @member {string} [reason]
 * 
 * @member {array} [threads]
 * 
 * @member {object} [exception]
 * 
 * @member {string} [exception.reason] Reason of the exception
 * 
 * @member {string} [exception.type] Type of the exception
 * (NSSomethingException, NullPointerException)
 * 
 * @member {array} [exception.frames] frames of the excetpion
 * 
 * @member {boolean} [exception.relevant] relevant exception (crashed)
 * 
 * @member {array} [exception.innerExceptions]
 * 
 * @member {string} [exception.platform] SDK/Platform this thread is beeing
 * generated from. Possible values include: 'ios', 'android', 'xamarin',
 * 'react-native', 'other'
 * 
 */
export interface Stacktrace {
  title?: string;
  reason?: string;
  threads?: Thread[];
  exception?: Exception;
}

/**
 * @class
 * Initializes a new instance of the Thread class.
 * @constructor
 * a thread representation
 *
 * @member {string} title name of the thread
 * 
 * @member {array} frames frames of that thread
 * 
 * @member {object} [exception] potential additional exception happened in
 * that thread (Last Exception Backtrace)
 * 
 * @member {string} [exception.reason] Reason of the exception
 * 
 * @member {string} [exception.type] Type of the exception
 * (NSSomethingException, NullPointerException)
 * 
 * @member {array} [exception.frames] frames of the excetpion
 * 
 * @member {boolean} [exception.relevant] relevant exception (crashed)
 * 
 * @member {array} [exception.innerExceptions]
 * 
 * @member {string} [exception.platform] SDK/Platform this thread is beeing
 * generated from. Possible values include: 'ios', 'android', 'xamarin',
 * 'react-native', 'other'
 * 
 * @member {boolean} [relevant] Shows if a thread is relevant or not. Is false
 * if all frames are non relevant, otherwise true
 * 
 * @member {string} [platform] SDK/Platform this thread is beeing generated
 * from. Possible values include: 'ios', 'android', 'xamarin',
 * 'react-native', 'other'
 * 
 */
export interface Thread {
  title: string;
  frames: StackFrame[];
  exception?: Exception;
  relevant?: boolean;
  platform?: string;
}

/**
 * @class
 * Initializes a new instance of the ReasonStackFrame class.
 * @constructor
 * frame belonging to the reason of the crash
 *
 * @member {string} [className] name of the class
 * 
 * @member {string} [method] name of the method
 * 
 * @member {boolean} [classMethod] is a class method
 * 
 * @member {string} [file] name of the file
 * 
 * @member {number} [line] line number
 * 
 * @member {boolean} [appCode] this line isn't from any framework
 * 
 * @member {string} [frameworkName] Name of the framework
 * 
 * @member {string} [codeFormatted] Formatted frame string
 * 
 * @member {string} [language] programming language of the frame. Possible
 * values include: 'JavaScript', 'CSharp', 'Objective-C', 'Objective-Cpp',
 * 'Cpp', 'C', 'Swift', 'Java', 'Unknown'
 * 
 * @member {string} [methodParams] parameters of the frames method
 * 
 * @member {string} [exceptionType] Exception type.
 * 
 * @member {string} [osExceptionType] OS exception type. (aka. SIGNAL)
 * 
 */
export interface ReasonStackFrame {
  className?: string;
  method?: string;
  classMethod?: boolean;
  file?: string;
  line?: number;
  appCode?: boolean;
  frameworkName?: string;
  codeFormatted?: string;
  language?: string;
  methodParams?: string;
  exceptionType?: string;
  osExceptionType?: string;
}

/**
 * @class
 * Initializes a new instance of the CrashAttachment class.
 * @constructor
 * @member {string} appId
 * 
 * @member {string} attachmentId
 * 
 * @member {string} crashId
 * 
 * @member {string} blobLocation
 * 
 * @member {string} contentType
 * 
 * @member {string} fileName
 * 
 * @member {date} createdTime
 * 
 * @member {number} size
 * 
 */
export interface CrashAttachment {
  appId: string;
  attachmentId: string;
  crashId: string;
  blobLocation: string;
  contentType: string;
  fileName: string;
  createdTime: Date;
  size: number;
}

/**
 * @class
 * Initializes a new instance of the CrashRawUrl class.
 * @constructor
 * @member {string} crashRawUrlProperty
 * 
 */
export interface CrashRawUrl {
  crashRawUrlProperty: string;
}

/**
 * @class
 * Initializes a new instance of the CrashGroup class.
 * @constructor
 * @member {string} crashGroupId
 * 
 * @member {string} displayId
 * 
 * @member {string} appVersion
 * 
 * @member {string} build
 * 
 * @member {string} status Possible values include: 'open', 'closed', 'ignored'
 * 
 * @member {number} count
 * 
 * @member {number} [impactedUsers]
 * 
 * @member {date} firstOccurrence
 * 
 * @member {date} lastOccurrence
 * 
 * @member {string} [exception]
 * 
 * @member {string} errorReason
 * 
 * @member {object} [reasonFrame]
 * 
 * @member {string} [reasonFrame.className] name of the class
 * 
 * @member {string} [reasonFrame.method] name of the method
 * 
 * @member {boolean} [reasonFrame.classMethod] is a class method
 * 
 * @member {string} [reasonFrame.file] name of the file
 * 
 * @member {number} [reasonFrame.line] line number
 * 
 * @member {boolean} [reasonFrame.appCode] this line isn't from any framework
 * 
 * @member {string} [reasonFrame.frameworkName] Name of the framework
 * 
 * @member {string} [reasonFrame.codeFormatted] Formatted frame string
 * 
 * @member {string} [reasonFrame.language] programming language of the frame.
 * Possible values include: 'JavaScript', 'CSharp', 'Objective-C',
 * 'Objective-Cpp', 'Cpp', 'C', 'Swift', 'Java', 'Unknown'
 * 
 * @member {string} [reasonFrame.methodParams] parameters of the frames method
 * 
 * @member {string} [reasonFrame.exceptionType] Exception type.
 * 
 * @member {string} [reasonFrame.osExceptionType] OS exception type. (aka.
 * SIGNAL)
 * 
 * @member {boolean} fatal Crash or handled exception
 * 
 * @member {string} annotation
 * 
 */
export interface CrashGroup {
  crashGroupId: string;
  displayId: string;
  appVersion: string;
  build: string;
  status: string;
  count: number;
  impactedUsers?: number;
  firstOccurrence: Date;
  lastOccurrence: Date;
  exception?: string;
  errorReason: string;
  reasonFrame?: ReasonStackFrame;
  fatal: boolean;
  annotation: string;
}

/**
 * @class
 * Initializes a new instance of the CrashGroupChange class.
 * @constructor
 * @member {object} [status]
 * 
 * @member {string} [annotation]
 * 
 */
export interface CrashGroupChange {
  status?: any;
  annotation?: string;
}

/**
 * @class
 * Initializes a new instance of the CrashGroupCounts class.
 * @constructor
 * @member {number} [crashGroupCount]
 * 
 */
export interface CrashGroupCounts {
  crashGroupCount?: number;
}

/**
 * @class
 * Initializes a new instance of the Crash class.
 * @constructor
 * @member {string} crashId
 * 
 * @member {string} [displayId]
 * 
 * @member {date} timestamp
 * 
 * @member {string} version
 * 
 * @member {string} build
 * 
 * @member {string} device
 * 
 * @member {string} osVersion
 * 
 * @member {string} [osType]
 * 
 * @member {string} userName
 * 
 * @member {string} [userEmail]
 * 
 */
export interface Crash {
  crashId: string;
  displayId?: string;
  timestamp: Date;
  version: string;
  build: string;
  device: string;
  osVersion: string;
  osType?: string;
  userName: string;
  userEmail?: string;
}

/**
 * @class
 * Initializes a new instance of the MissingSymbol class.
 * @constructor
 * missing symbol
 *
 * @member {string} symbolId symbol id
 * 
 * @member {string} name symbol name
 * 
 * @member {string} [platform] symbol plarform
 * 
 * @member {string} status symbol status. Possible values include: 'missing',
 * 'ignored', 'available'
 * 
 */
export interface MissingSymbol {
  symbolId: string;
  name: string;
  platform?: string;
  status: string;
}

/**
 * @class
 * Initializes a new instance of the CrashLocation class.
 * @constructor
 * crash location information
 *
 * @member {string} account azure account
 * 
 * @member {string} container blob container
 * 
 * @member {string} blob blob name
 * 
 */
export interface CrashLocation {
  account: string;
  container: string;
  blob: string;
}

/**
 * @class
 * Initializes a new instance of the ParkedCrash class.
 * @constructor
 * parked crash
 *
 * @member {string} appId application id
 * 
 * @member {string} appVer application version
 * 
 * @member {string} appBuild application build
 * 
 * @member {array} missingSymbols list of missing symbols
 * 
 * @member {string} crashId id of the crash
 * 
 * @member {string} sdkPlatform platform of the sdk that sent crash
 * 
 * @member {string} [sdkWrapper] name of the sdk wrapper that sent crash
 * 
 * @member {object} location crash location
 * 
 * @member {string} [location.account] azure account
 * 
 * @member {string} [location.container] blob container
 * 
 * @member {string} [location.blob] blob name
 * 
 */
export interface ParkedCrash {
  appId: string;
  appVer: string;
  appBuild: string;
  missingSymbols: MissingSymbol[];
  crashId: string;
  sdkPlatform: string;
  sdkWrapper?: string;
  location: CrashLocation;
}

/**
 * @class
 * Initializes a new instance of the SymbolUpdateInfo class.
 * @constructor
 * symbol update message
 *
 * @member {string} symbolId UUID of the symbol
 * 
 * @member {string} appId application id
 * 
 * @member {string} status symbol upload status. Possible values include:
 * 'missing', 'ignored', 'available'
 * 
 */
export interface SymbolUpdateInfo {
  symbolId: string;
  appId: string;
  status: string;
}

/**
 * @class
 * Initializes a new instance of the MissingSymbolCrashGroup class.
 * @constructor
 * missing symbol crash group object
 *
 * @member {string} symbolGroupId id of the symbol group
 * 
 * @member {number} [crashCount] number of crashes that belong to this group
 * 
 * @member {string} appId application id
 * 
 * @member {string} appVer application version
 * 
 * @member {string} appBuild application build
 * 
 * @member {date} lastModified last update date for the group
 * 
 * @member {array} missingSymbols list of missing symbols
 * 
 * @member {string} status group status. Possible values include: 'active',
 * 'pending', 'closed'
 * 
 */
export interface MissingSymbolCrashGroup {
  symbolGroupId: string;
  crashCount?: number;
  appId: string;
  appVer: string;
  appBuild: string;
  lastModified: Date;
  missingSymbols: MissingSymbol[];
  status: string;
}

/**
 * @class
 * Initializes a new instance of the MissingSymbolCrashGroupsResponse class.
 * @constructor
 * grouped by missing symbols crashes response object
 *
 * @member {number} totalCrashCount total number of cashes for all the groups
 * 
 * @member {array} groups list of crash groups formed by missing symbols
 * combination
 * 
 */
export interface MissingSymbolCrashGroupsResponse {
  totalCrashCount: number;
  groups: MissingSymbolCrashGroup[];
}

/**
 * @class
 * Initializes a new instance of the MissingSymbolCrashGroupsInfoResponse class.
 * @constructor
 * missing symbol groups
 *
 * @member {number} totalCrashCount total number of crashes for all missing
 * symbol groups
 * 
 */
export interface MissingSymbolCrashGroupsInfoResponse {
  totalCrashCount: number;
}

/**
 * @class
 * Initializes a new instance of the FailureResponse class.
 * @constructor
 * failure response object
 *
 * @member {string} code
 * 
 * @member {string} message
 * 
 */
export interface FailureResponse {
  code: string;
  message: string;
}

/**
 * @class
 * Initializes a new instance of the SearchItemsRequest class.
 * @constructor
 * @member {string} search
 * 
 */
export interface SearchItemsRequest {
  search: string;
}

/**
 * @class
 * Initializes a new instance of the SearchItem class.
 * @constructor
 * @member {string} crashId
 * 
 * @member {string} [displayId]
 * 
 * @member {date} timestamp
 * 
 * @member {string} version
 * 
 * @member {string} build
 * 
 * @member {string} device
 * 
 * @member {string} osVersion
 * 
 * @member {string} [osType]
 * 
 * @member {string} userName
 * 
 * @member {string} [userEmail]
 * 
 */
export interface SearchItem {
  crashId: string;
  displayId?: string;
  timestamp: Date;
  version: string;
  build: string;
  device: string;
  osVersion: string;
  osType?: string;
  userName: string;
  userEmail?: string;
}

/**
 * @class
 * Initializes a new instance of the CrashCounts class.
 * @constructor
 * @member {number} [count] total crash count
 * 
 * @member {array} [crashes] the total crash count for day
 * 
 */
export interface CrashCounts {
  count?: number;
  crashes?: DateTimeCounts[];
}

/**
 * @class
 * Initializes a new instance of the DateTimeCounts class.
 * @constructor
 * @member {string} [datetime] the ISO 8601 datetime
 * 
 * @member {number} [count] count of the object
 * 
 */
export interface DateTimeCounts {
  datetime?: string;
  count?: number;
}

/**
 * @class
 * Initializes a new instance of the ActiveDeviceCounts class.
 * @constructor
 * @member {array} [daily] the active device count for each interval
 * 
 * @member {array} [weekly] the active device count for each interval with a
 * week's retention
 * 
 * @member {array} [monthly] the active device count for each interval with a
 * month's retention
 * 
 */
export interface ActiveDeviceCounts {
  daily?: DateTimeCounts[];
  weekly?: DateTimeCounts[];
  monthly?: DateTimeCounts[];
}

/**
 * @class
 * Initializes a new instance of the Places class.
 * @constructor
 * Places and count during the time range in descending order
 *
 * @member {number} [total]
 * 
 * @member {array} [placesProperty]
 * 
 */
export interface Places {
  total?: number;
  placesProperty?: Place[];
}

/**
 * @class
 * Initializes a new instance of the Place class.
 * @constructor
 * The place code and the count
 *
 * @member {string} [code] the place code
 * 
 * @member {number} [count] the count of the this place
 * 
 * @member {number} [previousCount] the count of previous time range of the
 * place
 * 
 */
export interface Place {
  code?: string;
  count?: number;
  previousCount?: number;
}

/**
 * @class
 * Initializes a new instance of the ErrorModel class.
 * @constructor
 * Error
 *
 * @member {object} [error]
 * 
 * @member {number} [error.code] The status code return by the API. It can be
 * 400 or 403 or 500.
 * 
 * @member {string} [error.message] The reason for the request failed
 * 
 */
export interface ErrorModel {
  error?: ErrorError;
}

/**
 * @class
 * Initializes a new instance of the ErrorError class.
 * @constructor
 * @member {number} [code] The status code return by the API. It can be 400 or
 * 403 or 500.
 * 
 * @member {string} [message] The reason for the request failed
 * 
 */
export interface ErrorError {
  code?: number;
  message?: string;
}

/**
 * @class
 * Initializes a new instance of the SessionDurationsDistribution class.
 * @constructor
 * @member {array} [distribution] the count of sessions in these buckets
 * 
 * @member {string} [previousAverageDuration] the previous average session
 * duration for previous time range
 * 
 * @member {string} [averageDuration] the average session duration for current
 * time range
 * 
 */
export interface SessionDurationsDistribution {
  distribution?: SessionDurationsDistributionDistributionItem[];
  previousAverageDuration?: string;
  averageDuration?: string;
}

/**
 * @class
 * Initializes a new instance of the SessionDurationsDistributionDistributionItem class.
 * @constructor
 * @member {string} [bucket] the bucket name
 * 
 * @member {number} [count] the count of sessions in current bucket
 * 
 */
export interface SessionDurationsDistributionDistributionItem {
  bucket?: string;
  count?: number;
}

/**
 * @class
 * Initializes a new instance of the Versions class.
 * @constructor
 * @member {array} [versionsProperty] list of version count
 * 
 * @member {number} [total] the total count of versions
 * 
 */
export interface Versions {
  versionsProperty?: Version[];
  total?: number;
}

/**
 * @class
 * Initializes a new instance of the Version class.
 * @constructor
 * @member {string} [versionProperty] version
 * 
 * @member {number} [count] version count
 * 
 * @member {number} [previousCount] the count of previous time range of the
 * version
 * 
 */
export interface Version {
  versionProperty?: string;
  count?: number;
  previousCount?: number;
}

/**
 * @class
 * Initializes a new instance of the SessionsPerDevice class.
 * @constructor
 * @member {number} [averageSessionsPerUser] average seesion per user
 * 
 * @member {number} [previousAverageSessionsPerUser] previous average session
 * per user
 * 
 * @member {number} [totalCount] total session per device count
 * 
 * @member {number} [previousTotalCount] previous total count
 * 
 * @member {array} [sessionsPerUser] the session count for each interval per
 * device
 * 
 */
export interface SessionsPerDevice {
  averageSessionsPerUser?: number;
  previousAverageSessionsPerUser?: number;
  totalCount?: number;
  previousTotalCount?: number;
  sessionsPerUser?: SessionsPerDeviceSessionsPerUserItem[];
}

/**
 * @class
 * Initializes a new instance of the SessionsPerDeviceSessionsPerUserItem class.
 * @constructor
 * @member {string} [datetime] the ISO 8601 datetime
 * 
 * @member {number} [count] count
 * 
 */
export interface SessionsPerDeviceSessionsPerUserItem {
  datetime?: string;
  count?: number;
}

/**
 * @class
 * Initializes a new instance of the AnalyticsModels class.
 * @constructor
 * @member {number} [total]
 * 
 * @member {array} [models]
 * 
 */
export interface AnalyticsModels {
  total?: number;
  models?: Model[];
}

/**
 * @class
 * Initializes a new instance of the Model class.
 * @constructor
 * @member {string} [modelName] model's name
 * 
 * @member {number} [count] count current of model
 * 
 * @member {number} [previousCount] count of previous model
 * 
 */
export interface Model {
  modelName?: string;
  count?: number;
  previousCount?: number;
}

/**
 * @class
 * Initializes a new instance of the Languages class.
 * @constructor
 * @member {number} [total]
 * 
 * @member {array} [languagesProperty]
 * 
 */
export interface Languages {
  total?: number;
  languagesProperty?: Language[];
}

/**
 * @class
 * Initializes a new instance of the Language class.
 * @constructor
 * @member {string} [languageName] language's name
 * 
 * @member {number} [count] count current of language
 * 
 * @member {number} [previousCount] count of previous lanugage
 * 
 */
export interface Language {
  languageName?: string;
  count?: number;
  previousCount?: number;
}

/**
 * @class
 * Initializes a new instance of the OSes class.
 * @constructor
 * @member {number} [total]
 * 
 * @member {array} [osesProperty]
 * 
 */
export interface OSes {
  total?: number;
  osesProperty?: OS[];
}

/**
 * @class
 * Initializes a new instance of the OS class.
 * @constructor
 * @member {string} [osName] OS name
 * 
 * @member {number} [count] count current of OS
 * 
 * @member {number} [previousCount] count of previous OS
 * 
 */
export interface OS {
  osName?: string;
  count?: number;
  previousCount?: number;
}

/**
 * @class
 * Initializes a new instance of the DateTimeDecimalCounts class.
 * @constructor
 * @member {string} [datetime] the ISO 8601 datetime
 * 
 * @member {number} [count] decimal count of the object
 * 
 */
export interface DateTimeDecimalCounts {
  datetime?: string;
  count?: number;
}

/**
 * @class
 * Initializes a new instance of the AvailableVersions class.
 * @constructor
 * @member {array} [versions] List of available versions.
 * 
 * @member {number} [totalCount] The full number of versions accross all pages.
 * 
 */
export interface AvailableVersions {
  versions?: string[];
  totalCount?: number;
}

/**
 * @class
 * Initializes a new instance of the CrashFreeDevicePercentages class.
 * @constructor
 * @member {number} [averagePercentage] Average percentage
 * 
 * @member {array} [dailyPercentages] The crash-free percentage per day.
 * 
 */
export interface CrashFreeDevicePercentages {
  averagePercentage?: number;
  dailyPercentages?: DateTimePercentages[];
}

/**
 * @class
 * Initializes a new instance of the DateTimePercentages class.
 * @constructor
 * @member {string} [datetime] the ISO 8601 datetime
 * 
 * @member {number} [percentage] percentage of the object
 * 
 */
export interface DateTimePercentages {
  datetime?: string;
  percentage?: number;
}

/**
 * @class
 * Initializes a new instance of the CrashesOverallItem class.
 * @constructor
 * @member {string} [crashGroupId]
 * 
 * @member {string} [appVersion]
 * 
 * @member {object} [overall]
 * 
 * @member {number} [overall.crashCount]
 * 
 * @member {number} [overall.deviceCount]
 * 
 */
export interface CrashesOverallItem {
  crashGroupId?: string;
  appVersion?: string;
  overall?: CrashOverall;
}

/**
 * @class
 * Initializes a new instance of the CrashOverall class.
 * @constructor
 * @member {number} [crashCount]
 * 
 * @member {number} [deviceCount]
 * 
 */
export interface CrashOverall {
  crashCount?: number;
  deviceCount?: number;
}

/**
 * @class
 * Initializes a new instance of the CrashGroupModels class.
 * @constructor
 * @member {number} [crashCount]
 * 
 * @member {array} [models]
 * 
 */
export interface CrashGroupModels {
  crashCount?: number;
  models?: CrashGroupModel[];
}

/**
 * @class
 * Initializes a new instance of the CrashGroupModel class.
 * @constructor
 * @member {string} [modelName] model's name
 * 
 * @member {number} [crashCount] count of model
 * 
 */
export interface CrashGroupModel {
  modelName?: string;
  crashCount?: number;
}

/**
 * @class
 * Initializes a new instance of the CrashGroupOperatingSystems class.
 * @constructor
 * @member {number} [crashCount]
 * 
 * @member {array} [operatingSystems]
 * 
 */
export interface CrashGroupOperatingSystems {
  crashCount?: number;
  operatingSystems?: CrashGroupOperatingSystem[];
}

/**
 * @class
 * Initializes a new instance of the CrashGroupOperatingSystem class.
 * @constructor
 * @member {string} [operatingSystemName] OS name
 * 
 * @member {number} [crashCount] count of OS
 * 
 */
export interface CrashGroupOperatingSystem {
  operatingSystemName?: string;
  crashCount?: number;
}

/**
 * @class
 * Initializes a new instance of the LogTraceDefinition class.
 * @constructor
 * @member {string} appSecret
 * 
 * @member {string} [installId]
 * 
 * @member {date} [expiration]
 * 
 */
export interface LogTraceDefinition {
  appSecret: string;
  installId?: string;
  expiration?: Date;
}

/**
 * @class
 * Initializes a new instance of the CrashGroupContainer class.
 * @constructor
 * @member {array} crashGroups
 * 
 */
export interface CrashGroupContainer {
  crashGroups: CrashGroupAndVersion[];
}

/**
 * @class
 * Initializes a new instance of the CrashGroupAndVersion class.
 * @constructor
 * @member {string} [crashGroupId]
 * 
 * @member {string} [appVersion]
 * 
 */
export interface CrashGroupAndVersion {
  crashGroupId?: string;
  appVersion?: string;
}

/**
 * @class
 * Initializes a new instance of the Events class.
 * @constructor
 * @member {array} [eventsProperty]
 * 
 * @member {number} [total] the total count of events
 * 
 * @member {number} [totalDevices] the active device over this period
 * 
 */
export interface Events {
  eventsProperty?: Event[];
  total?: number;
  totalDevices?: number;
}

/**
 * @class
 * Initializes a new instance of the Event class.
 * @constructor
 * @member {string} [id]
 * 
 * @member {string} [name]
 * 
 * @member {number} [deviceCount]
 * 
 * @member {number} [previousDeviceCount] the device count of previous time
 * range of the event
 * 
 * @member {number} [count]
 * 
 * @member {number} [previousCount] the event count of previous time range of
 * the event
 * 
 * @member {number} [countPerDevice]
 * 
 * @member {number} [countPerSession]
 * 
 */
export interface Event {
  id?: string;
  name?: string;
  deviceCount?: number;
  previousDeviceCount?: number;
  count?: number;
  previousCount?: number;
  countPerDevice?: number;
  countPerSession?: number;
}

/**
 * @class
 * Initializes a new instance of the EventCount class.
 * @constructor
 * @member {number} [totalCount]
 * 
 * @member {number} [previousTotalCount]
 * 
 * @member {array} [count]
 * 
 */
export interface EventCount {
  totalCount?: number;
  previousTotalCount?: number;
  count?: DateTimeCounts[];
}

/**
 * @class
 * Initializes a new instance of the EventDeviceCount class.
 * @constructor
 * @member {number} [totalDevices]
 * 
 * @member {number} [totalDevicesWithEvent]
 * 
 * @member {number} [previousTotalDevicesWithEvent]
 * 
 * @member {array} [devicesCount]
 * 
 */
export interface EventDeviceCount {
  totalDevices?: number;
  totalDevicesWithEvent?: number;
  previousTotalDevicesWithEvent?: number;
  devicesCount?: DateTimeCounts[];
}

/**
 * @class
 * Initializes a new instance of the EventCountPerDevice class.
 * @constructor
 * @member {number} [avgCountPerDevice]
 * 
 * @member {number} [previousAvgCountPerDevice]
 * 
 * @member {array} [countPerDevice]
 * 
 */
export interface EventCountPerDevice {
  avgCountPerDevice?: number;
  previousAvgCountPerDevice?: number;
  countPerDevice?: DateTimeDecimalCounts[];
}

/**
 * @class
 * Initializes a new instance of the EventCountPerSession class.
 * @constructor
 * @member {number} [avgCountPerSession]
 * 
 * @member {number} [previousAvgCountPerSession]
 * 
 * @member {array} [countPerSession]
 * 
 */
export interface EventCountPerSession {
  avgCountPerSession?: number;
  previousAvgCountPerSession?: number;
  countPerSession?: DateTimeDecimalCounts[];
}

/**
 * @class
 * Initializes a new instance of the LogContainer class.
 * @constructor
 * @member {boolean} [exceededMaxLimit] indicates if the number of available
 * logs are more than the max allowed return limit(100).
 * 
 * @member {date} [lastReceivedLogTimestamp] the timestamp of the last log
 * received. This value can be used as the start time parameter in the
 * consecutive API call.
 * 
 * @member {array} logs the list of logs
 * 
 */
export interface LogContainer {
  exceededMaxLimit?: boolean;
  lastReceivedLogTimestamp?: Date;
  logs: Log[];
}

/**
 * @class
 * Initializes a new instance of the Log class.
 * @constructor
 * @member {date} timestamp Log creation timestamp.
 * 
 * @member {uuid} installId Install ID.
 * 
 * @member {object} device
 * 
 * @member {string} [device.sdkName] Name of the SDK. Consists of the name of
 * the SDK and the platform, e.g. "avalanchesdk.ios", "hockeysdk.android".
 * 
 * @member {string} [device.sdkVersion] Version of the SDK in semver format,
 * e.g. "1.2.0" or "0.12.3-alpha.1".
 * 
 * @member {string} [device.wrapperSdkVersion] Version of the wrapper SDK in
 * semver format. When the SDK is embedding another base SDK (for example
 * Xamarin.Android wraps Android), the Xamarin specific version is populated
 * into this field while sdkVersion refers to the original Android SDK.
 * 
 * @member {string} [device.wrapperSdkName] Name of the wrapper SDK. Consists
 * of the name of the SDK and the wrapper platform, e.g.
 * "avalanchesdk.xamarin", "hockeysdk.cordova".
 * 
 * @member {string} [device.model] Device model (example: iPad2,3).
 * 
 * @member {string} [device.oemName] Device manufacturer (example: HTC).
 * 
 * @member {string} [device.osName] OS name (example: iOS). The following OS
 * names are standardized (non-exclusive): Android, iOS, macOS, tvOS, Windows.
 * 
 * @member {string} [device.osVersion] OS version (example: 9.3.0).
 * 
 * @member {string} [device.osBuild] OS build code (example: LMY47X).
 * 
 * @member {number} [device.osApiLevel] API level when applicable like in
 * Android (example: 15).
 * 
 * @member {string} [device.locale] Language code (example: en_US).
 * 
 * @member {number} [device.timeZoneOffset] The offset in minutes from UTC for
 * the device time zone, including daylight savings time.
 * 
 * @member {string} [device.screenSize] Screen size of the device in pixels
 * (example: 640x480).
 * 
 * @member {string} [device.appVersion] Application version name, e.g. 1.1.0
 * 
 * @member {string} [device.carrierName] Carrier name (for mobile devices).
 * 
 * @member {string} [device.carrierCode] Carrier country code (for mobile
 * devices).
 * 
 * @member {string} [device.carrierCountry] Carrier country.
 * 
 * @member {string} [device.appBuild] The app's build number, e.g. 42.
 * 
 * @member {string} [device.appNamespace] The bundle identifier, package
 * identifier, or namespace, depending on what the individual plattforms use,
 * .e.g com.microsoft.example.
 * 
 * @member {string} type Polymorhpic Discriminator
 * 
 */
export interface Log {
  timestamp: Date;
  installId: string;
  device: Device;
  type: string;
}

/**
 * @class
 * Initializes a new instance of the Device class.
 * @constructor
 * Device characteristics.
 *
 * @member {string} sdkName Name of the SDK. Consists of the name of the SDK
 * and the platform, e.g. "avalanchesdk.ios", "hockeysdk.android".
 * 
 * @member {string} sdkVersion Version of the SDK in semver format, e.g.
 * "1.2.0" or "0.12.3-alpha.1".
 * 
 * @member {string} [wrapperSdkVersion] Version of the wrapper SDK in semver
 * format. When the SDK is embedding another base SDK (for example
 * Xamarin.Android wraps Android), the Xamarin specific version is populated
 * into this field while sdkVersion refers to the original Android SDK.
 * 
 * @member {string} [wrapperSdkName] Name of the wrapper SDK. Consists of the
 * name of the SDK and the wrapper platform, e.g. "avalanchesdk.xamarin",
 * "hockeysdk.cordova".
 * 
 * @member {string} model Device model (example: iPad2,3).
 * 
 * @member {string} oemName Device manufacturer (example: HTC).
 * 
 * @member {string} osName OS name (example: iOS). The following OS names are
 * standardized (non-exclusive): Android, iOS, macOS, tvOS, Windows.
 * 
 * @member {string} osVersion OS version (example: 9.3.0).
 * 
 * @member {string} [osBuild] OS build code (example: LMY47X).
 * 
 * @member {number} [osApiLevel] API level when applicable like in Android
 * (example: 15).
 * 
 * @member {string} locale Language code (example: en_US).
 * 
 * @member {number} timeZoneOffset The offset in minutes from UTC for the
 * device time zone, including daylight savings time.
 * 
 * @member {string} screenSize Screen size of the device in pixels (example:
 * 640x480).
 * 
 * @member {string} appVersion Application version name, e.g. 1.1.0
 * 
 * @member {string} [carrierName] Carrier name (for mobile devices).
 * 
 * @member {string} [carrierCode] Carrier country code (for mobile devices).
 * 
 * @member {string} [carrierCountry] Carrier country.
 * 
 * @member {string} appBuild The app's build number, e.g. 42.
 * 
 * @member {string} [appNamespace] The bundle identifier, package identifier,
 * or namespace, depending on what the individual plattforms use,  .e.g
 * com.microsoft.example.
 * 
 */
export interface Device {
  sdkName: string;
  sdkVersion: string;
  wrapperSdkVersion?: string;
  wrapperSdkName?: string;
  model: string;
  oemName: string;
  osName: string;
  osVersion: string;
  osBuild?: string;
  osApiLevel?: number;
  locale: string;
  timeZoneOffset: number;
  screenSize: string;
  appVersion: string;
  carrierName?: string;
  carrierCode?: string;
  carrierCountry?: string;
  appBuild: string;
  appNamespace?: string;
}

/**
 * @class
 * Initializes a new instance of the GenericLogContainer class.
 * @constructor
 * @member {boolean} [exceededMaxLimit] indicates if the number of available
 * logs are more than the max allowed return limit(100).
 * 
 * @member {date} [lastReceivedLogTimestamp] the timestamp of the last log
 * received. This value can be used as the start time parameter in the
 * consecutive API call.
 * 
 * @member {array} logs the list of logs
 * 
 */
export interface GenericLogContainer {
  exceededMaxLimit?: boolean;
  lastReceivedLogTimestamp?: Date;
  logs: GenericLog[];
}

/**
 * @class
 * Initializes a new instance of the GenericLog class.
 * @constructor
 * Generic log.
 *
 * @member {string} type Log type.
 * . Possible values include: 'event', 'page', 'start_session', 'error',
 * 'push_installation', 'start_service', 'custom_properties'
 * 
 * @member {date} timestamp Log creation timestamp.
 * 
 * @member {uuid} installId Install ID.
 * 
 * @member {uuid} [sessionId] Session ID.
 * 
 * @member {string} [eventId] Event ID.
 * 
 * @member {string} [eventName] Event name.
 * 
 * @member {string} [properties] Event specific properties.
 * 
 * @member {object} device
 * 
 * @member {string} [device.sdkName] Name of the SDK. Consists of the name of
 * the SDK and the platform, e.g. "avalanchesdk.ios", "hockeysdk.android".
 * 
 * @member {string} [device.sdkVersion] Version of the SDK in semver format,
 * e.g. "1.2.0" or "0.12.3-alpha.1".
 * 
 * @member {string} [device.wrapperSdkVersion] Version of the wrapper SDK in
 * semver format. When the SDK is embedding another base SDK (for example
 * Xamarin.Android wraps Android), the Xamarin specific version is populated
 * into this field while sdkVersion refers to the original Android SDK.
 * 
 * @member {string} [device.wrapperSdkName] Name of the wrapper SDK. Consists
 * of the name of the SDK and the wrapper platform, e.g.
 * "avalanchesdk.xamarin", "hockeysdk.cordova".
 * 
 * @member {string} [device.model] Device model (example: iPad2,3).
 * 
 * @member {string} [device.oemName] Device manufacturer (example: HTC).
 * 
 * @member {string} [device.osName] OS name (example: iOS). The following OS
 * names are standardized (non-exclusive): Android, iOS, macOS, tvOS, Windows.
 * 
 * @member {string} [device.osVersion] OS version (example: 9.3.0).
 * 
 * @member {string} [device.osBuild] OS build code (example: LMY47X).
 * 
 * @member {number} [device.osApiLevel] API level when applicable like in
 * Android (example: 15).
 * 
 * @member {string} [device.locale] Language code (example: en_US).
 * 
 * @member {number} [device.timeZoneOffset] The offset in minutes from UTC for
 * the device time zone, including daylight savings time.
 * 
 * @member {string} [device.screenSize] Screen size of the device in pixels
 * (example: 640x480).
 * 
 * @member {string} [device.appVersion] Application version name, e.g. 1.1.0
 * 
 * @member {string} [device.carrierName] Carrier name (for mobile devices).
 * 
 * @member {string} [device.carrierCode] Carrier country code (for mobile
 * devices).
 * 
 * @member {string} [device.carrierCountry] Carrier country.
 * 
 * @member {string} [device.appBuild] The app's build number, e.g. 42.
 * 
 * @member {string} [device.appNamespace] The bundle identifier, package
 * identifier, or namespace, depending on what the individual plattforms use,
 * .e.g com.microsoft.example.
 * 
 */
export interface GenericLog {
  type: string;
  timestamp: Date;
  installId: string;
  sessionId?: string;
  eventId?: string;
  eventName?: string;
  properties?: string;
  device: Device;
}

/**
 * @class
 * Initializes a new instance of the LogWithProperties class.
 * @constructor
 * @member {object} [properties] Additional key/value pair parameters.
 * 
 */
export interface LogWithProperties extends Log {
  properties?: { [propertyName: string]: string };
}

/**
 * @class
 * Initializes a new instance of the StartSessionLog class.
 * @constructor
 * Required explicit begin session log (a marker event for analytics service).
 *
 * @member {uuid} sessionId Session ID.
 * 
 */
export interface StartSessionLog extends Log {
  sessionId: string;
}

/**
 * @class
 * Initializes a new instance of the StartServiceLog class.
 * @constructor
 * Describe a MobileCenter.Start API call from the SDK.
 *
 * @member {array} [services] The list of services of the MobileCenter Start
 * API call.
 * 
 */
export interface StartServiceLog extends Log {
  services?: string[];
}

/**
 * @class
 * Initializes a new instance of the CustomPropertyLog class.
 * @constructor
 * Set or remove custom properties.
 *
 * @member {array} [properties] Custom property changes.
 * 
 */
export interface CustomPropertyLog extends Log {
  properties?: CustomProperty[];
}

/**
 * @class
 * Initializes a new instance of the CustomProperty class.
 * @constructor
 * @member {string} name
 * 
 * @member {string} type Polymorhpic Discriminator
 * 
 */
export interface CustomProperty {
  name: string;
  type: string;
}

/**
 * @class
 * Initializes a new instance of the StringProperty class.
 * @constructor
 * String property.
 *
 * @member {string} value String property value.
 * 
 */
export interface StringProperty extends CustomProperty {
  value: string;
}

/**
 * @class
 * Initializes a new instance of the NumberProperty class.
 * @constructor
 * Number property.
 *
 * @member {number} value Number property value.
 * 
 */
export interface NumberProperty extends CustomProperty {
  value: number;
}

/**
 * @class
 * Initializes a new instance of the BooleanProperty class.
 * @constructor
 * Boolean property.
 *
 * @member {boolean} value Boolean property value.
 * 
 */
export interface BooleanProperty extends CustomProperty {
  value: boolean;
}

/**
 * @class
 * Initializes a new instance of the DateTimeProperty class.
 * @constructor
 * Date and time property.
 *
 * @member {date} value Date time property value.
 * 
 */
export interface DateTimeProperty extends CustomProperty {
  value: Date;
}

/**
 * @class
 * Initializes a new instance of the ClearProperty class.
 * @constructor
 * Clear an existing property.
 *
 */
export interface ClearProperty extends CustomProperty {
}

/**
 * @class
 * Initializes a new instance of the PageLog class.
 * @constructor
 * Page view log (as in screens or activities).
 *
 * @member {uuid} sessionId Session ID.
 * 
 * @member {string} name Name of the page.
 * 
 */
export interface PageLog extends LogWithProperties {
  sessionId: string;
  name: string;
}

/**
 * @class
 * Initializes a new instance of the EventLog class.
 * @constructor
 * Event log.
 *
 * @member {uuid} sessionId Session ID.
 * 
 * @member {uuid} id Unique identifier for this event.
 * 
 * @member {string} name Name of the event.
 * 
 */
export interface EventLog extends LogWithProperties {
  sessionId: string;
  id: string;
  name: string;
}

/**
 * @class
 * Initializes a new instance of the PushInstallationLog class.
 * @constructor
 * Push installation Information.
 *
 * @member {string} pushToken The PNS handle for this installation.
 * 
 */
export interface PushInstallationLog extends Log {
  pushToken: string;
}

/**
 * @class
 * Initializes a new instance of the ErrorLog class.
 * @constructor
 * Error log.
 *
 * @member {uuid} sessionId Session ID.
 * 
 * @member {uuid} id Error identifier.
 * 
 * @member {number} [appLaunchToffset] Corresponds to the number of
 * milliseconds elapsed between the time the error occurred and the app was
 * launched.
 * 
 */
export interface ErrorLog extends Log {
  sessionId: string;
  id: string;
  appLaunchToffset?: number;
}

/**
 * @class
 * Initializes a new instance of the EventProperties class.
 * @constructor
 * Event properties during the time range
 *
 * @member {array} [eventPropertiesProperty]
 * 
 */
export interface EventProperties {
  eventPropertiesProperty?: string[];
}

/**
 * @class
 * Initializes a new instance of the EventPropertyValues class.
 * @constructor
 * Event property value counts during the time range in descending order
 *
 * @member {number} [total] The total property value counts
 * 
 * @member {array} [values] The event property values
 * 
 */
export interface EventPropertyValues {
  total?: number;
  values?: EventPropertyValue[];
}

/**
 * @class
 * Initializes a new instance of the EventPropertyValue class.
 * @constructor
 * An event property value with counts
 *
 * @member {string} [name] The event property value name
 * 
 * @member {number} [count] The count of the the event property value
 * 
 * @member {number} [previousCount] The count of previous time range of the
 * event property value
 * 
 */
export interface EventPropertyValue {
  name?: string;
  count?: number;
  previousCount?: number;
}

/**
 * @class
 * Initializes a new instance of the AudienceListResult class.
 * @constructor
 * List of audiences.
 *
 * @member {array} values List of audiences.
 * 
 * @member {string} [nextLink]
 * 
 */
export interface AudienceListResult {
  values: AudienceSummary[];
  nextLink?: string;
}

/**
 * @class
 * Initializes a new instance of the AudienceSummary class.
 * @constructor
 * Audience definition.
 *
 * @member {string} [name] Audience name.
 * 
 * @member {string} [description] Audience description.
 * 
 * @member {number} [estimatedCount] Estimated audience size.
 * 
 * @member {string} [definition] Audience definition in OData format.
 * 
 * @member {string} [state] Audience state. Possible values include:
 * 'Calculating', 'Ready', 'Disabled'
 * 
 */
export interface AudienceSummary {
  name?: string;
  description?: string;
  estimatedCount?: number;
  definition?: string;
  state?: string;
}

/**
 * @class
 * Initializes a new instance of the Audience class.
 * @constructor
 * Audience with details.
 *
 * @member {boolean} [enabled]  Default value: true .
 * 
 * @member {object} [customProperties] Custom properties used in the
 * definition.
 * 
 * @member {number} [estimatedTotalCount] Estimated total audience size.
 * 
 * @member {date} [timestamp] Date the audience was last refreshed.
 * 
 */
export interface Audience extends AudienceSummary {
  enabled?: boolean;
  customProperties?: { [propertyName: string]: string };
  estimatedTotalCount?: number;
  timestamp?: Date;
}

/**
 * @class
 * Initializes a new instance of the AudienceTestResult class.
 * @constructor
 * Audience test result.
 *
 * @member {string} [definition] Audience definition in OData format.
 * 
 * @member {object} [customProperties] Custom properties used in the
 * definition.
 * 
 * @member {number} [estimatedCount] Estimated audience size.
 * 
 * @member {number} [estimatedTotalCount] Estimated total audience size.
 * 
 */
export interface AudienceTestResult {
  definition?: string;
  customProperties?: { [propertyName: string]: string };
  estimatedCount?: number;
  estimatedTotalCount?: number;
}

/**
 * @class
 * Initializes a new instance of the AudienceDefinition class.
 * @constructor
 * Audience definition.
 *
 * @member {string} [description] Audience description.
 * 
 * @member {string} definition Audience definition in OData format.
 * 
 * @member {boolean} [enabled]  Default value: true .
 * 
 * @member {object} [customProperties] Custom properties used in the
 * definition.
 * 
 */
export interface AudienceDefinition {
  description?: string;
  definition: string;
  enabled?: boolean;
  customProperties?: { [propertyName: string]: string };
}

/**
 * @class
 * Initializes a new instance of the AudienceBlobResult class.
 * @constructor
 * Audience definition.
 *
 * @member {string} [url] Location of the audience blob.
 * 
 */
export interface AudienceBlobResult {
  url?: string;
}

/**
 * @class
 * Initializes a new instance of the AudienceDevicePropertiesListResult class.
 * @constructor
 * List of device properties.
 *
 * @member {object} values List of device properties.
 * 
 */
export interface AudienceDevicePropertiesListResult {
  values: { [propertyName: string]: string };
}

/**
 * @class
 * Initializes a new instance of the AudienceDevicePropertyValuesListResult class.
 * @constructor
 * List of device property values.
 *
 * @member {array} values List of device property values.
 * 
 */
export interface AudienceDevicePropertyValuesListResult {
  values: string[];
}

/**
 * @class
 * Initializes a new instance of the NotificationsListResult class.
 * @constructor
 * List of notifications
 *
 * @member {array} values
 * 
 * @member {number} [total] the total count of notifications
 * 
 * @member {string} [nextLink]
 * 
 */
export interface NotificationsListResult {
  values: NotificationOverviewResult[];
  total?: number;
  nextLink?: string;
}

/**
 * @class
 * Initializes a new instance of the NotificationOverviewResult class.
 * @constructor
 * Notification statistics
 *
 * @member {string} notificationId Notification id.
 * 
 * @member {string} [name] Notification name
 * 
 * @member {object} [notificationTarget]
 * 
 * @member {string} [notificationTarget.type] Polymorhpic Discriminator
 * 
 * @member {date} [sendTime] Notification send time
 * 
 * @member {number} [pnsSendFailure] Number of the notifications failed to
 * send to the push provider.
 * 
 * @member {number} [pnsSendSuccess] Number of the notifications successfully
 * sent to push the provider.
 * 
 * @member {string} state State of the notification. Possible values include:
 * 'Cancelled', 'Completed', 'Enqueued', 'Processing', 'Unknown'
 * 
 */
export interface NotificationOverviewResult {
  notificationId: string;
  name?: string;
  notificationTarget?: NotificationTarget;
  sendTime?: Date;
  pnsSendFailure?: number;
  pnsSendSuccess?: number;
  state: string;
}

/**
 * @class
 * Initializes a new instance of the NotificationTarget class.
 * @constructor
 * Generic notification target.
 *
 * @member {string} type Polymorhpic Discriminator
 * 
 */
export interface NotificationTarget {
  type: string;
}

/**
 * @class
 * Initializes a new instance of the NotificationDetailsResult class.
 * @constructor
 * Notification statistics
 *
 * @member {object} notificationContent
 * 
 * @member {string} [notificationContent.name] Notification name
 * 
 * @member {string} [notificationContent.title] Notification title
 * 
 * @member {string} [notificationContent.body] Notification body
 * 
 * @member {object} [notificationContent.customData] Notification custom
 * data(priority, expiration, etc.)
 * 
 * @member {array} [failureOutcomes] Failture outcome counts
 * 
 */
export interface NotificationDetailsResult extends NotificationOverviewResult {
  notificationContent: NotificationContent;
  failureOutcomes?: NotificationFailureOutcomeCount[];
}

/**
 * @class
 * Initializes a new instance of the NotificationContent class.
 * @constructor
 * Notification definition object
 *
 * @member {string} name Notification name
 * 
 * @member {string} [title] Notification title
 * 
 * @member {string} body Notification body
 * 
 * @member {object} [customData] Notification custom data(priority,
 * expiration, etc.)
 * 
 */
export interface NotificationContent {
  name: string;
  title?: string;
  body: string;
  customData?: { [propertyName: string]: string };
}

/**
 * @class
 * Initializes a new instance of the NotificationFailureOutcomeCount class.
 * @constructor
 * Notification failure outcome count
 *
 * @member {string} [failureReason] The reason of the notification failure
 * 
 * @member {number} [count] count of this type of failure
 * 
 */
export interface NotificationFailureOutcomeCount {
  failureReason?: string;
  count?: number;
}

/**
 * @class
 * Initializes a new instance of the NotificationIdList class.
 * @constructor
 * List of notification Ids
 *
 * @member {array} values List of notification Ids.
 * 
 */
export interface NotificationIdList {
  values: string[];
}

/**
 * @class
 * Initializes a new instance of the NotificationDefinition class.
 * @constructor
 * Notification definition object
 *
 * @member {object} [notificationTarget]
 * 
 * @member {string} [notificationTarget.type] Polymorhpic Discriminator
 * 
 * @member {object} notificationContent
 * 
 * @member {string} [notificationContent.name] Notification name
 * 
 * @member {string} [notificationContent.title] Notification title
 * 
 * @member {string} [notificationContent.body] Notification body
 * 
 * @member {object} [notificationContent.customData] Notification custom
 * data(priority, expiration, etc.)
 * 
 */
export interface NotificationDefinition {
  notificationTarget?: NotificationTarget;
  notificationContent: NotificationContent;
}

/**
 * @class
 * Initializes a new instance of the NotificationSendSucceededResult class.
 * @constructor
 * Notification send succeeded.
 *
 * @member {string} notificationId The unique notification identifier.
 * 
 */
export interface NotificationSendSucceededResult {
  notificationId: string;
}

/**
 * @class
 * Initializes a new instance of the NotificationTargetAudiences class.
 * @constructor
 * Notification target audiences.
 *
 * @member {array} audiences List of target audiences.
 * 
 */
export interface NotificationTargetAudiences extends NotificationTarget {
  audiences: string[];
}

/**
 * @class
 * Initializes a new instance of the NotificationTargetUsers class.
 * @constructor
 * Notification target users.
 *
 * @member {array} users List of target users.
 * 
 */
export interface NotificationTargetUsers extends NotificationTarget {
  users: string[];
}

/**
 * @class
 * Initializes a new instance of the NotificationTargetDevices class.
 * @constructor
 * Notification target devices. If null, all devices will be
 * targeted(broadcast).
 *
 * @member {array} [devices] List of target devices.
 * 
 */
export interface NotificationTargetDevices extends NotificationTarget {
  devices?: string[];
}

/**
 * @class
 * Initializes a new instance of the NotificationConfig class.
 * @constructor
 * Generic notification configuration.
 *
 * @member {string} type Polymorhpic Discriminator
 * 
 */
export interface NotificationConfig {
  type: string;
}

/**
 * @class
 * Initializes a new instance of the NotificationConfigApple class.
 * @constructor
 * Apple notification certificate configuration.
 *
 * @member {string} endpointType Possible values include: 'production',
 * 'sandbox'
 * 
 * @member {string} certEncoded Base64 encoded certificate string.
 * 
 * @member {string} certFilename Certificate file name
 * 
 * @member {string} certKey Certificate password
 * 
 */
export interface NotificationConfigApple extends NotificationConfig {
  endpointType: string;
  certEncoded: string;
  certFilename: string;
  certKey: string;
}

/**
 * @class
 * Initializes a new instance of the NotificationConfigAppleToken class.
 * @constructor
 * Apple notification auth token configuration.
 *
 * @member {string} keyId A 10-character key identifier (kid).
 * 
 * @member {string} appName The name of the application.
 * 
 * @member {string} appId A 10-character Team ID (iss).
 * 
 * @member {string} token Provider Authentication Token.
 * 
 * @member {string} endpointType Possible values include: 'production',
 * 'sandbox'
 * 
 */
export interface NotificationConfigAppleToken extends NotificationConfig {
  keyId: string;
  appName: string;
  appId: string;
  token: string;
  endpointType: string;
}

/**
 * @class
 * Initializes a new instance of the NotificationConfigGoogle class.
 * @constructor
 * Google notification configuration.
 *
 * @member {string} googleApiKey GCM API key.
 * 
 */
export interface NotificationConfigGoogle extends NotificationConfig {
  googleApiKey: string;
}

/**
 * @class
 * Initializes a new instance of the NotificationConfigWindows class.
 * @constructor
 * WNS notification configuration.
 *
 * @member {string} packageSid Package security identifier (SID).
 * 
 * @member {string} secretKey Secret key.
 * 
 */
export interface NotificationConfigWindows extends NotificationConfig {
  packageSid: string;
  secretKey: string;
}

/**
 * @class
 * Initializes a new instance of the NotificationConfigResult class.
 * @constructor
 * Generic notification configuration result.
 *
 * @member {string} type Polymorhpic Discriminator
 * 
 */
export interface NotificationConfigResult {
  type: string;
}

/**
 * @class
 * Initializes a new instance of the NotificationConfigAppleResult class.
 * @constructor
 * Apple notification certificate configuration result.
 *
 * @member {string} endpointType Possible values include: 'production',
 * 'sandbox'
 * 
 * @member {date} certExpiration Certificate expiration date.
 * 
 * @member {string} certFilename Certificate file name
 * 
 */
export interface NotificationConfigAppleResult extends NotificationConfigResult {
  endpointType: string;
  certExpiration: Date;
  certFilename: string;
}

/**
 * @class
 * Initializes a new instance of the NotificationConfigAppleTokenResult class.
 * @constructor
 * Apple notification auth token configuration result.
 *
 * @member {string} keyId A 10-character key identifier (kid).
 * 
 * @member {string} appName The name of the application.
 * 
 * @member {string} appId A 10-character Team ID (iss).
 * 
 * @member {string} endpointType Possible values include: 'production',
 * 'sandbox'
 * 
 */
export interface NotificationConfigAppleTokenResult extends NotificationConfigResult {
  keyId: string;
  appName: string;
  appId: string;
  endpointType: string;
}

/**
 * @class
 * Initializes a new instance of the NotificationConfigGoogleResult class.
 * @constructor
 * Google notification configuration result.
 *
 * @member {string} googleApiKey GCM API key.
 * 
 */
export interface NotificationConfigGoogleResult extends NotificationConfigResult {
  googleApiKey: string;
}

/**
 * @class
 * Initializes a new instance of the NotificationConfigWindowsResult class.
 * @constructor
 * WNS notification configuration result.
 *
 * @member {string} packageSid Package security identifier (SID).
 * 
 */
export interface NotificationConfigWindowsResult extends NotificationConfigResult {
  packageSid: string;
}

/**
 * @class
 * Initializes a new instance of the ExportConfig class.
 * @constructor
 * Export job configuration
 *
 * @member {string} type Possible values include: 'BlobStorage', 'AppInsights'
 * 
 * @member {string} storage Target storage secret
 * 
 * @member {object} metadata Export metadata
 * 
 */
export interface ExportConfig {
  type: string;
  storage: string;
  metadata: { [propertyName: string]: string };
}

/**
 * @class
 * Initializes a new instance of the ExportConfigResult class.
 * @constructor
 * Export job configuration result
 *
 * @member {string} id Export Id
 * 
 * @member {string} type Possible values include: 'BlobStorage', 'AppInsights'
 * 
 * @member {object} metadata Export metadata
 * 
 * @member {string} state State of the export job. Possible values include:
 * 'Enabled', 'Disabled', 'Pending', 'Deleted', 'Invalid'
 * 
 */
export interface ExportConfigResult {
  id: string;
  type: string;
  metadata: { [propertyName: string]: string };
  state: string;
}

/**
 * @class
 * Initializes a new instance of the DeviceConfiguration class.
 * @constructor
 * @member {string} [name] The name of the device model and OS version
 * 
 * @member {uuid} [id] The unique id of the device configuration
 * 
 * @member {number} [tier] The tier
 * 
 * @member {object} [image]
 * 
 * @member {string} [image.full]
 * 
 * @member {string} [image.thumb]
 * 
 * @member {object} [model]
 * 
 * @member {string} [model.name]
 * 
 * @member {string} [model.manufacturer]
 * 
 * @member {string} [model.model]
 * 
 * @member {string} [model.platform]
 * 
 * @member {object} [model.dimensions]
 * 
 * @member {object} [model.dimensions.depth]
 * 
 * @member {object} [model.dimensions.height]
 * 
 * @member {object} [model.dimensions.width]
 * 
 * @member {object} [model.resolution]
 * 
 * @member {string} [model.resolution.height]
 * 
 * @member {string} [model.resolution.width]
 * 
 * @member {string} [model.resolution.ppi]
 * 
 * @member {string} [model.releaseDate]
 * 
 * @member {string} [model.formFactor]
 * 
 * @member {object} [model.screenSize]
 * 
 * @member {string} [model.screenSize.cm]
 * 
 * @member {string} [model.screenSize.in]
 * 
 * @member {object} [model.cpu]
 * 
 * @member {string} [model.cpu.frequency]
 * 
 * @member {string} [model.cpu.core]
 * 
 * @member {object} [model.memory]
 * 
 * @member {string} [model.memory.formattedSize]
 * 
 * @member {number} [model.screenRotation]
 * 
 * @member {object} [model.deviceFrame]
 * 
 * @member {object} [model.deviceFrame.grid]
 * 
 * @member {number} [model.deviceFrame.grid.width]
 * 
 * @member {number} [model.deviceFrame.grid.height]
 * 
 * @member {string} [model.deviceFrame.grid.frameUrl]
 * 
 * @member {array} [model.deviceFrame.grid.screen]
 * 
 * @member {object} [model.deviceFrame.full]
 * 
 * @member {number} [model.deviceFrame.full.width]
 * 
 * @member {number} [model.deviceFrame.full.height]
 * 
 * @member {string} [model.deviceFrame.full.frameUrl]
 * 
 * @member {array} [model.deviceFrame.full.screen]
 * 
 * @member {number} [model.availabilityCount]
 * 
 * @member {string} [os]
 * 
 * @member {string} [osName]
 * 
 * @member {number} [marketShare]
 * 
 */
export interface DeviceConfiguration {
  name?: string;
  id?: string;
  tier?: number;
  image?: DeviceConfigurationImage;
  model?: DeviceModel;
  os?: string;
  osName?: string;
  marketShare?: number;
}

/**
 * @class
 * Initializes a new instance of the DeviceConfigurationImage class.
 * @constructor
 * @member {string} [full]
 * 
 * @member {string} [thumb]
 * 
 */
export interface DeviceConfigurationImage {
  full?: string;
  thumb?: string;
}

/**
 * @class
 * Initializes a new instance of the DeviceModel class.
 * @constructor
 * @member {string} [name]
 * 
 * @member {string} [manufacturer]
 * 
 * @member {string} [model]
 * 
 * @member {string} [platform]
 * 
 * @member {object} [dimensions]
 * 
 * @member {object} [dimensions.depth]
 * 
 * @member {object} [dimensions.height]
 * 
 * @member {object} [dimensions.width]
 * 
 * @member {object} [resolution]
 * 
 * @member {string} [resolution.height]
 * 
 * @member {string} [resolution.width]
 * 
 * @member {string} [resolution.ppi]
 * 
 * @member {string} [releaseDate]
 * 
 * @member {string} [formFactor]
 * 
 * @member {object} [screenSize]
 * 
 * @member {string} [screenSize.cm]
 * 
 * @member {string} [screenSize.in]
 * 
 * @member {object} [cpu]
 * 
 * @member {string} [cpu.frequency]
 * 
 * @member {string} [cpu.core]
 * 
 * @member {object} [memory]
 * 
 * @member {string} [memory.formattedSize]
 * 
 * @member {number} [screenRotation]
 * 
 * @member {object} [deviceFrame]
 * 
 * @member {object} [deviceFrame.grid]
 * 
 * @member {number} [deviceFrame.grid.width]
 * 
 * @member {number} [deviceFrame.grid.height]
 * 
 * @member {string} [deviceFrame.grid.frameUrl]
 * 
 * @member {array} [deviceFrame.grid.screen]
 * 
 * @member {object} [deviceFrame.full]
 * 
 * @member {number} [deviceFrame.full.width]
 * 
 * @member {number} [deviceFrame.full.height]
 * 
 * @member {string} [deviceFrame.full.frameUrl]
 * 
 * @member {array} [deviceFrame.full.screen]
 * 
 * @member {number} [availabilityCount]
 * 
 */
export interface DeviceModel {
  name?: string;
  manufacturer?: string;
  model?: string;
  platform?: string;
  dimensions?: DeviceDimensions;
  resolution?: DeviceResolution;
  releaseDate?: string;
  formFactor?: string;
  screenSize?: DeviceScreenSize;
  cpu?: DeviceCpu;
  memory?: DeviceMemory;
  screenRotation?: number;
  deviceFrame?: DeviceFrame;
  availabilityCount?: number;
}

/**
 * @class
 * Initializes a new instance of the DeviceDimensions class.
 * @constructor
 * Physical device dimensions
 *
 * @member {object} [depth]
 * 
 * @member {object} [height]
 * 
 * @member {object} [width]
 * 
 */
export interface DeviceDimensions {
  depth?: any;
  height?: any;
  width?: any;
}

/**
 * @class
 * Initializes a new instance of the DeviceResolution class.
 * @constructor
 * Device screen resolution
 *
 * @member {string} [height]
 * 
 * @member {string} [width]
 * 
 * @member {string} [ppi]
 * 
 */
export interface DeviceResolution {
  height?: string;
  width?: string;
  ppi?: string;
}

/**
 * @class
 * Initializes a new instance of the DeviceScreenSize class.
 * @constructor
 * Physical device screen dimensions
 *
 * @member {string} [cm]
 * 
 * @member {string} [in]
 * 
 */
export interface DeviceScreenSize {
  cm?: string;
  in?: string;
}

/**
 * @class
 * Initializes a new instance of the DeviceCpu class.
 * @constructor
 * CPU data for device
 *
 * @member {string} [frequency]
 * 
 * @member {string} [core]
 * 
 */
export interface DeviceCpu {
  frequency?: string;
  core?: string;
}

/**
 * @class
 * Initializes a new instance of the DeviceMemory class.
 * @constructor
 * Memory data for device
 *
 * @member {string} [formattedSize]
 * 
 */
export interface DeviceMemory {
  formattedSize?: string;
}

/**
 * @class
 * Initializes a new instance of the DeviceFrame class.
 * @constructor
 * @member {object} [grid]
 * 
 * @member {number} [grid.width]
 * 
 * @member {number} [grid.height]
 * 
 * @member {string} [grid.frameUrl]
 * 
 * @member {array} [grid.screen]
 * 
 * @member {object} [full]
 * 
 * @member {number} [full.width]
 * 
 * @member {number} [full.height]
 * 
 * @member {string} [full.frameUrl]
 * 
 * @member {array} [full.screen]
 * 
 */
export interface DeviceFrame {
  grid?: DeviceFrameDefinition;
  full?: DeviceFrameDefinition;
}

/**
 * @class
 * Initializes a new instance of the DeviceFrameDefinition class.
 * @constructor
 * @member {number} [width]
 * 
 * @member {number} [height]
 * 
 * @member {string} [frameUrl]
 * 
 * @member {array} [screen]
 * 
 */
export interface DeviceFrameDefinition {
  width?: number;
  height?: number;
  frameUrl?: string;
  screen?: number[];
}

/**
 * @class
 * Initializes a new instance of the DeviceSetConfiguration class.
 * @constructor
 * @member {uuid} [id] The unique id of the device configuration
 * 
 * @member {object} [image]
 * 
 * @member {string} [image.thumb]
 * 
 * @member {object} [model]
 * 
 * @member {string} [model.name]
 * 
 * @member {string} [model.manufacturer]
 * 
 * @member {string} [model.releaseDate]
 * 
 * @member {string} [model.formFactor]
 * 
 * @member {string} [os]
 * 
 */
export interface DeviceSetConfiguration {
  id?: string;
  image?: DeviceSetConfigurationImage;
  model?: DeviceSetModel;
  os?: string;
}

/**
 * @class
 * Initializes a new instance of the DeviceSetConfigurationImage class.
 * @constructor
 * @member {string} [thumb]
 * 
 */
export interface DeviceSetConfigurationImage {
  thumb?: string;
}

/**
 * @class
 * Initializes a new instance of the DeviceSetModel class.
 * @constructor
 * @member {string} [name]
 * 
 * @member {string} [manufacturer]
 * 
 * @member {string} [releaseDate]
 * 
 * @member {string} [formFactor]
 * 
 */
export interface DeviceSetModel {
  name?: string;
  manufacturer?: string;
  releaseDate?: string;
  formFactor?: string;
}

/**
 * @class
 * Initializes a new instance of the TestRun class.
 * @constructor
 * @summary Test Run
 *
 * Summary single test run on Xamarin Test Cloud
 *
 * @member {uuid} [id] The unique id of the test upload
 * 
 * @member {string} [date] The date and time the test was uploaded
 * 
 * @member {string} [appVersion] The compiled version of the app binary
 * 
 * @member {string} [testSeries] The name of the test series with which this
 * test upload is associated
 * 
 * @member {string} [platform] The device platform targeted by the test.
 * Possible values are 'ios' or 'android'
 * 
 * @member {string} [runStatus] The current status of the test run, in
 * relation to the various phases
 * 
 * @member {string} [resultStatus] The passed/failed state
 * 
 * @member {string} [state] Deprecated. Use runStatus instead.
 * 
 * @member {string} [status] Deprecated. Use resultStatus instead.
 * 
 * @member {string} [description] Human readable explanation of the current
 * test status
 * 
 * @member {object} [stats]
 * 
 * @member {number} [stats.devices] Number of devices running the test
 * 
 * @member {number} [stats.devicesFinished] Number of finished devices
 * 
 * @member {number} [stats.devicesFailed] Number of failed devices
 * 
 * @member {number} [stats.total] Number of tests in total
 * 
 * @member {number} [stats.passed] Number of passed tests
 * 
 * @member {number} [stats.failed] Number of failed tests
 * 
 * @member {number} [stats.skipped] Number of skipped tests
 * 
 * @member {number} [stats.peakMemory] The max amount of MB used during the
 * test run
 * 
 * @member {number} [stats.totalDeviceMinutes] The number of minutes of device
 * time the test has been runnign
 * 
 * @member {string} [testType] The name of the test framework used to run this
 * test
 * 
 * @member {string} [uploadedBy] The name of the user who uploaded the test
 * 
 */
export interface TestRun {
  id?: string;
  date?: string;
  appVersion?: string;
  testSeries?: string;
  platform?: string;
  runStatus?: string;
  resultStatus?: string;
  state?: string;
  status?: string;
  description?: string;
  stats?: TestRunStatistics;
  testType?: string;
  uploadedBy?: string;
}

/**
 * @class
 * Initializes a new instance of the TestRunStatistics class.
 * @constructor
 * @summary Test Run Statistics
 *
 * Summary single test run on Xamarin Test Cloud
 *
 * @member {number} [devices] Number of devices running the test
 * 
 * @member {number} [devicesFinished] Number of finished devices
 * 
 * @member {number} [devicesFailed] Number of failed devices
 * 
 * @member {number} [total] Number of tests in total
 * 
 * @member {number} [passed] Number of passed tests
 * 
 * @member {number} [failed] Number of failed tests
 * 
 * @member {number} [skipped] Number of skipped tests
 * 
 * @member {number} [peakMemory] The max amount of MB used during the test run
 * 
 * @member {number} [totalDeviceMinutes] The number of minutes of device time
 * the test has been runnign
 * 
 */
export interface TestRunStatistics {
  devices?: number;
  devicesFinished?: number;
  devicesFailed?: number;
  total?: number;
  passed?: number;
  failed?: number;
  skipped?: number;
  peakMemory?: number;
  totalDeviceMinutes?: number;
}

/**
 * @class
 * Initializes a new instance of the TestSeries class.
 * @constructor
 * @summary Test Series
 *
 * Summary of a single test series
 *
 * @member {string} slug Unique, human-readable identifier of the test series
 * 
 * @member {string} name Name of the test series
 * 
 * @member {string} [mostRecentActivity] Date of the latest test run that used
 * this test series
 * 
 * @member {array} [testRuns] Most recent test runs
 * 
 */
export interface TestSeries {
  slug: string;
  name: string;
  mostRecentActivity?: string;
  testRuns?: TestRunSummary[];
}

/**
 * @class
 * Initializes a new instance of the TestRunSummary class.
 * @constructor
 * @summary Test Run Summary
 *
 * Most important information about a test run.
 *
 * @member {string} [date] Date of the test run.
 * 
 * @member {string} [statusDescription] Human-readable status of the test run.
 * 
 * @member {number} [failed] Number of failed tests
 * 
 * @member {number} [passed] Number of passed tests
 * 
 * @member {boolean} [completed] Tells whether the test run has completed
 * 
 */
export interface TestRunSummary {
  date?: string;
  statusDescription?: string;
  failed?: number;
  passed?: number;
  completed?: boolean;
}

/**
 * @class
 * Initializes a new instance of the DeviceSelection class.
 * @constructor
 * @summary Device Selection
 *
 * Short ID for a list of device IDs
 *
 * @member {string} shortId Identifier of the device selection
 * 
 */
export interface DeviceSelection {
  shortId: string;
}

/**
 * @class
 * Initializes a new instance of the DeviceSet class.
 * @constructor
 * @summary Device Set
 *
 * The name and devices of the device set
 *
 * @member {string} id Identifier of the device set
 * 
 * @member {number} [manufacturerCount] The number of manufacturers in the
 * device set's device selection
 * 
 * @member {string} name Name of the device set
 * 
 * @member {string} [slug] Slug of the device set
 * 
 * @member {object} owner
 * 
 * @member {string} [owner.type] Type of account
 * 
 * @member {string} [owner.id] Account ID
 * 
 * @member {string} [owner.displayName] Display name of the account
 * 
 * @member {string} [owner.name] Name of the account
 * 
 * @member {number} [osVersionCount] The number of os versions in the device
 * set's device selection
 * 
 * @member {array} deviceConfigurations
 * 
 */
export interface DeviceSet {
  id: string;
  manufacturerCount?: number;
  name: string;
  slug?: string;
  owner: DeviceSetOwner;
  osVersionCount?: number;
  deviceConfigurations: DeviceSetConfiguration[];
}

/**
 * @class
 * Initializes a new instance of the DeviceSetOwner class.
 * @constructor
 * @summary Device Set Owner
 *
 * The owner of a device set
 *
 * @member {string} type Type of account
 * 
 * @member {string} id Account ID
 * 
 * @member {string} [displayName] Display name of the account
 * 
 * @member {string} name Name of the account
 * 
 */
export interface DeviceSetOwner {
  type: string;
  id: string;
  displayName?: string;
  name: string;
}

/**
 * @class
 * Initializes a new instance of the Subscription class.
 * @constructor
 * @summary Subscription
 *
 * Subscription information
 *
 * @member {string} [startsAt] The date the subscription began
 * 
 * @member {string} [endsAt] The date the subscription will end or ended
 * 
 * @member {number} [daysLeft] The number of days left in the subscription
 * 
 * @member {object} [tier]
 * 
 * @member {string} [tier.name] The name of the tier
 * 
 * @member {boolean} [active] Is the subscription currently active?
 * 
 * @member {uuid} [id] Id of the subscription
 * 
 */
export interface Subscription {
  startsAt?: string;
  endsAt?: string;
  daysLeft?: number;
  tier?: Tier;
  active?: boolean;
  id?: string;
}

/**
 * @class
 * Initializes a new instance of the Tier class.
 * @constructor
 * @summary Subscription Tier
 *
 * @member {string} [name] The name of the tier
 * 
 */
export interface Tier {
  name?: string;
}

/**
 * @class
 * Initializes a new instance of the TestReport class.
 * @constructor
 * @member {string} appUploadId
 * 
 * @member {string} date
 * 
 * @member {string} testType
 * 
 * @member {string} platform
 * 
 * @member {object} stats
 * 
 * @member {number} [stats.os]
 * 
 * @member {number} [stats.devices]
 * 
 * @member {number} [stats.filesize]
 * 
 * @member {number} [stats.totalDeviceMinutes]
 * 
 * @member {number} [stats.devicesNotRunned]
 * 
 * @member {number} [stats.failed]
 * 
 * @member {number} [stats.skipped]
 * 
 * @member {number} [stats.passed]
 * 
 * @member {number} [stats.total]
 * 
 * @member {number} [stats.devicesFinished]
 * 
 * @member {number} [stats.devicesFailed]
 * 
 * @member {number} [stats.devicesSkipped]
 * 
 * @member {number} [stats.stepCount]
 * 
 * @member {string} id
 * 
 * @member {number} schemaVersion
 * 
 * @member {number} revision
 * 
 * @member {array} features
 * 
 * @member {array} finishedDeviceSnapshots
 * 
 * @member {array} deviceLogs
 * 
 * @member {string} dateFinished
 * 
 * @member {string} [errorMessage]
 * 
 */
export interface TestReport {
  appUploadId: string;
  date: string;
  testType: string;
  platform: string;
  stats: TestReportStats;
  id: string;
  schemaVersion: number;
  revision: number;
  features: TestReportFeaturesItem[];
  finishedDeviceSnapshots: string[];
  deviceLogs: TestReportDeviceLogsItem[];
  dateFinished: string;
  errorMessage?: string;
}

/**
 * @class
 * Initializes a new instance of the TestReportStats class.
 * @constructor
 * @member {number} [os]
 * 
 * @member {number} [devices]
 * 
 * @member {number} [filesize]
 * 
 * @member {number} [totalDeviceMinutes]
 * 
 * @member {number} [devicesNotRunned]
 * 
 * @member {number} [failed]
 * 
 * @member {number} [skipped]
 * 
 * @member {number} [passed]
 * 
 * @member {number} [total]
 * 
 * @member {number} [devicesFinished]
 * 
 * @member {number} [devicesFailed]
 * 
 * @member {number} [devicesSkipped]
 * 
 * @member {number} [stepCount]
 * 
 */
export interface TestReportStats {
  os?: number;
  devices?: number;
  filesize?: number;
  totalDeviceMinutes?: number;
  devicesNotRunned?: number;
  failed?: number;
  skipped?: number;
  passed?: number;
  total?: number;
  devicesFinished?: number;
  devicesFailed?: number;
  devicesSkipped?: number;
  stepCount?: number;
}

/**
 * @class
 * Initializes a new instance of the TestReportFeaturesItem class.
 * @constructor
 * @member {string} [name]
 * 
 * @member {array} [tests]
 * 
 * @member {number} [failed]
 * 
 * @member {number} [skipped]
 * 
 * @member {number} [peakMemory]
 * 
 * @member {number} [peakDuration]
 * 
 */
export interface TestReportFeaturesItem {
  name?: string;
  tests?: TestReportFeaturesItemTestsItem[];
  failed?: number;
  skipped?: number;
  peakMemory?: number;
  peakDuration?: number;
}

/**
 * @class
 * Initializes a new instance of the TestReportFeaturesItemTestsItem class.
 * @constructor
 * @member {string} [testName]
 * 
 * @member {array} [runs]
 * 
 * @member {number} [peakMemory]
 * 
 * @member {number} [peakDuration]
 * 
 */
export interface TestReportFeaturesItemTestsItem {
  testName?: string;
  runs?: TestReportFeaturesItemTestsItemRunsItem[];
  peakMemory?: number;
  peakDuration?: number;
}

/**
 * @class
 * Initializes a new instance of the TestReportFeaturesItemTestsItemRunsItem class.
 * @constructor
 * @member {number} [number]
 * 
 * @member {array} [steps]
 * 
 * @member {number} [failed]
 * 
 * @member {number} [skipped]
 * 
 * @member {string} [reportUrl]
 * 
 * @member {string} [id]
 * 
 */
export interface TestReportFeaturesItemTestsItemRunsItem {
  number?: number;
  steps?: TestReportFeaturesItemTestsItemRunsItemStepsItem[];
  failed?: number;
  skipped?: number;
  reportUrl?: string;
  id?: string;
}

/**
 * @class
 * Initializes a new instance of the TestReportFeaturesItemTestsItemRunsItemStepsItem class.
 * @constructor
 * @member {string} [stepName]
 * 
 * @member {string} [id]
 * 
 * @member {array} [stepExecutions]
 * 
 * @member {number} [failed]
 * 
 * @member {number} [skipped]
 * 
 * @member {string} [stepReportUrl]
 * 
 */
export interface TestReportFeaturesItemTestsItemRunsItemStepsItem {
  stepName?: string;
  id?: string;
  stepExecutions?: TestReportFeaturesItemTestsItemRunsItemStepsItemStepExecutionsItem[];
  failed?: number;
  skipped?: number;
  stepReportUrl?: string;
}

/**
 * @class
 * Initializes a new instance of the TestReportFeaturesItemTestsItemRunsItemStepsItemStepExecutionsItem class.
 * @constructor
 * @member {string} [deviceSnapshotId]
 * 
 * @member {string} [status]
 * 
 * @member {number} [timestamp]
 * 
 */
export interface TestReportFeaturesItemTestsItemRunsItemStepsItemStepExecutionsItem {
  deviceSnapshotId?: string;
  status?: string;
  timestamp?: number;
}

/**
 * @class
 * Initializes a new instance of the TestReportDeviceLogsItem class.
 * @constructor
 * @member {string} [deviceSnapshotId]
 * 
 * @member {string} [deviceLog]
 * 
 * @member {string} [testLog]
 * 
 * @member {string} [appiumLog]
 * 
 */
export interface TestReportDeviceLogsItem {
  deviceSnapshotId?: string;
  deviceLog?: string;
  testLog?: string;
  appiumLog?: string;
}

/**
 * @class
 * Initializes a new instance of the StepReport class.
 * @constructor
 * @member {array} finishedSnapshots
 * 
 * @member {array} deviceScreenshots
 * 
 */
export interface StepReport {
  finishedSnapshots: string[];
  deviceScreenshots: StepReportDeviceScreenshotsItem[];
}

/**
 * @class
 * Initializes a new instance of the StepReportDeviceScreenshotsItem class.
 * @constructor
 * @member {string} [id]
 * 
 * @member {string} [deviceSnapshotId]
 * 
 * @member {array} [stacktrace]
 * 
 * @member {array} [crashData]
 * 
 * @member {string} [status]
 * 
 * @member {string} [title]
 * 
 * @member {object} [screenshot]
 * 
 * @member {object} [screenshot.urls]
 * 
 * @member {string} [screenshot.urls.original]
 * 
 * @member {string} [screenshot.urls.small]
 * 
 * @member {string} [screenshot.urls.medium]
 * 
 * @member {string} [screenshot.urls.large]
 * 
 * @member {number} [screenshot.rotation]
 * 
 * @member {boolean} [screenshot.landscape]
 * 
 * @member {string} [logFile]
 * 
 * @member {string} [appiumLogFile]
 * 
 */
export interface StepReportDeviceScreenshotsItem {
  id?: string;
  deviceSnapshotId?: string;
  stacktrace?: string[];
  crashData?: string[];
  status?: string;
  title?: string;
  screenshot?: StepReportDeviceScreenshotsItemScreenshot;
  logFile?: string;
  appiumLogFile?: string;
}

/**
 * @class
 * Initializes a new instance of the StepReportDeviceScreenshotsItemScreenshot class.
 * @constructor
 * @member {object} [urls]
 * 
 * @member {string} [urls.original]
 * 
 * @member {string} [urls.small]
 * 
 * @member {string} [urls.medium]
 * 
 * @member {string} [urls.large]
 * 
 * @member {number} [rotation]
 * 
 * @member {boolean} [landscape]
 * 
 */
export interface StepReportDeviceScreenshotsItemScreenshot {
  urls?: StepReportDeviceScreenshotsItemScreenshotUrls;
  rotation?: number;
  landscape?: boolean;
}

/**
 * @class
 * Initializes a new instance of the StepReportDeviceScreenshotsItemScreenshotUrls class.
 * @constructor
 * @member {string} [original]
 * 
 * @member {string} [small]
 * 
 * @member {string} [medium]
 * 
 * @member {string} [large]
 * 
 */
export interface StepReportDeviceScreenshotsItemScreenshotUrls {
  original?: string;
  small?: string;
  medium?: string;
  large?: string;
}

/**
 * @class
 * Initializes a new instance of the TestCloudErrorDetails class.
 * @constructor
 * @summary Test Cloud Error Details
 *
 * Details of a failed operation
 *
 * @member {string} status Status of the operation
 * 
 * @member {string} message Human-readable message that describes the error
 * 
 */
export interface TestCloudErrorDetails {
  status: string;
  message: string;
}

/**
 * @class
 * Initializes a new instance of the TestCloudFileHashDeprecated class.
 * @constructor
 * @summary Test Cloud File Hash
 *
 * Hash, type, path and byte range of a file that is required in test run
 *
 * @member {string} fileType Type of the file. Possible values include:
 * 'dsym-file', 'app-file', 'test-file'
 * 
 * @member {string} checksum SHA256 hash of the file
 * 
 * @member {string} relativePath Relative path of the file
 * 
 * @member {string} [byteRange] Range of bytes required to verify ownership of
 * the file
 * 
 */
export interface TestCloudFileHashDeprecated {
  fileType: string;
  checksum: string;
  relativePath: string;
  byteRange?: string;
}

/**
 * @class
 * Initializes a new instance of the TestCloudFileHash class.
 * @constructor
 * @summary Test Cloud File Hash
 *
 * Hash, type, path and byte range of a file that is required in test run
 *
 * @member {string} fileType Type of the file. Possible values include:
 * 'dsym-file', 'app-file', 'test-file'
 * 
 * @member {string} checksum SHA256 hash of the file
 * 
 * @member {string} relativePath Relative path of the file
 * 
 */
export interface TestCloudFileHash {
  fileType: string;
  checksum: string;
  relativePath: string;
}

/**
 * @class
 * Initializes a new instance of the TestCloudFileHashResponse class.
 * @constructor
 * @summary Test Cloud File Hash Response
 *
 * Response message for single uploaded file hash
 *
 * @member {string} fileType Type of the file. Possible values include:
 * 'dsym-file', 'app-file', 'test-file'
 * 
 * @member {string} checksum SHA256 hash of the file
 * 
 * @member {string} [relativePath] Relative path of the file
 * 
 * @member {object} uploadStatus Status of the upload
 * 
 * @member {number} [uploadStatus.statusCode] HTTP status code that represent
 * result of upload
 * 
 * @member {string} [uploadStatus.location] URI that should be used to make
 * POST request if file with given hash doesn't exist. This is set when
 * status_code is equal to 412
 * 
 */
export interface TestCloudFileHashResponse {
  fileType: string;
  checksum: string;
  relativePath?: string;
  uploadStatus: TestCloudHashUploadStatus;
}

/**
 * @class
 * Initializes a new instance of the TestCloudHashUploadStatus class.
 * @constructor
 * @summary Test Cloud Hash Upload Status
 *
 * Result of uploading a single file hash
 *
 * @member {number} statusCode HTTP status code that represent result of upload
 * 
 * @member {string} [location] URI that should be used to make POST request if
 * file with given hash doesn't exist. This is set when status_code is equal
 * to 412
 * 
 */
export interface TestCloudHashUploadStatus {
  statusCode: number;
  location?: string;
}

/**
 * @class
 * Initializes a new instance of the TestCloudStartTestRunOptions class.
 * @constructor
 * @summary Test Cloud Start Test Run Options
 *
 * Options required to start the test run
 *
 * @member {string} testFramework Test framework used by tests.
 * 
 * @member {string} deviceSelection Device selection string.
 * 
 * @member {string} [language] Language that should be used to run tests.
 * 
 * @member {string} [locale] Locale that should be used to run tests.
 * 
 * @member {string} [testSeries] Name of the test series.
 * 
 * @member {object} [testParameters] A JSON dictionary with additional test
 * parameters
 * 
 */
export interface TestCloudStartTestRunOptions {
  testFramework: string;
  deviceSelection: string;
  language?: string;
  locale?: string;
  testSeries?: string;
  testParameters?: any;
}

/**
 * @class
 * Initializes a new instance of the TestCloudStartTestRunResult class.
 * @constructor
 * @summary Test Cloud Test Run Start Result
 *
 * Result of starting a test run
 *
 * @member {array} [acceptedDevices] List with names of accepted devices
 * 
 * @member {array} [rejectedDevices] List with names and descriptions of
 * rejected devices
 * 
 */
export interface TestCloudStartTestRunResult {
  acceptedDevices?: string[];
  rejectedDevices?: string[];
}

/**
 * @class
 * Initializes a new instance of the TestRunState class.
 * @constructor
 * @summary Test Run State
 *
 * Current status of a test run
 *
 * @member {array} [message] Multi-line message that describes the status
 * 
 * @member {number} [waitTime] Time (in seconds) that the client should wait
 * for before checking the status again
 * 
 * @member {number} [exitCode] Exit code for the client
 * 
 */
export interface TestRunState {
  message?: string[];
  waitTime?: number;
  exitCode?: number;
}

/**
 * @class
 * Initializes a new instance of the PerformanceReport class.
 * @constructor
 * @summary Performance Report
 *
 * Report data for a single test (a.k.a. scenario)
 *
 * @member {string} [deviceSnapshotId]
 * 
 * @member {object} [performanceData]
 * 
 * @member {array} [performanceData.steps]
 * 
 * @member {number} [performanceData.elapsedSecsEnd]
 * 
 * @member {number} [performanceData.elapsedSecsStart]
 * 
 * @member {number} [performanceData.elapsedSecs]
 * 
 * @member {string} [performanceData.id]
 * 
 * @member {object} [video]
 * 
 * @member {object} [video.videoMetadata]
 * 
 * @member {array} [video.videoMetadata.events]
 * 
 * @member {string} [video.videoUrl]
 * 
 */
export interface PerformanceReport {
  deviceSnapshotId?: string;
  performanceData?: PerformanceReportPerformanceData;
  video?: PerformanceReportVideo;
}

/**
 * @class
 * Initializes a new instance of the PerformanceReportPerformanceData class.
 * @constructor
 * @member {array} [steps]
 * 
 * @member {number} [elapsedSecsEnd]
 * 
 * @member {number} [elapsedSecsStart]
 * 
 * @member {number} [elapsedSecs]
 * 
 * @member {string} [id]
 * 
 */
export interface PerformanceReportPerformanceData {
  steps?: PerformanceReportPerformanceDataStepsItem[];
  elapsedSecsEnd?: number;
  elapsedSecsStart?: number;
  elapsedSecs?: number;
  id?: string;
}

/**
 * @class
 * Initializes a new instance of the PerformanceReportPerformanceDataStepsItem class.
 * @constructor
 * @member {number} [avgCpu]
 * 
 * @member {number} [avgMem]
 * 
 * @member {array} [samples]
 * 
 * @member {number} [elapsedSecsEnd]
 * 
 * @member {number} [elapsedSecsStart]
 * 
 * @member {number} [elapsedSecs]
 * 
 * @member {string} [name]
 * 
 * @member {string} [id]
 * 
 */
export interface PerformanceReportPerformanceDataStepsItem {
  avgCpu?: number;
  avgMem?: number;
  samples?: PerformanceReportPerformanceDataStepsItemSamplesItem[];
  elapsedSecsEnd?: number;
  elapsedSecsStart?: number;
  elapsedSecs?: number;
  name?: string;
  id?: string;
}

/**
 * @class
 * Initializes a new instance of the PerformanceReportPerformanceDataStepsItemSamplesItem class.
 * @constructor
 * @member {number} [cpu]
 * 
 * @member {number} [mem]
 * 
 * @member {number} [elapsedSecs]
 * 
 */
export interface PerformanceReportPerformanceDataStepsItemSamplesItem {
  cpu?: number;
  mem?: number;
  elapsedSecs?: number;
}

/**
 * @class
 * Initializes a new instance of the PerformanceReportVideo class.
 * @constructor
 * @member {object} [videoMetadata]
 * 
 * @member {array} [videoMetadata.events]
 * 
 * @member {string} [videoUrl]
 * 
 */
export interface PerformanceReportVideo {
  videoMetadata?: PerformanceReportVideoVideoMetadata;
  videoUrl?: string;
}

/**
 * @class
 * Initializes a new instance of the PerformanceReportVideoVideoMetadata class.
 * @constructor
 * @member {array} [events]
 * 
 */
export interface PerformanceReportVideoVideoMetadata {
  events?: PerformanceReportVideoVideoMetadataEventsItem[];
}

/**
 * @class
 * Initializes a new instance of the PerformanceReportVideoVideoMetadataEventsItem class.
 * @constructor
 * @member {string} [id]
 * 
 * @member {number} [millis]
 * 
 * @member {string} [name]
 * 
 * @member {string} [type]
 * 
 */
export interface PerformanceReportVideoVideoMetadataEventsItem {
  id?: string;
  millis?: number;
  name?: string;
  type?: string;
}

/**
 * @class
 * Initializes a new instance of the Permission class.
 * @constructor
 * @member {string} [name]
 * 
 * @member {string} [level]
 * 
 */
export interface Permission {
  name?: string;
  level?: string;
}

/**
 * @class
 * Initializes a new instance of the Table class.
 * @constructor
 * @member {string} [name]
 * 
 * @member {array} [permissions]
 * 
 * @member {object} [extendedSettings]
 * 
 * @member {array} [columns]
 * 
 */
export interface Table {
  name?: string;
  permissions?: Permission[];
  extendedSettings?: { [propertyName: string]: string };
  columns?: TableColumn[];
}

/**
 * @class
 * Initializes a new instance of the TableColumn class.
 * @constructor
 * @member {string} [name]
 * 
 * @member {boolean} [isIndexed]
 * 
 * @member {string} [type] Possible values include: 'String', 'Boolean',
 * 'Number', 'Date', 'Version', 'Custom'
 * 
 * @member {boolean} [canDelete]
 * 
 * @member {boolean} [canUpdateIndex]
 * 
 */
export interface TableColumn {
  name?: string;
  isIndexed?: boolean;
  type?: string;
  canDelete?: boolean;
  canUpdateIndex?: boolean;
}

/**
 * @class
 * Initializes a new instance of the ImportDataContainer class.
 * @constructor
 * @member {string} [csvData]
 * 
 */
export interface ImportDataContainer {
  csvData?: string;
}

/**
 * @class
 * Initializes a new instance of the Deployment class.
 * @constructor
 * @member {string} [key]
 * 
 * @member {string} name
 * 
 * @member {object} [latestRelease]
 * 
 * @member {string} [latestRelease.targetBinaryRange]
 * 
 * @member {string} [latestRelease.blobUrl]
 * 
 * @member {string} [latestRelease.description]
 * 
 * @member {boolean} [latestRelease.isDisabled]
 * 
 * @member {boolean} [latestRelease.isMandatory]
 * 
 * @member {string} [latestRelease.label]
 * 
 * @member {string} [latestRelease.originalDeployment] Set on 'Promote'
 * 
 * @member {string} [latestRelease.originalLabel] Set on 'Promote' and
 * 'Rollback'
 * 
 * @member {string} [latestRelease.hash]
 * 
 * @member {string} [latestRelease.releasedBy]
 * 
 * @member {string} [latestRelease.releaseMethod] The release method is
 * unknown if unspecified. Possible values include: 'Upload', 'Promote',
 * 'Rollback'
 * 
 * @member {number} [latestRelease.rollout]
 * 
 * @member {number} [latestRelease.size]
 * 
 * @member {number} [latestRelease.uploadTime]
 * 
 */
export interface Deployment {
  key?: string;
  name: string;
  latestRelease?: LiveUpdateRelease;
}

/**
 * @class
 * Initializes a new instance of the LiveUpdateRelease class.
 * @constructor
 * @member {string} [targetBinaryRange]
 * 
 * @member {string} [blobUrl]
 * 
 * @member {string} [description]
 * 
 * @member {boolean} [isDisabled]
 * 
 * @member {boolean} [isMandatory]
 * 
 * @member {string} [label]
 * 
 * @member {string} [originalDeployment] Set on 'Promote'
 * 
 * @member {string} [originalLabel] Set on 'Promote' and 'Rollback'
 * 
 * @member {string} [hash]
 * 
 * @member {string} [releasedBy]
 * 
 * @member {string} [releaseMethod] The release method is unknown if
 * unspecified. Possible values include: 'Upload', 'Promote', 'Rollback'
 * 
 * @member {number} [rollout]
 * 
 * @member {number} [size]
 * 
 * @member {number} [uploadTime]
 * 
 */
export interface LiveUpdateRelease {
  targetBinaryRange?: string;
  blobUrl?: string;
  description?: string;
  isDisabled?: boolean;
  isMandatory?: boolean;
  label?: string;
  originalDeployment?: string;
  originalLabel?: string;
  hash?: string;
  releasedBy?: string;
  releaseMethod?: string;
  rollout?: number;
  size?: number;
  uploadTime?: number;
}

/**
 * @class
 * Initializes a new instance of the DeploymentModification class.
 * @constructor
 * @member {string} name
 * 
 */
export interface DeploymentModification {
  name: string;
}

/**
 * @class
 * Initializes a new instance of the LiveUpdateReleaseModification class.
 * @constructor
 * @member {string} [targetBinaryRange]
 * 
 * @member {string} [description]
 * 
 * @member {boolean} [isDisabled]
 * 
 * @member {boolean} [isMandatory]
 * 
 * @member {number} [rollout]
 * 
 */
export interface LiveUpdateReleaseModification {
  targetBinaryRange?: string;
  description?: string;
  isDisabled?: boolean;
  isMandatory?: boolean;
  rollout?: number;
}

/**
 * @class
 * Initializes a new instance of the LiveUpdateReleaseMetric class.
 * @constructor
 * @member {string} label
 * 
 * @member {number} active
 * 
 * @member {number} [downloaded]
 * 
 * @member {number} [failed]
 * 
 * @member {number} [installed]
 * 
 */
export interface LiveUpdateReleaseMetric {
  label: string;
  active: number;
  downloaded?: number;
  failed?: number;
  installed?: number;
}

/**
 * @class
 * Initializes a new instance of the LiveUpdateStatusMetricMetadata class.
 * @constructor
 * @member {string} [label]
 * 
 * @member {string} [appVersion]
 * 
 * @member {string} [previousDeploymentKey]
 * 
 * @member {string} [previousLabelOrAppVersion]
 * 
 * @member {string} [status]
 * 
 * @member {string} [clientUniqueId]
 * 
 */
export interface LiveUpdateStatusMetricMetadata {
  label?: string;
  appVersion?: string;
  previousDeploymentKey?: string;
  previousLabelOrAppVersion?: string;
  status?: string;
  clientUniqueId?: string;
}

/**
 * @class
 * Initializes a new instance of the AlertOperationResult class.
 * @constructor
 * Generic result for any alerting API operation
 *
 * @member {string} requestId Unique request identifier for tracking
 * 
 */
export interface AlertOperationResult {
  requestId: string;
}

/**
 * @class
 * Initializes a new instance of the AlertWebhook class.
 * @constructor
 * Alerting webhook
 *
 * @member {string} name display name of the webhook
 * 
 * @member {string} url target url of the webhook
 * 
 * @member {boolean} enabled Allows eanble/disable webhook
 * 
 * @member {boolean} callOnNewCrashGroup Shows if webhook is called on new
 * crash group created event
 * 
 * @member {boolean} callOnNewAppRelease Shows if webhook is called on new app
 * release event
 * 
 */
export interface AlertWebhook {
  name: string;
  url: string;
  enabled: boolean;
  callOnNewCrashGroup: boolean;
  callOnNewAppRelease: boolean;
}

/**
 * @class
 * Initializes a new instance of the AlertWebhookEntry class.
 * @constructor
 * Alerting webhook with ETag and IDs
 *
 * @member {string} [appId] The unique id (UUID) of the application
 * 
 * @member {string} webhookId The unique id (UUID) of the web hook
 * 
 * @member {string} eTag The ETag of the entry
 * 
 * @member {object} webhook
 * 
 * @member {string} [webhook.name] display name of the webhook
 * 
 * @member {string} [webhook.url] target url of the webhook
 * 
 * @member {boolean} [webhook.enabled] Allows eanble/disable webhook
 * 
 * @member {boolean} [webhook.callOnNewCrashGroup] Shows if webhook is called
 * on new crash group created event
 * 
 * @member {boolean} [webhook.callOnNewAppRelease] Shows if webhook is called
 * on new app release event
 * 
 */
export interface AlertWebhookEntry {
  appId?: string;
  webhookId: string;
  eTag: string;
  webhook: AlertWebhook;
}

/**
 * @class
 * Initializes a new instance of the AlertWebhookResult class.
 * @constructor
 * Alerting webhook entry wrapped as operation result
 *
 * @member {object} [webhookEntry]
 * 
 * @member {string} [webhookEntry.appId] The unique id (UUID) of the
 * application
 * 
 * @member {string} [webhookEntry.webhookId] The unique id (UUID) of the web
 * hook
 * 
 * @member {string} [webhookEntry.eTag] The ETag of the entry
 * 
 * @member {object} [webhookEntry.webhook]
 * 
 * @member {string} [webhookEntry.webhook.name] display name of the webhook
 * 
 * @member {string} [webhookEntry.webhook.url] target url of the webhook
 * 
 * @member {boolean} [webhookEntry.webhook.enabled] Allows eanble/disable
 * webhook
 * 
 * @member {boolean} [webhookEntry.webhook.callOnNewCrashGroup] Shows if
 * webhook is called on new crash group created event
 * 
 * @member {boolean} [webhookEntry.webhook.callOnNewAppRelease] Shows if
 * webhook is called on new app release event
 * 
 */
export interface AlertWebhookResult extends AlertOperationResult {
  webhookEntry?: AlertWebhookEntry;
}

/**
 * @class
 * Initializes a new instance of the AlertWebhooksResult class.
 * @constructor
 * List of alerting webhooks wrapped as operation result
 *
 * @member {array} [webhookEntries]
 * 
 */
export interface AlertWebhooksResult extends AlertOperationResult {
  webhookEntries?: AlertWebhookEntry[];
}

/**
 * @class
 * Initializes a new instance of the AlertWebhookPingResult class.
 * @constructor
 * Alerting webhook ping operation result
 *
 * @member {number} [responseStatusCode] HTTP status code returned in response
 * from calling webhook
 * 
 * @member {string} [responseReason] Reason returned in response from calling
 * webhook
 * 
 */
export interface AlertWebhookPingResult extends AlertOperationResult {
  responseStatusCode?: number;
  responseReason?: string;
}

/**
 * @class
 * Initializes a new instance of the AlertEmailSettings class.
 * @constructor
 * Alerting Email Settings
 *
 * @member {array} settings The settings the user has for the app
 * 
 */
export interface AlertEmailSettings {
  settings: EventSetting[];
}

/**
 * @class
 * Initializes a new instance of the EventSetting class.
 * @constructor
 * Event Setting
 *
 * @member {string} value Frequency of event. Possible values include:
 * 'Disabled', 'Individual', 'Daily', 'DailyAndIndividual', 'Default'
 * 
 * @member {string} [defaultValue] Default frequency of event. Possible values
 * include: 'Disabled', 'Individual', 'Daily', 'DailyAndIndividual'
 * 
 */
export interface EventSetting {
  value: string;
  defaultValue?: string;
}

/**
 * @class
 * Initializes a new instance of the AlertUserEmailSettingsResult class.
 * @constructor
 * Alerting Default Email Settings of the user
 *
 * @member {string} [eTag] The ETag of the entity
 * 
 * @member {boolean} [enabled] Allows to forcefully disable emails on app or
 * user level
 * 
 * @member {string} [userId] The unique id (UUID) of the user
 * 
 * @member {array} [settings] The settings the user has for the app
 * 
 */
export interface AlertUserEmailSettingsResult extends AlertOperationResult {
  eTag?: string;
  enabled?: boolean;
  userId?: string;
  settings?: EventSetting[];
}

/**
 * @class
 * Initializes a new instance of the AlertUserAppEmailSettingsResult class.
 * @constructor
 * Alerting Email Settings of the user for a particular app
 *
 * @member {string} [appId] Application ID
 * 
 * @member {boolean} [userEnabled] A flag indicating if settings are enabled
 * at user/global level
 * 
 */
export interface AlertUserAppEmailSettingsResult extends AlertUserEmailSettingsResult {
  appId?: string;
  userEnabled?: boolean;
}

/**
 * @class
 * Initializes a new instance of the AlertingEvent class.
 * @constructor
 * Alerting event
 *
 * @member {string} eventTimestamp ISO 8601 date time when event was generated
 * 
 * @member {string} eventId A unique identifier for this event instance.
 * Useful for deduplication
 * 
 * @member {number} eventVersion Versioning for this eventType. Default value:
 * 1 .
 * 
 * @member {object} [properties] Obsolete. Use emailProperties.
 * 
 * @member {object} [emailProperties] Email properties for a specific event
 * 
 */
export interface AlertingEvent {
  eventTimestamp: string;
  eventId: string;
  eventVersion: number;
  properties?: any;
  emailProperties?: any;
}

/**
 * @class
 * Initializes a new instance of the NewCrashGroupAlertingEvent class.
 * @constructor
 * New crash group alerting event
 *
 * @member {string} eventId A unique identifier for this event instance.
 * Useful for deduplication
 * 
 * @member {string} eventTimestamp ISO 8601 date time when event was generated
 * 
 * @member {number} eventVersion Versioning for this eventType. Default value:
 * 1 .
 * 
 * @member {object} [properties] Obsolete. Use emailProperties.
 * 
 * @member {object} [emailProperties] Email properties for a specific event
 * 
 * @member {object} [newCrashGroupWebhookProperties]
 * 
 * @member {string} [newCrashGroupWebhookProperties.publicIdentifier]
 * 
 * @member {object} [newCrashGroupWebhookProperties.crashReason]
 * 
 * @member {string} [newCrashGroupWebhookProperties.crashReason.id]
 * 
 * @member {string} [newCrashGroupWebhookProperties.crashReason.appId]
 * 
 * @member {string} [newCrashGroupWebhookProperties.crashReason.createdAt]
 * 
 * @member {string} [newCrashGroupWebhookProperties.crashReason.updatedAt]
 * 
 * @member {number} [newCrashGroupWebhookProperties.crashReason.status]
 * 
 * @member {string} [newCrashGroupWebhookProperties.crashReason.reason]
 * 
 * @member {string} [newCrashGroupWebhookProperties.crashReason.lastCrashAt]
 * 
 * @member {string} [newCrashGroupWebhookProperties.crashReason.appBuild]
 * 
 * @member {string} [newCrashGroupWebhookProperties.crashReason.appVersion]
 * 
 * @member {string} [newCrashGroupWebhookProperties.crashReason.method]
 * 
 * @member {string} [newCrashGroupWebhookProperties.crashReason.file]
 * 
 * @member {string} [newCrashGroupWebhookProperties.crashReason.class]
 * 
 * @member {string} [newCrashGroupWebhookProperties.crashReason.line]
 * 
 * @member {string} [newCrashGroupWebhookProperties.title]
 * 
 * @member {string} [newCrashGroupWebhookProperties.text]
 * 
 * @member {string} [newCrashGroupWebhookProperties.url]
 * 
 */
export interface NewCrashGroupAlertingEvent {
  eventId: string;
  eventTimestamp: string;
  eventVersion: number;
  properties?: any;
  emailProperties?: any;
  newCrashGroupWebhookProperties?: NewCrashGroupWebhookProperties;
}

/**
 * @class
 * Initializes a new instance of the NewCrashGroupWebhookProperties class.
 * @constructor
 * Webhook properties for new crash group alerting event
 *
 * @member {string} publicIdentifier
 * 
 * @member {object} crashReason
 * 
 * @member {string} [crashReason.id]
 * 
 * @member {string} [crashReason.appId]
 * 
 * @member {string} [crashReason.createdAt]
 * 
 * @member {string} [crashReason.updatedAt]
 * 
 * @member {number} [crashReason.status]
 * 
 * @member {string} [crashReason.reason]
 * 
 * @member {string} [crashReason.lastCrashAt]
 * 
 * @member {string} [crashReason.appBuild]
 * 
 * @member {string} [crashReason.appVersion]
 * 
 * @member {string} [crashReason.method]
 * 
 * @member {string} [crashReason.file]
 * 
 * @member {string} [crashReason.class]
 * 
 * @member {string} [crashReason.line]
 * 
 * @member {string} title
 * 
 * @member {string} text
 * 
 * @member {string} url
 * 
 */
export interface NewCrashGroupWebhookProperties {
  publicIdentifier: string;
  crashReason: NewCrashGroupWebhookPropertiesCrashReason;
  title: string;
  text: string;
  url: string;
}

/**
 * @class
 * Initializes a new instance of the NewCrashGroupWebhookPropertiesCrashReason class.
 * @constructor
 * @member {string} [id]
 * 
 * @member {string} [appId]
 * 
 * @member {string} [createdAt]
 * 
 * @member {string} [updatedAt]
 * 
 * @member {number} [status]
 * 
 * @member {string} [reason]
 * 
 * @member {string} [lastCrashAt]
 * 
 * @member {string} [appBuild]
 * 
 * @member {string} [appVersion]
 * 
 * @member {string} [method]
 * 
 * @member {string} [file]
 * 
 * @member {string} [class]
 * 
 * @member {string} [line]
 * 
 */
export interface NewCrashGroupWebhookPropertiesCrashReason {
  id?: string;
  appId?: string;
  createdAt?: string;
  updatedAt?: string;
  status?: number;
  reason?: string;
  lastCrashAt?: string;
  appBuild?: string;
  appVersion?: string;
  method?: string;
  file?: string;
  class?: string;
  line?: string;
}

/**
 * @class
 * Initializes a new instance of the NewAppReleaseAlertingEvent class.
 * @constructor
 * New app release alerting event
 *
 * @member {array} [userIds] List of users who need to receive an email
 * notification. If this is not null, then only sending emails will be
 * triggered even if the event requires calling webhooks or doing other
 * actions.
 * 
 * @member {object} [newAppReleaseWebhookProperties]
 * 
 * @member {string} [newAppReleaseWebhookProperties.publicIdentifier]
 * 
 * @member {object} [newAppReleaseWebhookProperties.appVersion]
 * 
 * @member {string} [newAppReleaseWebhookProperties.appVersion.version]
 * 
 * @member {string} [newAppReleaseWebhookProperties.appVersion.shortversion]
 * 
 * @member {string} [newAppReleaseWebhookProperties.appVersion.title]
 * 
 * @member {number} [newAppReleaseWebhookProperties.appVersion.timestamp]
 * 
 * @member {number} [newAppReleaseWebhookProperties.appVersion.appsize]
 * 
 * @member {string} [newAppReleaseWebhookProperties.appVersion.notes]
 * 
 * @member {boolean} [newAppReleaseWebhookProperties.appVersion.mandatory]
 * 
 * @member {boolean} [newAppReleaseWebhookProperties.appVersion.external]
 * 
 * @member {string} [newAppReleaseWebhookProperties.appVersion.deviceFamily]
 * 
 * @member {number} [newAppReleaseWebhookProperties.appVersion.id]
 * 
 * @member {string} [newAppReleaseWebhookProperties.appVersion.appId]
 * 
 * @member {string}
 * [newAppReleaseWebhookProperties.appVersion.minimumOsVersion]
 * 
 * @member {string} [newAppReleaseWebhookProperties.appVersion.buildUrl]
 * 
 * @member {number} [newAppReleaseWebhookProperties.appVersion.status]
 * 
 * @member {string} [newAppReleaseWebhookProperties.appVersion.expiredAt]
 * 
 * @member {string} [newAppReleaseWebhookProperties.appVersion.createdAt]
 * 
 * @member {string} [newAppReleaseWebhookProperties.appVersion.updatedAt]
 * 
 * @member {string} [newAppReleaseWebhookProperties.appVersion.sdkVersion]
 * 
 * @member {boolean} [newAppReleaseWebhookProperties.appVersion.blockCrashes]
 * 
 * @member {string} [newAppReleaseWebhookProperties.appVersion.appOwner]
 * 
 * @member {string} [newAppReleaseWebhookProperties.title]
 * 
 * @member {string} [newAppReleaseWebhookProperties.text]
 * 
 * @member {string} [newAppReleaseWebhookProperties.url]
 * 
 */
export interface NewAppReleaseAlertingEvent extends AlertingEvent {
  userIds?: string[];
  newAppReleaseWebhookProperties?: NewAppReleaseWebhookProperties;
}

/**
 * @class
 * Initializes a new instance of the NewAppReleaseWebhookProperties class.
 * @constructor
 * Webhook properties for new app release alerting event
 *
 * @member {string} publicIdentifier
 * 
 * @member {object} appVersion
 * 
 * @member {string} [appVersion.version]
 * 
 * @member {string} [appVersion.shortversion]
 * 
 * @member {string} [appVersion.title]
 * 
 * @member {number} [appVersion.timestamp]
 * 
 * @member {number} [appVersion.appsize]
 * 
 * @member {string} [appVersion.notes]
 * 
 * @member {boolean} [appVersion.mandatory]
 * 
 * @member {boolean} [appVersion.external]
 * 
 * @member {string} [appVersion.deviceFamily]
 * 
 * @member {number} [appVersion.id]
 * 
 * @member {string} [appVersion.appId]
 * 
 * @member {string} [appVersion.minimumOsVersion]
 * 
 * @member {string} [appVersion.buildUrl]
 * 
 * @member {number} [appVersion.status]
 * 
 * @member {string} [appVersion.expiredAt]
 * 
 * @member {string} [appVersion.createdAt]
 * 
 * @member {string} [appVersion.updatedAt]
 * 
 * @member {string} [appVersion.sdkVersion]
 * 
 * @member {boolean} [appVersion.blockCrashes]
 * 
 * @member {string} [appVersion.appOwner]
 * 
 * @member {string} title
 * 
 * @member {string} text
 * 
 * @member {string} url
 * 
 */
export interface NewAppReleaseWebhookProperties {
  publicIdentifier: string;
  appVersion: NewAppReleaseWebhookPropertiesAppVersion;
  title: string;
  text: string;
  url: string;
}

/**
 * @class
 * Initializes a new instance of the NewAppReleaseWebhookPropertiesAppVersion class.
 * @constructor
 * @member {string} [version]
 * 
 * @member {string} [shortversion]
 * 
 * @member {string} [title]
 * 
 * @member {number} [timestamp]
 * 
 * @member {number} [appsize]
 * 
 * @member {string} [notes]
 * 
 * @member {boolean} [mandatory]
 * 
 * @member {boolean} [external]
 * 
 * @member {string} [deviceFamily]
 * 
 * @member {number} [id]
 * 
 * @member {string} [appId]
 * 
 * @member {string} [minimumOsVersion]
 * 
 * @member {string} [buildUrl]
 * 
 * @member {number} [status]
 * 
 * @member {string} [expiredAt]
 * 
 * @member {string} [createdAt]
 * 
 * @member {string} [updatedAt]
 * 
 * @member {string} [sdkVersion]
 * 
 * @member {boolean} [blockCrashes]
 * 
 * @member {string} [appOwner]
 * 
 */
export interface NewAppReleaseWebhookPropertiesAppVersion {
  version?: string;
  shortversion?: string;
  title?: string;
  timestamp?: number;
  appsize?: number;
  notes?: string;
  mandatory?: boolean;
  external?: boolean;
  deviceFamily?: string;
  id?: number;
  appId?: string;
  minimumOsVersion?: string;
  buildUrl?: string;
  status?: number;
  expiredAt?: string;
  createdAt?: string;
  updatedAt?: string;
  sdkVersion?: string;
  blockCrashes?: boolean;
  appOwner?: string;
}

/**
 * @class
 * Initializes a new instance of the EventResponseResult class.
 * @constructor
 * Object returned in response to accepting an event occurance
 *
 */
export interface EventResponseResult extends AlertOperationResult {
}

/**
 * @class
 * Initializes a new instance of the AlertingError class.
 * @constructor
 * Alerting service error
 *
 * @member {number} [code] The status code return by the API. It can be 400 or
 * 404 or 409 or 500.
 * 
 * @member {string} [message] The reason for the request failed
 * 
 */
export interface AlertingError extends AlertOperationResult {
  code?: number;
  message?: string;
}

/**
 * @class
 * Initializes a new instance of the App class.
 * @constructor
 * @member {string} [description] A short text describing the app
 * 
 * @member {string} displayName The descriptive name of the app. This can
 * contain any characters
 * 
 * @member {string} [name] The name of the app used in URLs
 * 
 * @member {string} os The OS the app will be running on. Possible values
 * include: 'Android', 'iOS', 'Tizen', 'Windows'
 * 
 * @member {string} platform The platform of the app. Possible values include:
 * 'Cordova', 'Java', 'Objective-C-Swift', 'React-Native', 'UWP', 'Xamarin'
 * 
 */
export interface App {
  description?: string;
  displayName: string;
  name?: string;
  os: string;
  platform: string;
}

/**
 * @class
 * Initializes a new instance of the ListOKResponseItem class.
 * @constructor
 * @member {string} [displayName] The display name of the organization
 * 
 * @member {string} [name] The slug name of the organization
 * 
 * @member {string} [collaboratorRole] The role the current user has within
 * the organization
 * 
 * @member {object} [collaboratorsCount] The number of users that are part of
 * this organization
 * 
 * @member {string} [origin] The creation origin of this organization.
 * Possible values include: 'mobile-center', 'hockeyapp'
 * 
 */
export interface ListOKResponseItem {
  displayName?: string;
  name?: string;
  collaboratorRole?: string;
  collaboratorsCount?: any;
  origin?: string;
}

/**
 * @class
 * Initializes a new instance of the CrashGroups class.
 * @constructor
 * @member {array} crashGroupsProperty
 * 
 */
export interface CrashGroups {
  crashGroupsProperty: CrashGroupAndVersion[];
}
